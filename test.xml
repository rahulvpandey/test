<?xml version="1.0" encoding="UTF-8"?><unload unload_date="2020-07-23 15:12:06">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="Global">global</application>
<application_name>Global</application_name>
<application_scope>global</application_scope>
<application_version/>
<collisions/>
<commit_date/>
<deleted/>
<description>Automatically created by the system</description>
<inserted/>
<name> New Horizon 02_07_2020_Default</name>
<origin_sys_id/>
<parent display_value=""/>
<release_date/>
<remote_base_update_set display_value=""/>
<remote_parent_id/>
<remote_sys_id>408ec1c7db01101011699fd2ca9619e6</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>c2e619b7dbc2101011699fd2ca96191b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_20680785db9cd01011699fd2ca9619b2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $rootScope) {
    var grnItem;
    //$scope.subTotal = 0;
    var selectIndex;
    var poItems = [];

    $scope.recreateList = function(id) {
        grnItem = document.getElementById(id).value.toString();
        selectIndex = id.split("_");
        selectIndex = selectIndex[1];
        if (checkIfotherSelected(selectIndex, grnItem)) {
            if (grnItem != "") {
                $scope.data.refreshlist = true;
                $scope.data.selectedItems = poItems;
                $scope.data.selectedGRNtem = grnItem;
                $scope.server.update().then(function(response) {
                    refurbish(response.resovedItems);
                });
            } else {
                $scope.data.refurbishBlank = true;
                $scope.data.selectedItems1 = poItems;
                $scope.data.selectedPO1 = $rootScope.poNumber;
                $scope.server.update().then(function(response) {
                    refurbish(response.resovedItems1);
                });
            }
        }
    }

    function checkIfotherSelected(selectIndex, selectedBlank) {
        if (selectedBlank == "")
            return true;
        var isValid = true;
        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            if (document.getElementById("grn_" + [i]).value.toString() != "" &amp;&amp; i != selectIndex)
                isValid = false;
        }
        return isValid;
    }

    function refurbish(object) {

        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            document.querySelector('#grn_' + [i]).innerHTML = '';
            var grnSelect1 = document.getElementById("grn_" + i);
            var option1 = document.createElement("option");
            option1.text = "Select Value";
            option1.value = "";
            option1.selected = "selected";
            grnSelect1.add(option1);
            var grnSelect = document.getElementById("grn_" + i);
            for (var grn = 0; grn &lt; object.length; grn++) {
                var decodeValue = JSON.parse(object[grn]);
                var option = document.createElement("option");
                option.text = decodeValue.description;
                option.value = decodeValue.sys_id;
                if (i == selectIndex &amp;&amp; decodeValue.sys_id == grnItem)
                    option.selected = "selected";
                grnSelect.add(option);
            }
        }
    }
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.subtotal');
    }, function(value) {
        calculateTotal();
    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.po_details');
    }, function(value) {
        $rootScope.poNumber = value;
    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.cgst');
    }, function(value) {
        $scope.page.g_form.setValue("invoice_header.sgst", $scope.page.g_form.getValue('invoice_header.cgst'));
        calculateTotal();

    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.sgst');
    }, function(value) {
        if ($scope.page.g_form.getValue("invoice_header.cgst") == "") {
            $scope.page.g_form.setValue("invoice_header.cgst", $scope.page.g_form.getValue('invoice_header.sgst'));
        }
        calculateTotal();
    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.igst');
    }, function(value) {
        calculateTotal();
    });

    function isNumber(n) {
        return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
    }
    var c = this;
    c.showTable = false;
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.po_details');
    }, function(value) {
        console.log(value);
        if ((value != "")) {
            c.showTable = true;
        } else {
            c.showTable = false;
        }
    });
    $(document).ready(function() {
        var counter = 0;
        var polItems = c.data.poLineItems;
        $rootScope.$on('itemsSelected', function(event, obj) {
            for (var z = 1; z &lt; document.getElementById("myTable").length; z++) {
                document.getElementById("myTable").deleteRow(z);
            }
            c.showTable = true;
            for (var i = 0; i &lt; obj.length; i++) {
                addRowsSelected();
            }
            for (var j = 0; j &lt; obj.length; j++) {
                var decodeJson = JSON.parse(obj[j]);
                poItems.push(decodeJson.id_);
                document.getElementById("number_" + j).value = decodeJson.id_;
                document.getElementById("description_" + j).value = decodeJson.description_;
                document.getElementById("quantity_" + j).value = decodeJson.quantity_;
                document.getElementById("Maxquantity_" + j).value = decodeJson.Maxquantity_;
                document.getElementById("amount_" + j).value = decodeJson.amount_;
                document.getElementById("unit_price_" + j).value = decodeJson.unit_price_;
                var poltSelect = document.getElementById("po_line_item_" + j);
                for (var pol = 0; pol &lt; obj.length; pol++) {
                    var decodeValuePO = JSON.parse(obj[pol]);
                    var option = document.createElement("option");
                    option.text = decodeValuePO.description_;
                    option.value = decodeValuePO.po_line_item_;
                    poltSelect.add(option);
                }
                var grnSelect = document.getElementById("grn_" + j);
                for (var grn = 0; grn &lt; decodeJson.grn_.length; grn++) {
                    var option = document.createElement("option");
                    var decodeValueGRN = JSON.parse(decodeJson.grn_[grn]);
                    option.text = decodeValueGRN.description;
                    option.value = decodeValueGRN.sys_id;
                    grnSelect.add(option);
                }
            }
            $scope.saveData();
        });

        function addRowsSelected() {
            var newRow = $("&lt;tr&gt;");
            var cols = "";
            var rowNumber = counter + 1;
            cols += '&lt;td&gt;&lt;input type="text" id="number_' + counter + '"  value="" class="form-control" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" id="Maxquantity_' + counter + '"  value="" class="" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData()" id="description_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="quantity_' + counter + '" /&gt;&lt;/td&gt;';

            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="unit_price_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="amount_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select class="form-control dynamicMyTable" id="po_line_item_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select class="form-control dynamicMyTable" id="grn_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;';
            newRow.append(cols);
            $("table.order-list").append(newRow);
            counter++;
        }

        function addRowsPO() {
            var newRow = $("&lt;tr&gt;");
            var cols = "";
            var rowNumber = counter + 1;
            cols += '&lt;td&gt;&lt;input type="text" id="number_' + counter + '"  value="" class="form-control" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" id="Maxquantity_' + counter + '"  value="" class="" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData()" id="description_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="quantity_' + counter + '" /&gt;&lt;/td&gt;';

            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="unit_price_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control dynamicMyTable" onchange="saveData(this.id)" id="amount_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select class="form-control dynamicMyTable" id="po_line_item_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;';
            for (var l = 0; l &lt; polItems.length; l++) {
                cols += '&lt;option value=' + polItems[l].polID + '&gt;' + polItems[l].poDescription + '&lt;/option&gt;';
            }
            cols += '&lt;/select&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select class="form-control dynamicMyTable" id="grn_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;';
            newRow.append(cols);
            $("table.order-list").append(newRow);
            counter++;
        }

        if ($scope.page.g_form.getValue('po_input') != "") {
            var lineItemObj = JSON.parse("["+$scope.page.g_form.getValue('po_input')+"]");
            fillData(lineItemObj);
        }

        function fillData(obj) {
            var canWrite = c.data.pocanWrite;
            c.showTable = true;
            console.log(obj.length);
            for (var i = 0; i &lt; obj.length; i++) {
                addRowsPO();
            }
            for (var j = 0; j &lt; obj.length; j++) {
                var decodeJson = obj[j];
                console.log("Description LI-" + decodeJson.description);
                document.getElementById("number_" + j).value = decodeJson.id;
                document.getElementById("description_" + j).value = decodeJson.description;
                document.getElementById("Maxquantity_" + j).value = decodeJson.Maxquantity_;
                document.getElementById("quantity_" + j).value = decodeJson.quantity;
                document.getElementById("amount_" + j).value = decodeJson.amount;
                document.getElementById("unit_price_" + j).value = decodeJson.unit_price;
                var poLineItem = document.getElementById("po_line_item_" + j);
                for (var k = 0; k &lt; polItems.length; k++) {
                    if (polItems[k].polID == decodeJson.po_line_item) {
                        var polIndex = k;
                        poLineItem.value = decodeJson.po_line_item;
                        poLineItem.selectedIndex = polIndex + 1;
                    }
                }

                var grnSelect = document.getElementById("grn_" + j);
                var option = document.createElement("option");
                option.text = decodeJson.grn_text;
                option.value = decodeJson.grn;
                option.selected = "selected";
                grnSelect.add(option);
            }
            if (!canWrite) {
                makeReadonly1();
            }
        }

        function makeReadonly1() {
            var el = document.getElementsByClassName("dynamicMyTable");
            for (var i = 0; i &lt; el.length; i++) {
                el[i].disabled = true;
            }
        }

    });
    $scope.saveData = function(id) {
        if (id!=undefined &amp;&amp; id.indexOf("po_line_item_") &gt;= 0) {
            $scope.data.selectedpolID = document.getElementById(id).value.toString();
            var elIndex = id.split("_");
            $scope.server.update().then(function(response) {
				var res=response.poLineItem;
				console.log("Line Item Response-"+JSON.stringify(res));
                document.getElementById("description_" + elIndex[3]).value = res.poDescription;
                document.getElementById("Maxquantity_" + elIndex[3]).value = res.Maxquantity_;
                document.getElementById("quantity_" + elIndex[3]).value = res.quantity;
                document.getElementById("unit_price_" + elIndex[3]).value = res.unit_price;
                document.getElementById("amount_" + elIndex[3]).value = res.amount;
            });
        }

        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};

        for (var i = 0; i &lt; tableLength; i++) {

            rowData.id = document.getElementById("number_" + [i]).value.toString();
            rowData.description = document.getElementById("description_" + [i]).value.toString();
            rowData.quantity = document.getElementById("quantity_" + [i]).value.toString();
			rowData.Maxquantity_ = document.getElementById("Maxquantity_" + [i]).value.toString();
            rowData.unit_price = document.getElementById("unit_price_" + [i]).value.toString();
            rowData.amount = document.getElementById("amount_" + [i]).value.toString();
            rowData.grn = document.getElementById("grn_" + [i]).value.toString();
            if (getSelectedText("grn_" + [i]))
                rowData.grn_text = getSelectedText("grn_" + [i]).toString();
            else
                rowData.grn_text = "";

            rowData.po_line_item = document.getElementById("po_line_item_" + [i]).value.toString();
            if (getSelectedText("po_line_item_" + [i]))
                rowData.po_line_item_text = getSelectedText("po_line_item_" + [i]).toString();
            else
                rowData.po_line_item_text = "";

            tableDataArray.push(JSON.stringify(rowData));
        }
        console.log(tableDataArray);
        var g_form = $scope.page.g_form;
        if (!checkDuplicate(tableDataArray, 'grn', id)) {
            g_form.clearMessages();
            g_form.clearValue("po_input");
            g_form.setValue("po_input", tableDataArray.toString());
            calculatesubTotal();
            calculateTotal();
        } else
            $scope.errorHandler("You can not use same GRN multiple times");
    }

    $scope.errorHandler = function(message) {
        $scope.page.g_form.addErrorMessage(message);
    }

    function checkDuplicate(tableData, field, id) {
        var array = JSON.parse("[" + tableData + "]");
        var hasDuplicate = false;
        var valueArray = [];
        for (var i = 0; i &lt; array.length; i++) {
            if (valueArray != "" || typeof valueArray != "undefined") {
                if (valueArray.indexOf(array[i][field]) &gt; -1 &amp;&amp; array[i][field] != "") {
                    hasDuplicate = true;
                    document.getElementById(id).value = "";
                    break;
                }
            }
            valueArray.push(array[i][field]);
        }
        return hasDuplicate;
    }

    function getSelectedText(elementId) {
        var elt = document.getElementById(elementId);

        if (elt.selectedIndex == -1)
            return null;

        return elt.options[elt.selectedIndex].text;
    }

    function calculatesubTotal() {
        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        var subtotal = 0;
        for (var i = 0; i &lt; tableLength; i++) {
            if (document.getElementById("amount_" + [i]).value != "" || typeof document.getElementById("grn_" + [i]).value != "undefined")
                subtotal = subtotal + parseFloat(document.getElementById("amount_" + [i]).value);
        }
        var g_form = $scope.page.g_form;
        g_form.setValue("invoice_header.subtotal", subtotal);

    }

    function calculateTotal() {
        var g_form = $scope.page.g_form;
        if (g_form.getValue("invoice_header.po_details") != "") {
            g_form.clearValue("invoice_header.total");
            var total = 0;
            var igst = g_form.getDecimalValue("invoice_header.igst");
            var cgst = g_form.getDecimalValue("invoice_header.cgst");
            var sgst = g_form.getDecimalValue("invoice_header.sgst");
            var subTotal = g_form.getDecimalValue("invoice_header.subtotal")
            total = igst + cgst + sgst + subTotal;

            g_form.setValue("invoice_header.total", total);
        }
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;line_iten_input_form&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;PO Input - Form&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    if (input.refreshlist) {
        data.resovedItems = resolveItems(input.selectedItems, input.selectedGRNtem);
    }
    if (input.refurbishBlank) {
        data.resovedItems1 = resolveItems1(input.selectedItems1, input.selectedPO1);
    }
	
	var poGR = new GlideRecord("x_478823_nhorizon_request");
    poGR.get($sp.getParameter("sys_id"));
	data.pocanWrite=poGR.canWrite();
	if(poGR.state=='101'){
		data.pocanWrite=false;
	}
	data.poLineItems=getPOItems(poGR.invoice_header.po_details);
	
	data.poLineItem=getPOLineItem(input.selectedpolID);
	
})();

function getPOItems(poId){
	var polArr=[];
	var polGr=new GlideRecord("x_478823_nhorizon_po_line_item");
	polGr.addQuery("po_header",poId);
	polGr.query();
	while(polGr.next()){
		var polObj={};
		polObj.poDescription=polGr.description+'';
		polObj.polID=polGr.sys_id+'';
		polArr.push(polObj);
	}
	return polArr;
}

function getPOLineItem(polId){
	var polObj={};
	var polGr=new GlideRecord("x_478823_nhorizon_po_line_item");
	polGr.get(polId);
	
	polObj.poDescription=polGr.description+'';
	polObj.quantity=polGr.open_quantity+'';
	polObj.Maxquantity_=polGr.open_quantity+'';
	polObj.unit_price=polGr.unit_price+'';
	polObj.amount=polGr.total_amount+'';
	
	return polObj;
}

function resolveItems(ids, itemid) {
    var grnHeader = getGRNHeader(itemid);
    var grn = getPOitem(grnHeader);

    return grn;
}

function getGRNHeader(grnitem) {
    var grnItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    if (grnItem.get(grnitem)) {
        return grnItem.grn_header.toString();
    }
}

function getPOitem(id) {
    var poArray = [];
    var poItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    poItem.addQuery('grn_header', id);
    poItem.query();
    while (poItem.next()) {
        var itemobj = {};
        itemobj.description = poItem.item_description.toString() + "(" + poItem.quantity.toString() + ")";
        itemobj.sys_id = poItem.sys_id.toString();
        poArray.push(JSON.stringify(itemobj));
    }
    return poArray;
}

function resolveItems1(ids, po) {
    var grn = getPOitem1(po);
    return grn;
}

function getPOitem1(id) {
    var poArray = [];
    var poItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    poItem.addQuery('po_details', id);
    poItem.addQuery('grn_header.open_grn', true);
    poItem.query();
    while (poItem.next()) {
        var itemobj = {};
        itemobj.description = poItem.item_description.toString() + "(" + poItem.quantity.toString() + ")";
        itemobj.sys_id = poItem.sys_id.toString();
        poArray.push(JSON.stringify(itemobj));
    }
    return poArray;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-19 10:34:44&lt;/sys_created_on&gt;&lt;sys_id&gt;20680785db9cd01011699fd2ca9619b2&lt;/sys_id&gt;&lt;sys_mod_count&gt;103&lt;/sys_mod_count&gt;&lt;sys_name&gt;PO Input - Form&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_20680785db9cd01011699fd2ca9619b2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-14 17:07:55&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="container col-sm-12"&gt;
  &lt;div &gt;
    &lt;table id="myTable" class=" table order-list" ng-show="c.showTable"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;Description&lt;/td&gt;
            &lt;td&gt;Quantity&lt;/td&gt;
          	&lt;td&gt;Unit Price&lt;/td&gt;
          	&lt;td&gt;Total Amount&lt;/td&gt;
          	&lt;td&gt;PO Line Item&lt;/td&gt;
          	&lt;td&gt;GRN item&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;

    &lt;/tbody&gt;
    &lt;tfoot&gt;


    &lt;/tfoot&gt;
&lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
    function saveData(id){
   if(id){
    var el = id.split("_")
    var currentValue = document.getElementById(id).value;
    var maxVal;
    if(el[0]=="quantity"){
      maxVal = document.getElementById("Maxquantity_"+el[1]).value;
      if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
        document.getElementById(id).value="";
      }
    else if(parseFloat(currentValue) &gt; parseFloat(maxVal)){
       angular.element(document.getElementById("myTable")).scope().errorHandler("Max value can't be greater than "+maxVal);
      document.getElementById(id).value = maxVal;
    }
    else if(parseFloat(currentValue) == 0 ){
      angular.element(document.getElementById("myTable")).scope().errorHandler("Quantity can not be 0");
      document.getElementById(id).value = maxVal;
    }
      else
         angular.element(document.getElementById("myTable")).scope().saveData(id);
  }
     else if(el[0]=="grn"){
         angular.element(document.getElementById("myTable")).scope().recreateList(id);
    angular.element(document.getElementById("myTable")).scope().saveData(id);
    }
  else if(el[0]=="unit"){
        if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
          document.getElementById(id).value="";
      }
        else
          angular.element(document.getElementById("myTable")).scope().saveData(id);
        }
      else if(el[0]=="amount"){
        if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
          document.getElementById(id).value="";
      }
        else
          angular.element(document.getElementById("myTable")).scope().saveData(id);
        }
        
    else
      angular.element(document.getElementById("myTable")).scope().saveData(id);
  }
  else
angular.element(document.getElementById("myTable")).scope().saveData();
}
function isNumber(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
}
&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>695642744</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>02e619b7dbc2101011699fd2ca96191c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>17305d7956e0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>PO Input - Form</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>8ac5e989397110105337a648b223852f</update_guid>
<update_guid_history>8ac5e989397110105337a648b223852f:695642744,0ffd7614863d10108771ade19166b2da:2017142896,1e6bf0dbfed9501020893e2cc2182cfe:695642744,e0ff8c0ad211101099d199099f8018b9:-1180702090,82881b68131950107b9023d4d90e9c78:-1185618500,3ecbcf60b6195010ead87276db0c5309:-2062097694,6854876c22d550100d30874d1d565519:-1723865816,31e3436cadd55010ff5fd6d6143b17d4:1250692173,af5522a88195501010d4c9f447475950:1761509830,c6a42268c9955010d823616feaac9bc7:1746310113,1214ee2838955010a1eb1b0ba56318ff:-823180769,8f232a284b9550105c0acd5acae3fc92:57487243,73422ee478955010d7d9e02898c011fe:742048366,7a4ead64bb1550102e8dc088f0a2cb71:956111185,4e359610441d10100d8b7497b964f534:-1037226082,9d909a507e1d10106001c7d29c9a78c5:-1486162904,eeec8a5ccad910100177fd62c4c5a70a:-1954863295,81d786d848d91010a155c7b2df02c726:1343868944,dba7825c30d910109f77947a1a5bf74f:-1568352664,77b68ed8c1d91010e31f46cd73baf925:575689484,9b3546d806d9101006885a6e7937f6b3:1068178877,26f44ed8ebd91010a1e887f5b2122fc0:-1924349625,60148294f4d91010fbdbe3a3634c5899:-1284672494,537d655c88991010f9f308db12062376:2145822423,2359a1189c9910100081cb5ed168d004:-1536298345,ebb7a95c68191010dc819e2e459a5600:104023220,cdb564108c191010fe1edcd4dc693a15:1062623833,72fe69c07a5110104d7d71a82cecf9fd:559233499,19f7e7674341101040293215b2afdc73:-1530144995,5d745b9a3c8d10108226818bb175ad46:2099200343,a963979af68d10105be4dbf2761e39fc:1972727941,c903179ad68d1010c8c5dd9b97224c1d:-1150407633,acfd7a1eec4d101083001560185bdc04:-113506839,94dcd9dae54910105c95d5d461b79086:934060959,661c15da04491010dc0af260081cfd60:-1276189807,c91b11dadf491010447554154e37f5e0:1166290240,83a3959683491010b36123495d0109b9:2066855925,8fb8c11abac51010f47fc5d7fa3d04de:2093613108,e3046602adc11010583d28be7b40f659:-1040525420,1cb0aa8e8681101059d0c85b36cdd136:-1926493225,baab0c71d8c1101047eaa87ecbb15517:2026470790,a37b0c71f0c11010807f08e397949c88:-1767378866,1b0bc071d0c1101009da3b1a7d97bfea:1676348474,ef0a007167c1101008faa99ef7e26d02:603604003,01f088b986811010abde05c72b2bec18:-1861812839,62ce3f69e9811010d2424ffe30f8bc5b:1995199069,df1e3f6921811010c24cb635eced7c54:-720491857,6dad3369a7811010d7ee66e499c19402:-299873492,b9d4f7e1d88110104ee49b2ad32112fa:-1071102049,fbc3f3a124811010c715a49082b592f9:-1469586434,96913bed3e411010c35d7a11c5735c3d:-1946479024,8bd8dba17d4110101d64e904bb71b645:1073391075,ad402a851ecd901014b6b6893184ad44:-1910360123,03bdf581048d9010ac75120e13cdb24d:1566287952,455f2b6aee201010d8443115249aee0d:-72052119,6345b6125e6010108182821e994ffeee:-232929044,1e93fe9ea62010106a1d6a8fffa46f5b:861742409,2401be5e09201010ec409dfa38347bbd:-273062905,6e0379464d2c901023a87eadff116725:1649828780,e2423946f22c9010f05f55bafd7ba2f5:1285342233,79d13946b72c901071cb547e1a073a3c:1178870229,50fd2d82522c9010f9b3e0004a453236:1651145861,9bddad82232c90104d6dc5e3181423e3:-1222308410,2e8d6982222c901066497d89b2dcaecb:592336357,e25d6982702c9010cb37b11c45540374:-1923714270,a91da182ce2c90102c6df9bf52f16e15:-196570141,99aaedce6ae890105fc53fad4892efcc:205244964,407ae502f72c90101c298226bffd098f:-952497143,08f9adce65e89010e83f47c30c680e0c:609866104,df16a90e2ce8901053a66ed1a175d764:-649017388,3c35210e83e89010d799a595b51633cd:-1691288175,8d9b1ad93720501095457dc65ae80663:224322853,7d2b52d98420501005831576fda78470:562880263,40d3d295db205010f5fbfbd1ff5ccb62:-1532717240,0cbf19c5022410109ee041e188625aaf:-1489345339,0f60d10d5ae01010f48f2330b2031a24:1135891028,f1305dc9e8e010107569ca50f8ef2c65:-1095329318,82f323c6c71894109fa7772d2d411f61:-1093753315,001e5ef19b1c5410f440606c277a57e0:-1953395907,56dc12f1d11c5410b9b8cb0d5b113eb4:-1173584898,fd0edd219b10541012e1704ccb4af142:1287255721,ac7d1921f9105410e55574e26c56355d:-720802794,525d1521ab105410ee9080279bc4ed59:1649495496,975cd1ed78dc14102ffc3ec011ade09a:-636394656,c04b51ed71dc1410d07af3ccddeb88e0:1613361988,873b51edc8dc1410dcb88b729752eed0:528952653,578a99adfcdc1410cc4ecbb892423764:-1733946990,b6e991ad13dc141067c29019e324116b:1768636324,9087512d34dc1410dcb2811a964eeac6:804604551,f657dde9dcdc1410008ba5d12d1ab18a:-871249561,906599a918dc14108d51dc2f9b16b48a:-1319396515,29c491a9d0dc1410597ad37fbb84562c:-690876980,ca349d6970dc1410d169eddd256c8273:-574544666,7c43d16949dc14109d472916128abbe5:1601426310,1909c9a13cdc1410fdd82727e24eb2f5:417637330,15c845a189dc14102987f0b5428d7b99:-1296081868,6298c1613cdc1410b35a47bc9d770c31:951743755,4a7885a1efdc1410dcf7cf922fd60c21:-1884098035,f63849615ddc14106a44b60c62d79e35:-1585022770,c4f6816103dc1410fa22e06d4125b7d3:892672238,7766816177dc1410e9b5cc4f980fd3f4:1270767159,6cc2f4a1ce9c14108c10502e73a6b9cb:-774062305,54dc07891d101410dc7923326a8c6467:-1273541725,2f0b8f09821014109c9f62e7e1995427:1908073787,ff788f418fdcd010adace7ae33e1a087:-651513076,60680785a69cd010c1a2bfa46a0f3cb5:379298544</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_eb8ee85cdb5c501011699fd2ca9619d5</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;sp_platform&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($rootScope, $scope, $timeout, $location, $log, $window, spUtil, nowAttachmentHandler, spAriaUtil, spNavStateManager) {
  $scope.submitting = false;
  $scope.mandatory = [];
  $scope.errorMessages = [];
  $scope.data.show_sql = false;
  $scope.saveButtonSuffix = spUtil.getAccelerator('s');
  $scope.isPageReady = false;
  $scope.adminMenu = {
    encodedPageUrl: encodeURIComponent($location.url()),
    getClientScriptCount: function() {
      var count = 0;
      if ($scope.data.f.client_script) {
        count += $scope.data.f.client_script.onChange.length;
        count += $scope.data.f.client_script.onLoad.length;
        count += $scope.data.f.client_script.onSubmit.length;
      }
      return count;
    }
  };
	var tableId = $scope.data.sys_id != -1 ? $scope.data.sys_id : ($scope.data.f ? $scope.data.f._attachmentGUID : -1);
	spUtil.recordWatch($scope, "sys_attachment", "table_sys_id=" + tableId, function (response, data) {
    $scope.attachmentHandler.getAttachmentList();
    if (response.data) {
        var options = {};
        options.operation = response.data.operation;
        options.filename = response.data.display_value;
	options.sys_id = tableId;
	options.table = $scope.data.table;
        options.state = (response.data.record &amp;&amp; response.data.record.state) ? response.data.record.state.value : "";
        if (options.operation === 'update' &amp;&amp; options.state === 'not_available')
         $rootScope.$broadcast("attachment.updated", options);
    }
});
	
	$scope.$on('sn.attachment.scanned', function() {
		updateAttachmentState($scope.data.table, $scope.data.sys_id);
  });
	
	function updateAttachmentState(table, sys_id) {
    if (sys_id == -1)
        return;
    $scope.server.refresh();
  }
	
  $rootScope.$on('$sp.html.editor.progress', function(e, conf) {
      $scope.submitting = conf.state;
  });

  $scope.getButtonClass = function(action) {
		if (action.form_style == "destructive")
			return "btn-danger";
		
		if (action.form_style == "primary")
			return "btn-primary";
		
		return "btn-default";
	};
	
  $scope.getUIActions = function(type) {
    if ($scope.data.disableUIActions)
      return [];
    if (type) {
      return $scope.data.f._ui_actions.filter(function(action) {
        //We handle the primary action button separately.
        return !action.primary &amp;&amp; action['is_' + type];
      });
    } else {
      return $scope.data.f._ui_actions;
    }
  }

  $scope.getPrimaryAction = function() {
    var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
      return action.primary;
    });		
    return (primaryActions.length) ? primaryActions[0] : null;
  }

  $scope.getUIActionContextMenu = function(event) {
    var menu = [];
    if (event.ctrlKey)
      return menu;

    var contextActions = $scope.getUIActions('context');
    contextActions.forEach(function(action) {
      menu.push([action.name, function() {
        $scope.triggerUIAction(action);
      }]);
    });

    if (contextActions.length &gt; 0)
      menu.push(null);
    menu.push([$scope.data.exportPDFMsg, function() {
      exportPDF("");
    }]);
    menu.push([$scope.data.exportPDFLandMsg, function() {
      exportPDF('true');
    }]);

    return menu;
  }

  function exportPDF(landscape) {
    $window.open("/" + $scope.data.f.table + ".do?PDF&amp;landscape=" + landscape + "&amp;sys_id=" + $scope.data.sys_id + "&amp;sysparm_view=" + $scope.data.f.view);
  }

  //trigger the primary UI Action on save (if there is one)
  var deregister = $scope.$on('$sp.save', function() {
    var primaryAction = $scope.getPrimaryAction();
    if (primaryAction)
      $scope.triggerUIAction(primaryAction);
  });
  $scope.$on('$destroy', function() {
    deregister()
  });

  $scope.triggerUIAction = function(action) {
		if ($scope.data.disableUIActions &amp;&amp; !action.primary) {
      return;
    }

    var activeElement = document.activeElement;
    if (activeElement) {
      activeElement.blur();
    }

    $scope.$evalAsync(function() {
      if (g_form) {
        $scope.submitting = true;
        if (!g_form.submit(action.action_name || action.sys_id))
          $scope.submitting = false;
      }
    });
  }

  $scope.$on("spModel.uiActionComplete", function(evt, response) {
    $scope.submitting = false;
    if (response.isActionAborted)
	return;
    var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
    loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
  });

  function constructResponseHandler(response) {
    return function() {
	  $rootScope.$broadcast("sp.form.submitted", {sys_id: (response.isInsert) ? response.sys_id : $scope.data.sys_id});
      var message;
      var eventName = "sp.form.record.updated";
      if (response.isInsert) {
        message = $scope.data.recordAddedMsg;
        var search = $location.search();
        search.sys_id = response.sys_id;
        search.spa = 1;
        $location.search(search).replace();
      } else
        message = $scope.data.updatedMsg;

      $scope.data.hideRelatedLists = hideRelatedLists();
      $scope.$emit(eventName, $scope.data.f._fields);
      $rootScope.$broadcast(eventName, $scope.data.f._fields);
      $scope.status = message;
      spUtil.addTrivialMessage(message);
      $timeout(clearStatus, 2000);
    }
  }

  var ctrl = this;
  // switch forms
  var unregister = $scope.$on('$sp.list.click', onListClick);
  $scope.$on("$destroy", function() {
    unregister();
  })
	
	function _save() {
		var primaryAction = $scope.getPrimaryAction();
    if (primaryAction)
      $scope.triggerUIAction(primaryAction);
	}
	
	function onListClick(evt, arg) {
		loadForm(arg.table, arg.sys_id);
	}

  function loadForm(table, sys_id) {
    var f = {};
    $scope.data.table = f.table = table;
    $scope.data.sys_id = f.sys_id = sys_id;
    f.view = $scope.data.view;
    return $scope.server.update().then(setupAttachmentHandler);
  }

  function openRelatedList(e, queryString) {
    // todo: Open this in a modal
    $location.search(queryString);
    e.preventDefault();
  }

  $scope.$on('spModel.fields.rendered', function() {
    if (ctrl.panels)
      ctrl.panels.removeClass('shift-out').addClass('shift-in');
  });
	
	var g_form;
	function initForm(gFormInstance) {
		if (gFormInstance.getTableName() == $scope.data.f.table){
			g_form = gFormInstance;
			spNavStateManager.register($scope.data.table, _save, g_form);
			$scope.isPageReady = true;
			$timeout(function() {
				$rootScope.$emit('spModel.gForm.rendered', g_form);
				if($location.search().exception_task == "true"){
	selectSection();
}
			}, 175);
		}
	}
	
  $scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		initForm(gFormInstance);
  });
	
	$scope.$on('spModel.gForm.env.created', function(e, gFormInstance) {
		initForm(gFormInstance);
  });
	
	// update the comments or worknotes based on activity stream
	$scope.$on("activity_stream_is_changed", function(event, data) {
		if (g_form &amp;&amp; g_form.hasField(data.fieldName)) {
			g_form.setValue(data.fieldName, data.input);
			if (data.fieldToClear != "" &amp;&amp; g_form.hasField(data.fieldToClear))
				g_form.setValue(data.fieldToClear, "");
		}
	})

  // Show or hide related lists
  $scope.$watch('data.f._related_lists', function() {
    $scope.data.hideRelatedLists = hideRelatedLists();
  }, true);

  function hideRelatedLists() {
    if (!$scope.data.f._related_lists)
      return true;

    if ($scope.options.hideRelatedLists == true)
      return true;

    if ($scope.data.sys_id == '-1')
      return true;

    // If all related lists are visible=false then hide
    if ($scope.data.f._related_lists.length &gt; 0) {
      for (var i in $scope.data.f._related_lists) {
        var list = $scope.data.f._related_lists[i];
        if (list.visible) {
          return false;
        }
      }
    }
    return true;
  }

  function clearStatus() {
    $scope.status = "";
  }

  function setupAttachmentHandler() {
    $scope.attachmentHandler = new nowAttachmentHandler(appendDone, appendError);

		$scope.$evalAsync(function() {
			$scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, 1024 * 1024 * $scope.data.maxAttachmentSize);
		});

    $scope.$on('dialog.upload_too_large.show', function(e) {
      $log.error($scope.data.largeAttachmentMsg);
      spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
    });
  }
  setupAttachmentHandler();

  function appendDone() {
    // don't know here whether upload succeeded, so can't show msg either way
    $scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
    spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
  }

  function appendError(error) {
    $scope.errorMessages.push(error);
    spUtil.addErrorMessage(error.msg + error.fileName);
  }

  if ($scope.data.f.title) {
	  $scope.$emit('sp.widget-modal.set-aria-label', $scope.data.f.title);
  }
		$scope.resize = function(){
		var el = document.getElementById("attachment-viewer");
		el.style.display ="none"; 
		var el1 = document.getElementById("ticket-viewer"); 
		el1.setAttribute("class", "col-sm-12");
		document.getElementById("ticketResizer").style.display = "none"; 
		document.getElementById("ticketReseter").style.display = "block"; 
	}
		$scope.reset = function(){
			document.getElementById("ticketResizer").style.display = "block"; 
		document.getElementById("ticketReseter").style.display = "none"; 
			var el = document.getElementById("attachment-viewer").style.display="block";
		var el1 = document.getElementById("ticket-viewer"); 
		el1.setAttribute("class", "col-sm-6 customClass");
		}

	/*if($location.search().exception_task == "true"){
	$timeout(function () {
	selectSection();

}, 2000);
}*/

		
	function selectSection(){
		
		for(var i = 0; i&lt;document.getElementsByClassName("tab_caption_text").length; i++){ if(document.getElementsByClassName("tab_caption_text")[i].innerHTML == "Exception Tasks") {
			document.getElementsByClassName("tab_caption_text")[i].click(); 
		break;
		}
																						 }
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.btn-form-menu {
	vertical-align: inherit;
  padding: inherit;
  background: none;
}

.panel-title {
  word-wrap: break-word;
}

.panel-heading {
  .dropdown-menu {
    a {
      white-space: normal;
    }
  }
}

.sc-field-error-label {
  margin-right: .5em;
  display: inline-block;
  background-color: $sc-field-error-color;
}

.comment {
	font-weight: bold;
	margin-top: 2px;
	margin-bottom: 2px;
}
.mce-panel, .mce-btn {
	background-image: none;
	background-color: #f0f3f4;
}

.action-btn {
  margin-right: 5px;
}

.timeline-container {
   max-height: 50vh;
   height: 100%;
   overflow-y: auto;
}

.panel .panel {
    height: auto !important;
}

.attachment-button {
  .glyphicon-paperclip {
    font-size: 18px;
  }
}

.dropdown {
  .glyphicon-menu-hamburger:focus {
 		outline: thin dotted;
		outline: 5px auto $input-border-focus;
		outline-offset: -2px; 
	}
}

.empty-state-wrapper {
  width: 100%;
  height: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 10vh 20px 20px;

  .empty-state {
    border: 1px solid #e7e9eb;
    border-radius: 10px;
    max-width: 700px;
    padding: 30px 40px 20px;
    position: relative;

    .empty-state-badge {
      top: -36px;
      left: 50%;
      position: absolute;
      height: 72px;
      width: 72px;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      border-radius: 100%;
      color: #ffffff;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      font-size: 40px;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin-left: -36px;
      text-align: center;
    }

    .empty-state-header {
      font-size: 30px;
      text-align: center;
      color: #343d47;
    }

    .empty-state-content {
      ul {
        list-style: disc outside;
        margin: 0 0 10px 0;
        padding: 0 0 0 30px;
      }
    }
  }
}

.text-success-alt {
	background-color: $state-success-text;
}

.text-info-alt {
	background-color: $state-info-text;
}

.sp-cross-scope-msg {
  margin-bottom: 10px;
}
.icon-bar-custom {
  position: fixed;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

.customGlyph {
  color: black;
  font-size: 24px;
  margin-left: -5px;
}

.icon-bar-custom  a:hover {
  background-color: #000;
}

.collapsableSticky {
  //background: #3B5998;
  color: white;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;widget-form-tabbed&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Form Tabbed&lt;/name&gt;&lt;option_schema&gt;[{"name":"disableUIActions","section":"Behavior","label":"Disable UI Actions on Form","type":"boolean"},{"name":"showFormView","section":"Behavior","label":"Display current form view","type":"boolean"},{"name":"omitHeaderOptions","section":"Behavior","label":"Omit header options icon","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[// form functionality - URL parameter driven
(function($sp, input, data, options, gs) {
	data.showexpand  = false;
	var pageid = $sp.getParameter("id");
	if(pageid == "agent_request_page" || pageid == "task_navigator")
		data.showexpand = true;
  /* "use strict"; -linter issues */
  // populate the 'data' variable
	data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
	data.recordAddedMsg = gs.getMessage("Record Added");
	data.updatedMsg = gs.getMessage("updated_uppercase");
	data.exportPDFMsg = gs.getMessage("Export to PDF");
	data.exportPDFLandMsg = gs.getMessage("Export to PDF (landscape)");
	data.addAttachmentMsg = gs.getMessage("Add an attachment");
	data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
	if (isNaN(data.maxAttachmentSize))
		data.maxAttachmentSize = 24;
	data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
	data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");
	
	data.isAdmin = gs.hasRightsTo('sp/configure.all/execute', null);
	data.emptyStateTemplate = options.empty_state_template;
	data.disableUIActions = options.disableUIActions === "true";
	data.hideRelatedLists = options.hideRelatedLists || false;

	if (input) {
		data.table = input.table;
		data.sys_id = input.sys_id;
		data.view = input.view;
		var result = {};
		if (input._fields) {
			result = $sp.saveRecord(input.table, input.sys_id, input._fields);
			data.sys_id = result.sys_id;
		}

		if (input.sys_id == '-1')
			data.isNewRecord = true;
	} else {
		data.table = options.table || $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table");
		data.sys_id = options.sys_id || $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id");
 		if (!data.sys_id &amp;&amp; options.sys_id_required != "true")
			data.sys_id = "-1";
		data.view = options.view || $sp.getParameter("view") || $sp.getParameter("v"); // no default
	}

	data.query = $sp.getParameter("query") || options.query || "";
	data.f = {};
	if (!data.table)
		return;
	
	// Form widget is not a supported way to view an attachment
	if (data.table == "sys_attachment") {
		data.tableUnsupported = true;
		return;
	}

	if (!GlideTableDescriptor.isValid(data.table))
		return;

	if (!data.sys_id)
		return;

	var rec = $sp.getRecord(data.table, data.sys_id);
	data.isValid = rec.isValid() || data.sys_id == "-1";
	if (!data.isValid)
		return;

	data.table = rec.getRecordClassName();
	data.tableHierarchy = GlideDBObjectManager.getTables(data.table).toArray().join();
	data.canWrite = rec.canWrite();
	var hasRecordAccess = data.sys_id == "-1" ? rec.canCreate() : data.canWrite;
	data.canAttach = hasRecordAccess &amp;&amp; gs.hasRole(gs.getProperty('glide.attachment.role')) &amp;&amp; !GlideTableDescriptor.get(data.table).getED().getBooleanAttribute("no_attachment");
	data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

	// PRB1335036: show appropriate message when record is in cross app scope
	data.f.outOfScope = !rec.isInSelectedScope();
	// Populate scope labels only when needed
	if (data.f.outOfScope) {
		data.f.recordScopeLabel = gs.getScopeLabelByRecordId(rec.getUniqueValue());
		data.f.currentScopeLabel = gs.getCurrentApplicationName();
	}
	
	// Activity formatter is hardcoded to set specific options
	for (var f in data.f._formatters) {
		var fm = data.f._formatters[f];
		if (fm.formatter == "activity.xml") {
			fm.hardcoded = true;
			fm.widgetInstance = $sp.getWidget('widget-ticket-conversation',
																{table: data.table,
																 sys_id: data.sys_id,
																 includeExtended: true,
																 hideAttachmentBtn: true,
																 title: "${Activity}",
																 use_dynamic_placeholder: true,
																 btnLabel: "${Post}"});
		} else if(fm.formatter == "com_glideapp_servicecatalog_veditor" || fm.formatter == "com_glideapp_questionset_default_question_editor") {
			var qsConfig = $sp.getValue('quick_start_config');
			if (qsConfig)
				qsConfig = JSON.parse(qsConfig)[0];
			fm.widgetInstance = $sp.getWidget(fm.widget, {table: data.table,
														sys_id: data.sys_id,
														readonly_variable_editor: qsConfig ? qsConfig.readonly_variable_editor : 'false'});
		} else
			fm.widgetInstance = $sp.getWidget(fm.widget, data);
	}
})($sp, input, data, options, gs);]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-16 15:27:11&lt;/sys_created_on&gt;&lt;sys_id&gt;eb8ee85cdb5c501011699fd2ca9619d5&lt;/sys_id&gt;&lt;sys_mod_count&gt;36&lt;/sys_mod_count&gt;&lt;sys_name&gt;Form Tabbed&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_eb8ee85cdb5c501011699fd2ca9619d5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-12 17:01:58&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="icon-bar-custom" ng-show="data.showexpand"&gt;
  &lt;i class="glyphicon glyphicon-triangle-left customGlyph" id="ticketResizer" ng-click="resize()"&gt;&lt;/i&gt;
   &lt;i class="glyphicon glyphicon-triangle-right customGlyph" id="ticketReseter" ng-click="reset()" style="display:none"&gt;&lt;/i&gt;
&lt;/div&gt;

&lt;div ng-if="::!data.isValid &amp;&amp; !data.emptyStateTemplate" class="panel panel-default"&gt;
  &lt;div class="panel-body wrapper-lg text-center"&gt;
    &lt;span ng-if="!data.tableUnsupported"&gt;${Record not found}&lt;/span&gt;
    &lt;span ng-if="data.tableUnsupported"&gt;${Form view not supported for requested table}&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div ng-if="!data.isValid &amp;&amp; data.emptyStateTemplate" class="panel-shift"&gt;
  &lt;div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div ng-if="data.isValid" class="panel-shift"&gt;
  &lt;div class="" ng-if="!data.f._view.length &amp;&amp; data.hideRelatedLists &amp;&amp; data.emptyStateTemplate"&gt;
    &lt;div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="" ng-if="!data.f._view.length &amp;&amp; data.hideRelatedLists &amp;&amp; !data.emptyStateTemplate"&gt;
    &lt;div class="panel panel-default"&gt;
      &lt;div class="panel-heading"&gt;&lt;span class="panel-title"&gt;{{data.f.title}}&lt;/span&gt; &lt;span ng-if="::options.showFormView == 'true' &amp;&amp; data.f.view != ''"&gt;[{{data.f.view_title}} view]&lt;/span&gt;&lt;/div&gt;
      &lt;div class="panel-body wrapper-lg text-center"&gt;
        ${No elements to display}
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;!-- readOnly due to scope --&gt;
  &lt;div ng-if="isPageReady &amp;&amp; data.f.outOfScope" class="read-only-message"&gt;
    &lt;div class="alert alert-info sp-cross-scope" role="alert"&gt;
      &lt;p&gt;${This record is in the &lt;strong&gt;{{data.f.recordScopeLabel}}&lt;/strong&gt; application, but &lt;strong&gt;{{data.f.currentScopeLabel}}&lt;/strong&gt; is the current application.}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div ng-show="isPageReady" class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists" &gt;
    &lt;div class="panel-heading" ng-if="data.f.title.length" sp-context-menu="getUIActionContextMenu(event)"&gt;
      	&lt;span class="dropdown m-r-xs" ng-if="(data.isAdmin || getUIActions('context').length &gt; 0) &amp;&amp; options.omitHeaderOptions != 'true'"&gt;
            &lt;button aria-label="${Form menu}" class="btn btn-form-menu dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;&lt;/button&gt;
            &lt;ul class="dropdown-menu" aria-labelledby="adminMenu"&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a ng-href="/{{data.f.table}}.do?sys_id={{data.f.sys_id}}&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Open in platform}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin" class="dropdown-header"&gt;${Configure}&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&amp;sysparm_list={{data.f._sections[0].id}}&amp;sysparm_form=section&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Form Layout}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&amp;sysparm_list={{data.f.table}}&amp;sysparm_form=related_list&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Related Lists}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="?id=lf&amp;table=sys_ui_policy&amp;filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id:'lf', table: 'sys_ui_policy', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})"&gt;${UI Policies} &lt;span class="badge pull-right" ng-if="f.policy.length"&gt;{{f.policy.length}}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="?id=lf&amp;table=sys_script_client&amp;filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id: 'lf', table: 'sys_script_client', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})"&gt;${Client Scripts} &lt;span class="badge pull-right" ng-if="adminMenu.getClientScriptCount()"&gt;{{adminMenu.getClientScriptCount()}}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="getUIActions('context').length &gt; 0 &amp;&amp;  data.isAdmin" role="separator" class="divider"&gt;&lt;/li&gt;
              &lt;li ng-repeat="action in getUIActions('context')"&gt;&lt;a href="" ng-click="triggerUIAction(action)"&gt;{{action.name}}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin || getUIActions('context').length &gt; 0" role="separator" class="divider"&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a target="_new" href="/{{data.f.table}}.do?PDF&amp;sys_id={{data.sys_id}}&amp;sysparm_view={{data.f.view}}"&gt;${Export to PDF}&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a target="_new" href="/{{data.f.table}}.do?PDF&amp;landscape=true&amp;sys_id={{data.sys_id}}&amp;sysparm_view={{data.f.view}}"&gt;${Export to PDF (landscape)}&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/span&gt;
      &lt;span class="panel-title" role="heading" aria-level="2"&gt;{{data.f.title}}&lt;/span&gt; &lt;span ng-if="::options.showFormView == 'true' &amp;&amp; data.f.view != ''"&gt;[{{data.f.view_title}} view]&lt;/span&gt;
      &lt;div ng-if="::attachmentHandler &amp;&amp; data.canAttach" title="{{::data.addAttachmentMsg}}" class="pull-right attachment-button"&gt;
      	&lt;sp-attachment-button&gt;&lt;/sp-attachment-button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="panel-body"&gt;
      &lt;!-- performance debug --&gt;
      &lt;div ng-if="data.show_sql"&gt;
        &lt;div class="comment"&gt;
          &lt;span ng-if="data.f._perf.sql_count"&gt;${SQL Statements {{data.f._perf.sql_count}}}, &lt;/span&gt;
          &lt;span&gt;${Time {{data.f._perf.time}}}&lt;/span&gt;
        &lt;/div&gt;
        &lt;div ng-repeat="s in data.f._perf.sql" class="{{s.type}}"&gt;
          {{s.statement}}
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- attachments --&gt;
      &lt;sp-attachment-manager table="::data.table" sys-id="data.f._attachmentGUID" omit-edit="::!data.canAttach"&gt;&lt;/sp-attachment-manager&gt;
      &lt;!-- form --&gt;
      &lt;div&gt;
        &lt;sp-model form_model="data.f" mandatory="mandatory" template-url="tabbed_form_template"&gt;&lt;/sp-model&gt;
      &lt;/div&gt;
      &lt;!-- UI Action Links --&gt;
      &lt;div ng-if="getUIActions('link').length &gt; 0"&gt;
        &lt;label style="margin: 0;"&gt;${Related Links}&lt;/label&gt;
        &lt;div ng-repeat="action in getUIActions('link')"&gt;
          &lt;a href ng-click="triggerUIAction(action)" gsft_id="{{::action.sys_id}}"&gt;{{::action.name}}&lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- related lists --&gt;
      &lt;div ng-if="!data.hideRelatedLists"&gt;
        &lt;label style="margin: 0"&gt;${Related Lists}&lt;/label&gt;
        &lt;div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;"&gt;
          &lt;span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible"&gt;
            &lt;a ng-if="rl.type != 'REL'" ng-href="?id=lf&amp;table={{::rl.table}}&amp;filter={{rl.field}}%3D{{data.f.sys_id}}{{rl.filter ? '^' + rl.filter : ''}}&amp;view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{::rl.table}}', filter: '{{rl.field}}%3D{{data.f.sys_id}}'})"&gt;{{rl.plural}}
              &lt;span class="label label-as-badge label-primary" ng-if="rl.count"&gt;{{::rl.count}}&lt;/span&gt;
            &lt;/a&gt;
            &lt;a ng-if="::rl.type == 'REL'" href="?id=lf&amp;table={{::rl.table}}&amp;relationship_id={{rl.relationship_id}}&amp;apply_to={{rl.apply_to}}&amp;apply_to_sys_id={{rl.apply_to_sys_id}}&amp;view={{::data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{::rl.table}}', apply_to: '{{rl.apply_to}}', apply_to_sys_id: '{{rl.apply_to_sys_id}}', relationship_id: '{{rl.relationship_id}}'})"&gt;{{rl.label}}
              &lt;span class="label label-as-badge label-primary" ng-if="rl.count"&gt;{{rl.count}}&lt;/span&gt;
            &lt;/a&gt;
            &lt;span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;" aria-hidden="true"&gt; | &lt;/span&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="panel-footer"&gt;
      &lt;button ng-click="triggerUIAction(action)" ng-disabled="submitting" ng-repeat="action in getUIActions('button')" class="btn action-btn" ng-class="::getButtonClass(action)" gsft_id="{{::action.sys_id}}"&gt;{{action.name}}&lt;/button&gt;
      &lt;span&gt;{{status}}&lt;/span&gt;
      &lt;button ng-if="getPrimaryAction()" type="submit" ng-click="triggerUIAction(getPrimaryAction())" ng-disabled="submitting" class="btn btn-primary action-btn pull-right" gsft_id="{{::getPrimaryAction().sys_id ? getPrimaryAction().sys_id : ''}}"&gt;${Save} &lt;span ng-if="saveButtonSuffix"&gt;(${{{saveButtonSuffix}}})&lt;/span&gt;&lt;/button&gt;
      &lt;div style="clear: both;"&gt;&lt;/div&gt;
      &lt;div ng-if="mandatory.length" class="alert alert-info" style="margin-top: .5em" aria-live="polite" aria-atomic="true"&gt;
        &lt;span ng-if="mandatory.length &gt; 0"&gt;${Required information} &lt;/span&gt;
        &lt;span ng-repeat="f in mandatory" class="label sc-field-error-label" ng-bind="f.label"&gt;&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1126525773</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>02e619b7dbc2101011699fd2ca96191f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172a97b22c20000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Form Tabbed</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>3fd6222650d110105f4a582050862de9</update_guid>
<update_guid_history>3fd6222650d110105f4a582050862de9:-1126525773,32871aaaf491101017ae0ea2cc7ae81b:509438542,9b8bf8bd7c05101073f52257fab27e86:-1126525773,97852f950781101061226be62488e90f:-1846995959,6f55eb958481101081a03c497b70b903:2016120121,a5042755d88110104ecad02fcd6fab41:2030629356,27936b5582811010c8942b25b2f74892:-1375526601,58732b15f8811010dc0879c82b25ab38:1776739849,6f23a3557581101047c2b99170b2a181:1638344758,42e223152081101086f32e78698a1786:339786249,26c8658d37241010dc2213a9e9f30016:184043524,66de5d852a241010c4dbc174e365ed7c:-742389321,2fcd1a4447ac1010c45cdd1380882808:751753834,706d257e3e1410103c3ecae8e00c9968:1893761137,015ded7e18141010473a6989ccc6cdb3:-194685213,9508a5badf141010a05fab0a8d2c942e:-1525410003,caa761ba0e14101073ab5edd1f8993d9:-2074448850,e8b6a57a061410105027e0c9ebf2fd47:-1831138423,9a76617a7414101064e3fbc284d13195:-561660112,b636217a1e1410107b13e9de0e6ea9ca:634524079,7d06a53a12141010f72381e828681a08:1203560336,fdb5693a9b14101080da57e846c3790a:-735745616,7b45613a9f141010212bb2b7a5d21392:834349719,6615253a39141010ade324266389c32a:-42667871,96f4613af9141010721bf595b33d4d21:772003613,64a4adf6aa1410101c638d405d5e7233:-421220014,177429f60f141010321b47164ac65a00:-1312903037,8773adb62d141010e6f29de6a55d1cd8:-31554477,c153adb6d61410109a55eeb29be975ca:195452890,1c33a9b64d1410104bdf11c5d865500b:1895995272,cbe2a576bd141010b9bcfad5a63cc516:-449564344,ee32e1b67f141010d257c593140d9b14:-581761291,d052cd2e8754d4109e621f502526562d:1411649560,3db1052e6954d41067e83f4c698afac5:-1274289240,88707050209c501026debd2d61e00049:-1675028788,6b9eecdccf5c50109bc53c6c0b7a4684:230953325,ef8ee85ce65c5010585dd27f633305d7:386147528</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_bec1ec49db00d01011699fd2ca9619cc</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $rootScope) {
    var grnItem;
    $scope.subTotal = 0;
    var selectIndex;
    var poItems = [];

    $scope.recreateList = function(id) {
        grnItem = document.getElementById(id).value.toString();
        selectIndex = id.split("_");
        selectIndex = selectIndex[1];
        if (checkIfotherSelected(selectIndex, grnItem)) {
            if (grnItem != "") {

                $scope.data.refreshlist = true;

                $scope.data.selectedItems = poItems;
                $scope.data.selectedGRNtem = grnItem;
                $scope.server.update().then(function(response) {
                    refurbish(response.resovedItems);
                });
            } else {
                $scope.data.refurbishBlank = true;
                $scope.data.selectedItems1 = poItems;
                $scope.data.selectedPO1 = $rootScope.poNumber;
                $scope.server.update().then(function(response) {
                    refurbish(response.resovedItems1);
                });
            }
        }

    }

    function checkIfotherSelected(selectIndex, selectedBlank) {
        if (selectedBlank == "")
            return true;
        var isValid = true;
        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            if (document.getElementById("grn_" + [i]).value.toString() != "" &amp;&amp; i != selectIndex)
                isValid = false;
        }
        return isValid;
    }

    function refurbish(object) {

        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            document.querySelector('#grn_' + [i]).innerHTML = '';
            var grnSelect1 = document.getElementById("grn_" + i);
            var option1 = document.createElement("option");
            option1.text = "Select Value";
            option1.value = "";
            option1.selected = "selected";
            grnSelect1.add(option1);
            var grnSelect = document.getElementById("grn_" + i);
            for (var grn = 0; grn &lt; object.length; grn++) {
                var decodeValue = JSON.parse(object[grn]);
                var option = document.createElement("option");
                option.text = decodeValue.description;
                option.value = decodeValue.sys_id;
                if (i == selectIndex &amp;&amp; decodeValue.sys_id == grnItem)
                    option.selected = "selected";
                grnSelect.add(option);
            }
        }
    }
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('subtotal');
    }, function(value) {
        if (!isNumber(value))
            $scope.page.g_form.clearValue("subtotal");
        else
            calculateTotal();
    })
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('po_number');
    }, function(value) {
        //$scope.data.poID=value;
        $rootScope.poNumber = value;
    })
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('cgst');
    }, function(value) {
        if (!isNumber(value))
            $scope.page.g_form.clearValue("cgst");
        else {
            if (parseFloat(value) != parseFloat($scope.page.g_form.getValue('sgst')) || value != "" || typeof value != "undefined") {
                $scope.page.g_form.setValue("sgst", parseFloat($scope.page.g_form.getValue('cgst')));
            }
            calculateTotal();
        }
    })
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('sgst');
    }, function(value) {
        if (!isNumber(value))
            $scope.page.g_form.clearValue("sgst");
        else {
            if (parseFloat(value) != parseFloat($scope.page.g_form.getValue('cgst')) || value != "" || typeof value != "undefined") {
                $scope.page.g_form.setValue("cgst", parseFloat($scope.page.g_form.getValue('sgst')));
            }
            calculateTotal();
        }
    })
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('igst');
    }, function(value) {
        if (!isNumber(value))
            $scope.page.g_form.clearValue("igst");
        else
            calculateTotal();
    })

    function isNumber(n) {
        return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
    }
    var c = this;
    c.showTable = false;
    $(document).ready(function() {
        var counter = 0;
        //var polItems = c.data.poLineItems;

        $rootScope.$on('itemsSelected', function(event, obj) {
            for (var z = 1; z &lt; document.getElementById("myTable").length; z++) {
                document.getElementById("myTable").deleteRow(z);
            }
            c.showTable = true;
            for (var i = 0; i &lt; obj.length; i++) {
                addRows();
            }
            for (var j = 0; j &lt; obj.length; j++) {
                var decodeJson = JSON.parse(obj[j]);
                poItems.push(decodeJson.id_);
				console.log("PI LI-"+decodeJson.po_line_item_);
                document.getElementById("number_" + j).value = decodeJson.id_;
                document.getElementById("description_" + j).value = decodeJson.description_;
                document.getElementById("quantity_" + j).value = decodeJson.quantity_;
                document.getElementById("Maxquantity_" + j).value = decodeJson.Maxquantity_;
                document.getElementById("amount_" + j).value = decodeJson.amount_;
                document.getElementById("unit_price_" + j).value = decodeJson.unit_price_;
				document.getElementById("po_line_item_" + j).value=decodeJson.description_;
				document.getElementById("po_line_item_id_" + j).value=decodeJson.po_line_item_;
				
//                 var poltSelect = document.getElementById("po_line_item_" + j);
//                 for (var pol = 0; pol &lt; obj.length; pol++) {
//                     var decodeValuePO = JSON.parse(obj[pol]);
//                     var option = document.createElement("option");
//                     option.text = decodeValuePO.description_;
//                     option.value = decodeValuePO.po_line_item_;
//                     poltSelect.add(option);
//                 }

                var grnSelect = document.getElementById("grn_" + j);
                for (var grn = 0; grn &lt; decodeJson.grn_.length; grn++) {
                    var option = document.createElement("option");
                    var decodeValue = JSON.parse(decodeJson.grn_[grn]);
                    option.text = decodeValue.description;
                    option.value = decodeValue.sys_id;
                    grnSelect.add(option);
                }
            }
            $scope.saveData1();
        });

        function addRows() {
            var newRow = $("&lt;tr&gt;");
            var cols = "";
            var rowNumber = counter + 1;
            cols += '&lt;td&gt;&lt;input type="text" id="number_' + counter + '"  value="" class="form-control" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" id="Maxquantity_' + counter + '"  value="" class="" onchange="saveData()" style="display:none;" readonly/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData()" id="description_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData(this.id)" id="quantity_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData(this.id)" id="unit_price_' + counter + '" /&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData(this.id)" id="amount_' + counter + '" /&gt;&lt;/td&gt;';
			//cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData(this.id)" id="amount_' + counter + '" /&gt;&lt;/td&gt;';
			cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control" onchange="saveData(this.id)" id="po_line_item_' + counter + '" readonly/&gt;&lt;/td&gt;';

          //  cols += '&lt;td&gt;&lt;select class="form-control" id="po_line_item_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select class="form-control" id="grn_' + counter + '" onchange="saveData(this.id)"&gt;&lt;option value=""&gt;Select Value&lt;/option&gt;&lt;/select&gt;&lt;/td&gt;';
			cols += '&lt;td&gt;&lt;input type="hidden" value="" class="form-control" onchange="saveData(this.id)" id="po_line_item_id_' + counter + '"/&gt;&lt;/td&gt;';

            newRow.append(cols);
            $("table.order-list5").append(newRow);
            counter++;
        }

        $("table.order-list5").on("click", ".ibtnDel", function(event) {
            setTimeout(function() {
                $scope.saveData1();
            }, 500);
            $(this).closest("tr").remove();
            counter -= 1
        });


    });
    $scope.saveData1 = function(id) {
//         if (id != undefined &amp;&amp; id.indexOf("po_line_item_") &gt;= 0) {
//             $scope.data.selectedpolID = document.getElementById(id).value.toString();
//             var elIndex = id.split("_");
//             $scope.server.update().then(function(response) {
//                 var res = response.poLineItem;
//                 console.log("Line Item Response-" + JSON.stringify(res));
//                 document.getElementById("description_" + elIndex[3]).value = res.poDescription;
//                 document.getElementById("Maxquantity_" + elIndex[3]).value = res.Maxquantity_;
//                 document.getElementById("quantity_" + elIndex[3]).value = res.quantity;
//                 document.getElementById("unit_price_" + elIndex[3]).value = res.unit_price;
//                 document.getElementById("amount_" + elIndex[3]).value = res.amount;
//             });
//         }
        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            rowData.id = document.getElementById("number_" + i).value.toString();
            rowData.description = document.getElementById("description_" + i).value.toString();
            rowData.Maxquantity_ = document.getElementById("Maxquantity_" + i).value.toString();
            rowData.quantity = document.getElementById("quantity_" + i).value.toString();
            rowData.unit_price = document.getElementById("unit_price_" + i).value.toString();
            rowData.amount = document.getElementById("amount_" + i).value.toString();
            rowData.grn = document.getElementById("grn_" + i).value.toString();
            if (getSelectedText("grn_" + [i]))
                rowData.grn_text = getSelectedText("grn_" + i).toString();
            else
                rowData.grn_text = "";

            rowData.po_line_item = document.getElementById("po_line_item_id_" + i).value.toString();
			rowData.po_line_item_text=document.getElementById("po_line_item_" + i).value.toString();
//             if (getSelectedText("po_line_item_" + i))
//                 rowData.po_line_item_text = getSelectedText("po_line_item_" + i).toString();
//             else
//                 rowData.po_line_item_text = "";

            tableDataArray.push(JSON.stringify(rowData));
        }
        var fields = ["grn:GRN","po_line_item:PO Line Item"];
        console.log(tableDataArray);
        var g_form = $scope.page.g_form;
		var dupChk=checkDuplicate(tableDataArray, fields, id).split("$");
        if (dupChk[0]=="false") {
            g_form.clearMessages();
            g_form.clearValue("po_line_items");
            g_form.setValue("po_line_items", tableDataArray.toString());
            calculatesubTotal();
            calculateTotal();
        } else
            $scope.errorHandler("You can not use same "+dupChk[1]+" multiple times");
    }

    $scope.errorHandler = function(message) {
        $scope.page.g_form.addErrorMessage(message);
    }

    function checkDuplicate(tableData, fields, id) {
        var array = JSON.parse("[" + tableData + "]");
        var hasDuplicate = "false";
        var valueArray = [];
		var field='';
        for (var j = 0; j &lt; fields.length; j++) {
			var fn=fields[j].split(":");
            for (var i = 0; i &lt; array.length; i++) {
                if (valueArray != "" || valueArray != null) {
                    if (valueArray.indexOf(array[i][fn[0]]) &gt; -1 &amp;&amp; array[i][fn[0]] != "") {
                        hasDuplicate = "true";
						field=fn[1];
                        document.getElementById(id).value = "";
                        break;
                    }
                }
                valueArray.push(array[i][fn[0]]);
            }
        }
        return hasDuplicate+"$"+field;
    }

    function getSelectedText(elementId) {
        var elt = document.getElementById(elementId);

        if (elt.selectedIndex == -1)
            return null;

        return elt.options[elt.selectedIndex].text;
    }

    function calculatesubTotal() {
        var table = document.getElementById("myTable");
        var tableLength = table.rows.length - 1;
        var tableDataArray = [];
        var rowData = {};
        var subtotal = 0;
        for (var i = 0; i &lt; tableLength; i++) {
            if (document.getElementById("amount_" + [i]).value != "" || typeof document.getElementById("grn_" + [i]).value != "undefined")
                subtotal = subtotal + parseFloat(document.getElementById("amount_" + [i]).value);
        }
        var g_form = $scope.page.g_form;
        g_form.setValue("subtotal", subtotal);

    }

    function calculateTotal() {
        var g_form = $scope.page.g_form;
        g_form.clearValue("total");
        var gstTotal = 0;
        var total = 0;
        var igst = g_form.getValue("igst");
        var cgst = g_form.getValue("cgst");
        var sgst = g_form.getValue("sgst");

        if (igst != "") {
            console.log("If GST" + parseFloat(igst));
            gstTotal = gstTotal + parseFloat(igst);
        } else {

            gstTotal = gstTotal + 0;
        }
        if (cgst != "") {

            console.log("If CGST" + parseFloat(cgst));
            gstTotal = gstTotal + parseFloat(cgst);
        } else {
            console.log("Else CGST" + parseFloat(cgst));
            gstTotal = gstTotal + 0;
        }
        if (sgst != "") {
            console.log("If CGST" + parseFloat(sgst));
            gstTotal = gstTotal + parseFloat(sgst);
        } else {
            console.log("Else CGST" + parseFloat(sgst));
            gstTotal = gstTotal + 0;
        }

        if (g_form.getValue("subtotal") != "")
            total = parseFloat(g_form.getValue("subtotal")) + parseFloat(gstTotal);
        else
            total = parseFloat(g_form.getValue("subtotal"));

        g_form.setValue("total", total);
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;line_item_input&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Line Item Input&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    if (input.refreshlist) {
        data.resovedItems = resolveItems(input.selectedItems, input.selectedGRNtem);
    }
    if (input.refurbishBlank) {
        data.resovedItems1 = resolveItems1(input.selectedItems1, input.selectedPO1);
    }

//     if (input.poID != "") {
//         data.poLineItems = getPOItems(input.poID);
//     }
	data.poLineItem=getPOLineItem(input.selectedpolID);
})();

function getPOLineItem(polId){
	var polObj={};
	var polGr=new GlideRecord("x_478823_nhorizon_po_line_item");
	polGr.get(polId);
	
	polObj.poDescription=polGr.description+'';
	polObj.quantity=polGr.open_quantity+'';
	polObj.Maxquantity_=polGr.open_quantity+'';
	polObj.unit_price=polGr.unit_price+'';
	polObj.amount=polGr.total_amount+'';
	
	return polObj;
}

function resolveItems(ids, itemid) {
    var grnHeader = getGRNHeader(itemid);
    var grn = getPOitem(grnHeader);

    return grn;
}

function getGRNHeader(grnitem) {
    var grnItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    if (grnItem.get(grnitem)) {
        return grnItem.grn_header.toString();
    }
}

function getPOitem(id) {
    var poArray = [];
    var poItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    poItem.addQuery('grn_header', id);
    poItem.query();
    while (poItem.next()) {
        var itemobj = {};
        itemobj.description = poItem.item_description.toString() + "(" + poItem.quantity.toString() + ")";
        itemobj.sys_id = poItem.sys_id.toString();
        poArray.push(JSON.stringify(itemobj));
    }
    return poArray;
}

// function getPOItems(poId) {
//     var polArr = [];
//     var polGr = new GlideRecord("x_478823_nhorizon_po_line_item");
//     polGr.addQuery("po_header", poId);
//     polGr.query();
//     while (polGr.next()) {
//         var polObj = {};
//         polObj.poDescription = polGr.description + '';
//         polObj.polID = polGr.sys_id + '';
//         polArr.push(polObj);
//     }
// }

function resolveItems1(ids, po) {
    var grn = getPOitem1(po);
    return grn;
}

function getPOitem1(id) {
    var poArray = [];
    var poItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
    poItem.addQuery('po_details', id);
    poItem.addQuery('grn_header.open_grn', true);
    poItem.query();
    while (poItem.next()) {
        var itemobj = {};
        itemobj.description = poItem.item_description.toString() + "(" + poItem.quantity.toString() + ")";
        itemobj.sys_id = poItem.sys_id.toString();
        poArray.push(JSON.stringify(itemobj));
    }
    return poArray;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-06 12:19:02&lt;/sys_created_on&gt;&lt;sys_id&gt;bec1ec49db00d01011699fd2ca9619cc&lt;/sys_id&gt;&lt;sys_mod_count&gt;234&lt;/sys_mod_count&gt;&lt;sys_name&gt;Line Item Input&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_bec1ec49db00d01011699fd2ca9619cc&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-28 12:01:00&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="container col-sm-12"&gt;
  &lt;div &gt;
    &lt;table id="myTable" class=" table order-list5" ng-show="c.showTable"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
          &lt;td&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;Description&lt;/td&gt;
            &lt;td&gt;Quantity&lt;/td&gt;
          	&lt;td&gt;Unit Price&lt;/td&gt;
          	&lt;td&gt;Total Amount&lt;/td&gt;
            &lt;td&gt;PO Line Item&lt;/td&gt;
         	&lt;td&gt;GRN item&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;

    &lt;/tbody&gt;
    &lt;tfoot&gt;


    &lt;/tfoot&gt;
&lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
function saveData(id){
  if(id){
    var el = id.split("_")
    var currentValue = document.getElementById(id).value;
    var maxVal;
    if(el[0]=="quantity"){
      maxVal = document.getElementById("Maxquantity_"+el[1]).value;
      if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
        document.getElementById(id).value="";
      }
    else if(parseFloat(currentValue) &gt; parseFloat(maxVal)){
       angular.element(document.getElementById("myTable")).scope().errorHandler("Max value can't be greater than "+maxVal);
      document.getElementById(id).value = maxVal;
    }
    else if(parseFloat(currentValue) == 0 ){
      angular.element(document.getElementById("myTable")).scope().errorHandler("Quantity can not be 0");
      document.getElementById(id).value = maxVal;
    }
      else
         angular.element(document.getElementById("myTable")).scope().saveData1(id);
  }
     else if(el[0]=="grn"){
         angular.element(document.getElementById("myTable")).scope().recreateList(id);
    angular.element(document.getElementById("myTable")).scope().saveData1(id);
    }
  else if(el[0]=="unit"){
        if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
          document.getElementById(id).value="";
      }
        else
          angular.element(document.getElementById("myTable")).scope().saveData1(id);
        }
      else if(el[0]=="amount"){
        if(!isNumber(document.getElementById(id).value)){
        angular.element(document.getElementById("myTable")).scope().errorHandler("Please enter the number");
          document.getElementById(id).value="";
      }
        else
          angular.element(document.getElementById("myTable")).scope().saveData1(id);
        }
        
    else
      angular.element(document.getElementById("myTable")).scope().saveData1(id);
  }
  else
angular.element(document.getElementById("myTable")).scope().saveData1();
}
function isNumber(n) {
  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);
}


&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>2054143871</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>06e619b7dbc2101011699fd2ca96191e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172facd57eb0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Line Item Input</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>4b6bff2f13ed1010391b8f91080c3be9</update_guid>
<update_guid_history>4b6bff2f13ed1010391b8f91080c3be9:2054143871,e22bfb2f3aed10102ee8909ab7fbb0ed:516487623,cd0aff2fc0ed10103e8e59ebc00a2c79:-4621202,6b89bbeb46ed10106dbbb611e4dc1de7:-1983423610,67c7fbeb04ed1010f34410c9c28c1b41:-168167004,cd67bbeb48ed1010a924c65bcaeb4cfc:-1108503787,2b96f3eb83ed101003c103ac425c2c1d:1915102553,5242bb2369ed101092ebee055b123845:-125846800,5a45311e19511010a63d71e0b777f67d:-11361145,8562fdda53511010f417d4023f7a4e75:-1138921311,36f1b95689511010e2db8524cf806534:1855805378,9421b1562951101061abae9b73bf7e22:1270234368,ccb9d51e831110100d5ed8519592d1b7:461013747,79e8111e4c111010eac5a62803394c03:-946099553,9e39d0ce45111010895e6a68d4066f16:28919705,29a258ca52111010c48bc42ed3a9c6e5:461013747,152d29d99f11d0107560011fcf64e2a5:1334465200,58d30fe820d55010d9cc901a5923e7c5:461013747,5ee20f28b6d5501019de667620c09333:-1456296918,1761c7e8cfd550101f53ec371ffd00b3:-1543795053,7a2bbee4c4d5501078e99f2370e91876:1992578994,715da95cf599101025836d8cf8aab861:145052232,177921d8ae9910104f92605ea5105c8b:558287250,1fceb9e3962850101c23fe9380bf0c76:1106480114,2fdd75e39228501014926b5c4c533f83:956005034,5ccd39e3352850105511e95022ae40e0:366407212,fc7df9a33a28501020294544290dd8a5:-31751124,d5fcbda396285010ed88d0c017a2df73:366407212,5e8cf9a39828501094d250d061f7489d:-1122037375,7d4b7963f8285010b94aac1c21e6a211:-770783052,97aa3def2ae4501072ccccb4baeb44ff:-1325478197,5c79f1efe6e45010b47261f1f11e3ba1:-1336283806,1bb8b9afffe45010fab8e715625de872:-975980554,6008b1eff5e45010b2681f4daea323b3:-1469499900,8d4779afc6e45010dc7e4047b87ff4d6:1471114148,e836792f93e45010ed95ab2159439551:1282031639,8b15352fd1e45010190a133066a985be:-466527866,3964b92f60e45010687406cf5294af81:1600788932,4cf3f12f20e450104373677c06dc8fcb:-194520655,8393bdebfce450105ab6783ad0bb0528:-1058123466,eb13b1eba9e450104860a84b3818b522:-671250770,2c1371eb21e45010c9290269728bf2a7:-576621490,26a271ebafe45010d422cfa2d92bcf60:-529223907,7dc0b96b41e450101024fbebbda929bc:1966537383,d490bd2b17e4501021070ef2fff015aa:59753165,a470356b10e4501010ab42586005bb1b:-1836771813,0a2e69a7d6e45010273102820ec19398:-1387399570,09505d23eba45010115a4ff70f163869:-1511918380,2cd062d711ec10102d84e5d11867b967:-1617417548,7440ee9710ec1010a669634b99ddaf70:351981688,109fd69745ec10101664aea9fe60f63b:-1307008377,601f929724ec10107e09015990ff1d1f:762635405,fadd961773ec10101d5d8d0ae9acfe52:-1746680641,057d1257e5ec101024bbb7f7e6a85e01:-539819895,2f7c12930eec101078007269fe38a1c3:-1761904463,12cb5ed3c4ec10102aedb46ceba8e2f0:-1203579327,f47b9ad315ec10109d0c44fa748cc155:1433779618,836b5a93feec1010ad63993fa602772c:29421443,a8391e5375ec10105e3bcedd6aa89198:-1374834813,37e85e53b0ec10100b3ceb1bee13682d:-375978794,9468125344ec1010dc099c2e80180156:1514595554,8e281a5349ec1010b518dce8f6c35eb8:1228753028,3e08521387ec10107247cdf46e034c13:910654181,18279e134fec10104bbfcb9a0a1611b4:1312554072,e9d6d613d9ec10102c454df430e79d63:-1071361300,d0169213ebec101047ac6a2a0c8d9b99:575022310,ae149e9f9dac1010e5b4a97aea7dc9af:290137458,e7e80d4bc2a010104aefa91c6cfdd779:602222745,85c74dc7e9a0101024fad9d70c804605:-64376174,350281479aa010106d966dd1c3345df7:-1645223086,2f41c5c344a01010f08a24411cd18e96:514598863,b3d0c5c31ca0101015c284a6141202b3:477700241,1aeef4838fa01010de924ae068c9f292:-1752539753,2769f48f45601010a590586ab2ed9d6f:1324092522,2ab8fc4f6e601010d20b5c986564fc45:1398376712,5a87b48fa4601010e3840dd15d4adf16:-119033259,7857f08f5760101030673fc7a14c94f5:572044823,d1d674cbd0601010eeb54fec540f9f98:-37867810,ee46784f2a601010f10aedfd3c3c005b:-670989692,9ef5744f55601010e557a6620e79a7f7:190631640,0ce5744fc8601010839a6ece7202bc15:-923298669,7c95304f55601010c293e0a2d3dbd789:-1656334267,7555f80f556010102237441494256bde:1048514276,46f4b40f60601010bd7f94c662496061:22244662,ae113c4b10601010f377d95a16add285:1656107715,fec0b08bdb601010a58e5fa1d44cfe4f:-191433731,3cffec0bc06010106d7417a8ab57a289:-2125342973,ef8f644b25601010efef130c22ad0564:1831701358,437fa80b85601010da431409e6c224a5:554205601,8f1d24c74b60101009f2fc293f2b1e07:256470169,6eaca0c7ef60101092ca19704e90198f:1075121099,ff2c6c87026010102995a6ed4cae511f:691998539,00fba8871d601010c2db9c701fceef98:-800488759,3fdbe48701601010600c3cf6d90850fa:1948785489,e64b2087176010101d8ce2de1f6e64e3:-2043924632,2c3b208709601010cf025fcb32a12ba5:1725762454,a5eaa8075e6010106681f0197feda068:1299782225,15daec47736010107860cb82acb8c05f:-1665344936,5b59ac0732601010bcc0277c1d9058db:-1929404456,2d09e40767601010687475677642f028:-2048878572,d4a86007df6010107d56238dd88086e6:-658711364,2d8820075d601010224f58a1aeadcad8:550237312,c7082cc33f60101019e3e8d919b841dd:-896559131,40b760c3ee60101094428feb2d9aa8d5:-1904554555,3e77e0c35c60101011018f45f321e02e:1956230405,0e5724c31d601010a28accb9e011622e:-384428423,18172c831f60101040be5eff74afd718:1751475481,4cb66c43a2601010f2a0173543fd00ce:747813591,244624839e60101014e710f827bd0bfb:113838077,7ec5a84385601010fbb8035872823bb0:339091093,c565e443b360101019558b60e55208e3:486682812,ae25204351601010f27e68602f61c04d:-1878387006,f0b4a403fc601010ee08a69575f02a98:-1892141215,3861ac0fcf201010eeb8898f4ba3ae6b:68840883,546d18cb3a201010c1031c58bd0900ca:-1095345088,f7bb14cbcf201010ff5ef3c701fabc4c:13231972,14d9fb2213601010a21d8326a6d82299:183890201,6789fb22f8601010ba95fedf5ce1cd91:1640465283,eb497322706010107a18be8e5f81fe93:124940963,cb397322e3601010a447c90bb6ed99c3:341200847,89487fee74201010028590a826b1f517:795131993,7737b3eebc201010d7d9213933a280fc:-845341489,30f6fbaef920101087d34bb04afdc549:1959762285,f9c6bbae7f201010c5f9d049c819dcc9:-1825993314,0d66bbaaf12010102095610671d5c03c:-196706869,ea9de36a4b201010a8413b4e2bece1de:615304803,3c6da36a51201010766ee2edf091dc06:1219168983,865d63e6f320101013008ae67c2c8547:-359195945,c04de36a8620101004ad73c323276f68:1219168983,b01d63e62d201010d707c11fdf513f54:-359195945,e7447612a0601010761a4e8adf0464e6:931733572,fbb07e5e612010107cb6a0afcfe1a603:-1460534241,ae737586c42c901027cbe3ed33cf8137:1920056922,1c26ad0e53e89010c8e5190a37e6672a:1064677672,f3b421ca42e8901004bfabadae71aba8:-1093482047,073bd5c2d8e89010ae150568622509ad:833077773,1bfad1064ae8901041bb972ba9ecfec5:-517451074,d0c959c2fee89010374559466ec0b407:1915877065,3ea815c2ebe89010be85ae06b330a662:-1299957204,6f38d982ffe89010b36abd67cea9dc3a:1262695747,e138d1c289e8901085defe0d6831f620:-804742020,54d7dd8286e89010730fa48d1aad257b:-1736246078,3057998260e89010e8cb9f9da129a27a:-1795625645,cb27518298e89010a0cee5fc6b0afa6d:-323924993,feb651824be890109ebd97fd3282e1f8:-952821953,c0869d0206e8901036b599fadf780c2e:-1272931936,ed461542bfe89010066b490ab207c23f:1250536602,dec5d1420de89010045d8863ebe97e88:-1647754572,ac15d14225e89010b3d0ca3fa032954f:-178532671,44a49dca04a890101a3234f7c68f75e6:-122466244,7c9a6ad57a6050109eb7c510473738b0:-917200240,f34ae2d51460501085477c8f6d5efd2f:-740179023,b6a9a2d5816050102feb6855298ba085:430883838,d603aa51936050101f9a4d6055c01ad6:-188555036,32526251a8605010835ecce20d7aac1c:-1361826211,abc1ea118c60501029e4333273e29f1a:197193848,f481261106605010846d9c85d585087f:-1472408102,8311e2114c60501051651e9083db7f69:2106887941,f1e0aadd4a205010d3a876e5c2f2a828:-1248490745,8680a6dd01205010c1f09eb8c7a23af4:-67613809,97ce1a9de82050105cd39fda4f38ef52:590272712,d8ce1a9dec20501030ca377b8187a420:-703525906,3f7e5e5dff2050101f54c589b5045f06:932440783,54edde5df3205010db87d7364aa4752d:-364422078,93ccda1d3d20501092f540f61729c924:-216533989,369680c2558c1010081f51b81486d8b4:-1158820506,78f5c0c25e8c10106f30f4309f4b4e26:2049881408,7c054482348c101051406ff95773f417:369500222,ef9408028e8c10106d4e2250051f2a32:733115390,b68484824e8c101097b4aae1baa321d1:1762266997,d544c842ff8c10106370e5e896b42d0d:-1418419201,2853c8029e8c1010e8672c1ca369d97a:1261550194,f5700cceaa4c1010f6a16a494ba0d08b:1234241710,139f73fde24c1010f08c1858ef4051d3:1978188623,1b4f3fbde14c1010d48060b2ee56bfdc:-1771450079,89ee77bd5e4c10103c43eb002b256b68:1710979307,f89e37bd314c1010b146b066e970f68e:-1487566788,ce3efb7d2e4c10104ecd766488d338d1:-1228992180,71b3e6ddeb8cd010418521e1d0fb791e:188317071,46a2229db78cd010ec4901111be0d5be:1345296634,6e62ea5d208cd010d9f05b932436bbee:516443176,0fa1269d238cd01077c0342adb1e36cc:1345296634,8d9b2d1d5c0cd010d8909ee0e91e4518:630267178,509ae5d9ad0cd010e245c9e836fe1dd8:1645348746,3880e195e10cd0105334481f9102a871:-1717401970,4e2b11d12c0cd0105ee020196a1dab9d:871225876,93ba51915e0cd010637a6061a6190571:956699727,65f91591f00cd010a106dad477f35bf2:1390529893,b6891d51a60cd010c5eeedd3de32ffc6:-1306866809,11391d51f20cd010081c786ff80195b0:-685952034,fd095951b70cd0107d2f5cc6cdb0813e:1416612188,82881551d70cd0107b75e2b0e6b3fc0e:-1229618071,9e91915d8ac8d0106da412676bd397cb:-1584205205,1690191d7bc8d0102da9addaf79d2696:693188043,cb0b70dd2b88d010b8666f826725d16d:1985833153,ced9349db788d01042a56b8175ca9955:-2025173145,0689349d9988d010a3ac63a80c63b550:-524545169,df890581e280d0101eaa24905ebcc416:1588779229,c6f8c5417d80d01080c65859f8db8826:273872631,28d8c5016c80d0103b6e2b84385190cc:1535561644,fe9849416580d0106635126dd7ba7ffd:1966317119,1338c501f380d01034f66e80a81706fe:-924206871,0f874501f880d01071a998eea3522229:812848899,b43785017c80d01050f2f432d7aa8fa2:-887545061,d1c609cdf840d0108a78056358f0418c:1190994972,9e86c5cd7940d010b8dad1634244726d:452144956,333545cd8a40d01000b22fa5a9d56298:1938229260,2b25098d5540d010d97a23b9ca2d375b:-732203220,78f481cd0740d010cb462715efb90e59:390913709,81848d8db140d0106c9590e1e2fc0007:-732203220,7393458d7040d010968b42120a3e9061:1214723623,a493458daa40d0100828e6f5a1a9d92c:1313525831,a8c24d4d1a40d010b20f522826e7121c:-797376472,b5a18d0d0340d0101603c1d09b4565f6:1338616954,6c41850db140d01072cb68ee069230ba:1984244252,b960c9c9f640d0101a26300d7d360145:1078826250,f07ffc896c40d010f997c3a8f221a6b8:-1254936894,ad3fb8c98040d01031154c0515566a4d:649056309,6d0f30c93540d0107059d16dfca5c2c6:151740713,e2ceb4c91c40d0103625234e4a00146e:288227023,d87eb8895540d0103e6752999eee63c2:1955944277,82edf089bf40d010469062a806232d8e:-921827593,8a1df0895740d010a3fab8ed37047501:-682486694,73ecb449a340d0109be0eadcab2ede58:212935522,a4ab288d6c00d0104c6f2ea70681342b:-1275179521,f49ba8cdf500d010da055e38157a270b:344286277,dc6b68cd4500d0103bdad425caf7e8df:-636486545,5f77204d3300d010ade306b6b3b22d35:710452379,6147e0c92500d010fe9bf3b20c7adc22:-1059577300,c80724c92d00d01077e5672b96ac8bae:-942921578,74d624c9a500d010f66c161de3aad817:-715488210,92b6acc95300d010d2be60479fe0488a:1663242026,6ba6a0c9ec00d01005d43f708652b559:917725037,42e46cc92b00d010ea2c87a728494ee1:-1594006715,25e3a8099700d0102c73df1b269d9aa9:2010419574,75c3e0c96000d0104fd877416fca8117:188965257,7d9320c94e00d010a36b0bfe06be5bf3:796827244</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_ws_operation_3f1851e4dbd1501011699fd2ca9619b5</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ws_operation"&gt;&lt;sys_ws_operation action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;consumes&gt;application/json,application/xml,text/xml&lt;/consumes&gt;&lt;consumes_customized&gt;false&lt;/consumes_customized&gt;&lt;default_operation_uri/&gt;&lt;enforce_acl&gt;cf9d01d3e73003009d6247e603f6a990&lt;/enforce_acl&gt;&lt;http_method&gt;POST&lt;/http_method&gt;&lt;name&gt;reciever&lt;/name&gt;&lt;operation_script&gt;&lt;![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

gs.log(JSON.stringify(request.body.data), "webhook");
return new x_478823_nhorizon.NHorizonDocSumoUtils().createInvoice(request,response);
})(request, response);]]&gt;&lt;/operation_script&gt;&lt;operation_uri&gt;/api/478823/docsumo_webhook&lt;/operation_uri&gt;&lt;produces&gt;application/json,application/xml,text/xml&lt;/produces&gt;&lt;produces_customized&gt;false&lt;/produces_customized&gt;&lt;relative_path&gt;/&lt;/relative_path&gt;&lt;request_example/&gt;&lt;requires_acl_authorization&gt;true&lt;/requires_acl_authorization&gt;&lt;requires_authentication&gt;false&lt;/requires_authentication&gt;&lt;requires_snc_internal_role&gt;true&lt;/requires_snc_internal_role&gt;&lt;short_description/&gt;&lt;sys_class_name&gt;sys_ws_operation&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-06-06 06:10:51&lt;/sys_created_on&gt;&lt;sys_id&gt;3f1851e4dbd1501011699fd2ca9619b5&lt;/sys_id&gt;&lt;sys_mod_count&gt;6&lt;/sys_mod_count&gt;&lt;sys_name&gt;reciever&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ws_operation_3f1851e4dbd1501011699fd2ca9619b5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-27 16:05:12&lt;/sys_updated_on&gt;&lt;web_service_definition display_value="Docsumo Webhook"&gt;c9f7dda4dbd1501011699fd2ca961969&lt;/web_service_definition&gt;&lt;web_service_version/&gt;&lt;/sys_ws_operation&gt;&lt;/record_update&gt;</payload>
<payload_hash>-2052921665</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>06e619b7dbc2101011699fd2ca961921</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172f6868bb00000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>reciever</target_name>
<type>Scripted REST Resource</type>
<update_domain>global</update_domain>
<update_guid>16b927970765101096df19ae01e08b06</update_guid>
<update_guid_history>16b927970765101096df19ae01e08b06:-2052921665,67d025d13011d01006315d9e084ecb8b:-46125791,6f7e9d517a11d01034ab621287644c2a:-2052921665,700959e4aad15010cb2b90822f64b4cc:-788333334,38d851e4c6d15010795893015d4ffdc1:-1854810036,265851e42cd15010780b9b8678d9a058:46523149,5f4811e480d15010392d62a426a3b4b9:-1976468036</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_a1a0ac68dbb8101011699fd2ca961955</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, spUtil, $rootScope, $window) {
  var c = this;
	var g_form=$scope.page.g_form;
	if((g_form.getValue('invoice_header.po_details') != "" || typeof g_form.getValue('invoice_header.po_details') != "undefined") &amp;&amp; g_form.getValue("state")=="-11"){
		console.log("This is being loaded-"+$scope.page.g_form.getValue('invoice_header.po_details'));
		c.data.showLineItem = true;
	
		$scope.$broadcast('widget-filter-breadcrumbs.setBreadcrumbs', "po_header="+$scope.page.g_form.getValue('invoice_header.po_details'));

	}
	$scope.$watch(function () {    
	return $scope.page.g_form.getValue('invoice_header.po_details');    
}, function (value) {
		console.log(value);
		if(value != "" &amp;&amp; $scope.page.g_form.getValue('po_input') == "" &amp;&amp; $scope.page.g_form.getValue('state')=="-11"){
	c.data.showLineItem = true;
	$scope.$broadcast('widget-filter-breadcrumbs.queryModified', "po_header="+value);
		}
		else{
			c.data.showLineItem = false;
		}
});
	$rootScope.$on('itemsSelected', function(event,obj) {
		c.data.showLineItem = false;
	});
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description&gt;Ticket Section&lt;/description&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;embeded_form_data_table_po&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Form PO Selector&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    data.showLineItem = true;
    data.widgetOptions = "";
    var poID = getData($sp.getParameter("table"), $sp.getParameter("sys_id"));
    if (poID != '') {
        data.filter = "po_header=" + getData($sp.getParameter("table"), $sp.getParameter("sys_id"));
        data.showLineItem = true;
    } 
	else{
		data.filter="po_header=";
        data.showLineItem = false;
	}

    var widgetOptions = {};
    widgetOptions.table = "x_478823_nhorizon_po_line_item";
    widgetOptions.filter = data.filter;
    data.poSelector = $sp.getWidget("po_line_item_list", widgetOptions);

    function getData(table, id) {
        var pid = '';
        var gr = new GlideRecord(table);
        if (gr.get(id)) {
			if(gr.state==-11 &amp;&amp; gr.po_input==""){
				pid = gr.invoice_header.po_details.toString();
			}
        }
        return pid;
    }

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-05-12 05:36:19&lt;/sys_created_on&gt;&lt;sys_id&gt;a1a0ac68dbb8101011699fd2ca961955&lt;/sys_id&gt;&lt;sys_mod_count&gt;9&lt;/sys_mod_count&gt;&lt;sys_name&gt;Form PO Selector&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_a1a0ac68dbb8101011699fd2ca961955&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-04 17:26:11&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-show="data.showLineItem"&gt;

&lt;!--&lt;widget ng-show="data.showLineItem" id="po_line_item_list" options='{"table": "x_478823_nhorizon_po_line_item", "filter":"sys_id=rahul"}' &gt;&lt;/widget&gt;--&gt;
  &lt;sp-widget ng-show="data.showLineItem" widget="data.poSelector"&gt;&lt;/sp-widget&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>956133938</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>0ae619b7dbc2101011699fd2ca96191d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172805e6f0e0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Form PO Selector</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>acbf9100125110102b93dd1bc56df578</update_guid>
<update_guid_history>acbf9100125110102b93dd1bc56df578:956133938,e54a5b1e2f8d1010e1ced307802311d6:192140491,4871c74d9c01d010a26db1a94de14e36:1232548184,9bbdd245a2cd90104ad974883b62f475:-1169179218,bb4d1a05a5cd9010cf264cb437c98d33:1211574110,3be795d9ee3410105c74264ffc97a213:-1689769587,98a711999d341010c63c7bdea1b1ba3a:-2014461148,ee316c68cfb81010dcd8f040213abfad:1490131616,a2e0ac683cb81010212a22359364531b:491571566,69a0ac6803b810104418c7793fa57a58:902323308</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_570f9991db9d901011699fd2ca96199e</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>Sachin</sys_created_by><sys_created_on>2020-06-08 14:35:47</sys_created_on><sys_id>570f9991db9d901011699fd2ca96199e</sys_id><sys_mod_count>0</sys_mod_count><sys_name>RESTAPIRequest</sys_name><sys_package display_value="NHorizon" source="x_478823_nhorizon">584e2a5adbbf001011699fd2ca961993</sys_package><sys_policy/><sys_scope display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</sys_scope><sys_update_name>sys_scope_privilege_570f9991db9d901011699fd2ca96199e</sys_update_name><sys_updated_by>Sachin</sys_updated_by><sys_updated_on>2020-06-08 14:35:47</sys_updated_on><target_name>RESTAPIRequest</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>292604897</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>0ae619b7dbc2101011699fd2ca961920</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172945bdb1d0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>RESTAPIRequest</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>9b0f99916e9d9010342b4e4fa1e5e1a0</update_guid>
<update_guid_history>9b0f99916e9d9010342b4e4fa1e5e1a0:292604897</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_3eb26609dbcd901011699fd2ca961975</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {
    /* widget controller */
    var c = this;
    if ($scope.data.count &gt; 0) {
        var table = $('#tableRendererRTask').DataTable({
            data: $scope.data.data,
            bFilter: false,
            "paging": false,
            "ordering": false,
            "info": false,
            columns: $scope.data.columns
        });
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;jtable_response_task_embeded&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;JTable response task embeded&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    data.count = 0;
    data.view = "vendor_user";
    data.table = "x_478823_nhorizon_response_task";
    data.title = getTablename("x_478823_nhorizon_response_task");
    data.filter = "request=" + $sp.getParameter("sys_id");
    var fields = $sp.getListColumns(data.table, data.view);

    fields = fields.split(",");
    var globaRecordArray = [];
    var columnArray = [];
    var grIndex = 0;
    var getRecord = new GlideRecordSecure(data.table);
    getRecord.addEncodedQuery(data.filter);
	if(!gs.hasRole("x_478823_nhorizon.AP_Agent")&amp;&amp;!gs.hasRole("x_478823_nhorizon.AP_SuperAgent")&amp;&amp;!gs.hasRole("x_478823_nhorizon.AP_AgentSupervisor")){
		getRecord.addQuery("active", false);
	}
    getRecord.query();
    data.count = getRecord.getRowCount();

    while (getRecord.next()) {
        var recordArray = [];
        var recordObject = {};
        for (var i = 0; i &lt; fields.length; i++) {
            if (grIndex == 0) {
                var columnObject = {};
                columnObject.data = fields[i];
                columnObject.title = getRecord[fields[i]].getLabel();
                columnArray.push(columnObject);
            }
            var fieldname = fields[i];

            recordObject[fieldname] = getRecord[fields[i]].getDisplayValue().toString();
            //	recordArray.push(recordObject);
        }
        globaRecordArray.push(recordObject);
        grIndex++;
    }
    data.columns = columnArray;
    data.data = globaRecordArray;

})();

function getTablename(table) {
    var gr = new GlideRecord("sys_db_object");
    if (gr.get("name", table)) {
        return gr.label.toString();
    }
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-05-26 14:37:17&lt;/sys_created_on&gt;&lt;sys_id&gt;3eb26609dbcd901011699fd2ca961975&lt;/sys_id&gt;&lt;sys_mod_count&gt;27&lt;/sys_mod_count&gt;&lt;sys_name&gt;JTable response task embeded&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_3eb26609dbcd901011699fd2ca961975&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-13 17:21:22&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-show="data.count &gt; 0"&gt;
  &lt;h3&gt;{{data.title}}&lt;/h3&gt;
&lt;table id="tableRendererRTask" class="display" style="width:100%"&gt;

    &lt;/table&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1516110911</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>0ee619b7dbc2101011699fd2ca96191c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172aeb340d30000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>JTable response task embeded</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>bde4bb7a4ddd10104d867fff628c3482</update_guid>
<update_guid_history>bde4bb7a4ddd10104d867fff628c3482:1516110911,d794f37adfdd10108a4883c420549ee2:1702583334,81748f3a385d101094bedf4117b21c6c:1516110911,151dbef69b5d10109cdef969941f4176:2055626932,652ab5ec8a155010acb25dd6620b72b3:-1258299090,9d0a36da294d1010127e7aeffdb99f12:-1499970436,89893e9ae24d1010cd4e433a6de415c2:-1793724440,3839fa5a444d101068d6a65e07d84636:-914655747,3398765a3d4d10108617a82c8c04ce6d:-790994632,1bce2292ee4d101073975f2f18bf3efd:-1638312784,15da0db9444510109e798c1afe3d3856:2092432996,647a01b9c34510100481a14392ade1fb:843311691,f38f34b1a445101027410cc480f77278:1407035780,675f74b10e451010f084162c582d21b8:138394404,b71fb4b1ef451010857a317ccda2a6de:1973181185,11ee70711b451010682f5b38301f8d0a:-310654896,b1ae70b1bb451010d2d4047c52fae5f5:-1769465424,b44eb07148451010f0b10d4d9679920f:-34531481,62c93cbdb5051010c1cf38d64e86d900:-277964935,466930bd5c051010aa367f6d5637e5b2:1910335403,5d5da2010f01d010e18e295fa225fdc5:1946066559,90d92e4d1bcd9010e2dba424bcd2eb75:-599148821,2049264d33cd90101deaa8c6eabbfcb9:352459560,22d86e0d26cd9010cfef0443a5e14e73:1216368940,7688aa0d2ccd90107d76d329d04be4c0:-1412943044,6315e28964cd90107fba581d8ca6f7f3:1261028137,88f26e0956cd9010ceb4b4d1bbc9be5c:-1839850873,f6b26609c2cd901007557b01dc016f77:892619312</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_properties_24de57037f000001002b3574b0ad5187</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_properties"><sys_properties action="INSERT_OR_UPDATE"><choices/><description>Date format</description><ignore_cache>false</ignore_cache><is_private>false</is_private><name>glide.sys.date_format</name><read_roles/><suffix/><sys_class_name>sys_properties</sys_class_name><sys_created_by>glide.maint</sys_created_by><sys_created_on>2005-12-13 16:05:17</sys_created_on><sys_id>24de57037f000001002b3574b0ad5187</sys_id><sys_mod_count>13</sys_mod_count><sys_name>glide.sys.date_format</sys_name><sys_package display_value="System (glidesoft)" source="glidesoft">8ae93f02db33001011699fd2ca961994</sys_package><sys_policy/><sys_scope display_value="Global">global</sys_scope><sys_update_name>sys_properties_24de57037f000001002b3574b0ad5187</sys_update_name><sys_updated_by>Sachin</sys_updated_by><sys_updated_on>2020-06-27 16:30:22</sys_updated_on><type>date_format</type><value>dd/MM/yyyy</value><write_roles/></sys_properties><sys_translated_text action="delete_multiple" query="documentkey=24de57037f000001002b3574b0ad5187"/></record_update>]]></payload>
<payload_hash>1784345394</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>0ee619b7dbc2101011699fd2ca96191f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172f69d9ee90000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>glide.sys.date_format</target_name>
<type>System Property</type>
<update_domain>global</update_domain>
<update_guid>277f6f9f18651010808af74d3ae51f42</update_guid>
<update_guid_history>277f6f9f18651010808af74d3ae51f42:1784345394,cb7f6f9fda651010567868bea858e83c:-1933659150</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_91447079db05101011699fd2ca961906</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;sp_platform&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($rootScope, $scope, $timeout, $location, $log, $window, spUtil, nowAttachmentHandler, spAriaUtil, spNavStateManager) {
  $scope.submitting = false;
  $scope.mandatory = [];
  $scope.errorMessages = [];
  $scope.data.show_sql = false;
  $scope.saveButtonSuffix = spUtil.getAccelerator('s');
  $scope.isPageReady = false;
  $scope.adminMenu = {
    encodedPageUrl: encodeURIComponent($location.url()),
    getClientScriptCount: function() {
      var count = 0;
      if ($scope.data.f.client_script) {
        count += $scope.data.f.client_script.onChange.length;
        count += $scope.data.f.client_script.onLoad.length;
        count += $scope.data.f.client_script.onSubmit.length;
      }
      return count;
    }
  };
	var tableId = $scope.data.sys_id != -1 ? $scope.data.sys_id : ($scope.data.f ? $scope.data.f._attachmentGUID : -1);
	spUtil.recordWatch($scope, "sys_attachment", "table_sys_id=" + tableId, function (response, data) {
    $scope.attachmentHandler.getAttachmentList();
    if (response.data) {
        var options = {};
        options.operation = response.data.operation;
        options.filename = response.data.display_value;
	options.sys_id = tableId;
	options.table = $scope.data.table;
        options.state = (response.data.record &amp;&amp; response.data.record.state) ? response.data.record.state.value : "";
        if (options.operation === 'update' &amp;&amp; options.state === 'not_available')
         $rootScope.$broadcast("attachment.updated", options);
    }
});
	
	$scope.$on('sn.attachment.scanned', function() {
		updateAttachmentState($scope.data.table, $scope.data.sys_id);
  });
	
	function updateAttachmentState(table, sys_id) {
    if (sys_id == -1)
        return;
    $scope.server.refresh();
  }
	
  $rootScope.$on('$sp.html.editor.progress', function(e, conf) {
      $scope.submitting = conf.state;
  });

  $scope.getButtonClass = function(action) {
		if (action.form_style == "destructive")
			return "btn-danger";
		
		if (action.form_style == "primary")
			return "btn-primary";
		
		return "btn-default";
	};
	
  $scope.getUIActions = function(type) {
    if ($scope.data.disableUIActions)
      return [];
    if (type) {
      return $scope.data.f._ui_actions.filter(function(action) {
        //We handle the primary action button separately.
        return !action.primary &amp;&amp; action['is_' + type];
      });
    } else {
      return $scope.data.f._ui_actions;
    }
  }

  $scope.getPrimaryAction = function() {
    var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
      return action.primary;
    });		
    return (primaryActions.length) ? primaryActions[0] : null;
  }

  $scope.getUIActionContextMenu = function(event) {
    var menu = [];
    if (event.ctrlKey)
      return menu;

    var contextActions = $scope.getUIActions('context');
    contextActions.forEach(function(action) {
      menu.push([action.name, function() {
        $scope.triggerUIAction(action);
      }]);
    });

    if (contextActions.length &gt; 0)
      menu.push(null);
    menu.push([$scope.data.exportPDFMsg, function() {
      exportPDF("");
    }]);
    menu.push([$scope.data.exportPDFLandMsg, function() {
      exportPDF('true');
    }]);

    return menu;
  }

  function exportPDF(landscape) {
    $window.open("/" + $scope.data.f.table + ".do?PDF&amp;landscape=" + landscape + "&amp;sys_id=" + $scope.data.sys_id + "&amp;sysparm_view=" + $scope.data.f.view);
  }

  //trigger the primary UI Action on save (if there is one)
  var deregister = $scope.$on('$sp.save', function() {
    var primaryAction = $scope.getPrimaryAction();
    if (primaryAction)
      $scope.triggerUIAction(primaryAction);
  });
  $scope.$on('$destroy', function() {
    deregister()
  });

  $scope.triggerUIAction = function(action) {
		if ($scope.data.disableUIActions &amp;&amp; !action.primary) {
      return;
    }

    var activeElement = document.activeElement;
    if (activeElement) {
      activeElement.blur();
    }

    $scope.$evalAsync(function() {
      if (g_form) {
        $scope.submitting = true;
        if (!g_form.submit(action.action_name || action.sys_id))
          $scope.submitting = false;
      }
    });
  }

  $scope.$on("spModel.uiActionComplete", function(evt, response) {
    $scope.submitting = false;
    if (response.isActionAborted)
	return;
    var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
    loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
  });

  function constructResponseHandler(response) {
    return function() {
	  $rootScope.$broadcast("sp.form.submitted", {sys_id: (response.isInsert) ? response.sys_id : $scope.data.sys_id});
      var message;
      var eventName = "sp.form.record.updated";
      if (response.isInsert) {
        message = $scope.data.recordAddedMsg;
        var search = $location.search();
        search.sys_id = response.sys_id;
        search.spa = 1;
        $location.search(search).replace();
      } else
        message = $scope.data.updatedMsg;

      $scope.data.hideRelatedLists = hideRelatedLists();
      $scope.$emit(eventName, $scope.data.f._fields);
      $rootScope.$broadcast(eventName, $scope.data.f._fields);
      $scope.status = message;
      spUtil.addTrivialMessage(message);
      $timeout(clearStatus, 2000);
    }
  }

  var ctrl = this;
  // switch forms
  var unregister = $scope.$on('$sp.list.click', onListClick);
  $scope.$on("$destroy", function() {
    unregister();
  })
	
	function _save() {
		var primaryAction = $scope.getPrimaryAction();
    if (primaryAction)
      $scope.triggerUIAction(primaryAction);
	}
	
	function onListClick(evt, arg) {
		loadForm(arg.table, arg.sys_id);
	}

  function loadForm(table, sys_id) {
    var f = {};
    $scope.data.table = f.table = table;
    $scope.data.sys_id = f.sys_id = sys_id;
    f.view = $scope.data.view;
    return $scope.server.update().then(setupAttachmentHandler);
  }

  function openRelatedList(e, queryString) {
    // todo: Open this in a modal
    $location.search(queryString);
    e.preventDefault();
  }

  $scope.$on('spModel.fields.rendered', function() {
    if (ctrl.panels)
      ctrl.panels.removeClass('shift-out').addClass('shift-in');
  });
	
	var g_form;
	function initForm(gFormInstance) {
		if (gFormInstance.getTableName() == $scope.data.f.table){
			g_form = gFormInstance;
			spNavStateManager.register($scope.data.table, _save, g_form);
			$scope.isPageReady = true;
			$timeout(function() {
				$rootScope.$emit('spModel.gForm.rendered', g_form);
			}, 175);
		}
	}
	
  $scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		initForm(gFormInstance);
  });
	
	$scope.$on('spModel.gForm.env.created', function(e, gFormInstance) {
		initForm(gFormInstance);
  });
	
	// update the comments or worknotes based on activity stream
	$scope.$on("activity_stream_is_changed", function(event, data) {
		if (g_form &amp;&amp; g_form.hasField(data.fieldName)) {
			g_form.setValue(data.fieldName, data.input);
			if (data.fieldToClear != "" &amp;&amp; g_form.hasField(data.fieldToClear))
				g_form.setValue(data.fieldToClear, "");
		}
	})

  // Show or hide related lists
  $scope.$watch('data.f._related_lists', function() {
    $scope.data.hideRelatedLists = hideRelatedLists();
  }, true);

  function hideRelatedLists() {
    if (!$scope.data.f._related_lists)
      return true;

    if ($scope.options.hideRelatedLists == true)
      return true;

    if ($scope.data.sys_id == '-1')
      return true;

    // If all related lists are visible=false then hide
    if ($scope.data.f._related_lists.length &gt; 0) {
      for (var i in $scope.data.f._related_lists) {
        var list = $scope.data.f._related_lists[i];
        if (list.visible) {
          return false;
        }
      }
    }
    return true;
  }

  function clearStatus() {
    $scope.status = "";
  }

  function setupAttachmentHandler() {
    $scope.attachmentHandler = new nowAttachmentHandler(appendDone, appendError);

		$scope.$evalAsync(function() {
			$scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, 1024 * 1024 * $scope.data.maxAttachmentSize);
		});

    $scope.$on('dialog.upload_too_large.show', function(e) {
      $log.error($scope.data.largeAttachmentMsg);
      spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
    });
  }
  setupAttachmentHandler();

  function appendDone() {
    // don't know here whether upload succeeded, so can't show msg either way
    $scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
    spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
  }

  function appendError(error) {
    $scope.errorMessages.push(error);
    spUtil.addErrorMessage(error.msg + error.fileName);
  }

  if ($scope.data.f.title) {
	  $scope.$emit('sp.widget-modal.set-aria-label', $scope.data.f.title);
  }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.btn-form-menu {
	vertical-align: inherit;
  padding: inherit;
  background: none;
}

.panel-title {
  word-wrap: break-word;
}

.panel-heading {
  .dropdown-menu {
    a {
      white-space: normal;
    }
  }
}

.sc-field-error-label {
  margin-right: .5em;
  display: inline-block;
  background-color: $sc-field-error-color;
}

.comment {
	font-weight: bold;
	margin-top: 2px;
	margin-bottom: 2px;
}
.mce-panel, .mce-btn {
	background-image: none;
	background-color: #f0f3f4;
}

.action-btn {
  margin-right: 5px;
}

.timeline-container {
   max-height: 50vh;
   height: 100%;
   overflow-y: auto;
}

.panel .panel {
    height: auto !important;
}

.attachment-button {
  .glyphicon-paperclip {
    font-size: 18px;
  }
}

.dropdown {
  .glyphicon-menu-hamburger:focus {
 		outline: thin dotted;
		outline: 5px auto $input-border-focus;
		outline-offset: -2px; 
	}
}

.empty-state-wrapper {
  width: 100%;
  height: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 10vh 20px 20px;

  .empty-state {
    border: 1px solid #e7e9eb;
    border-radius: 10px;
    max-width: 700px;
    padding: 30px 40px 20px;
    position: relative;

    .empty-state-badge {
      top: -36px;
      left: 50%;
      position: absolute;
      height: 72px;
      width: 72px;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      border-radius: 100%;
      color: #ffffff;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      font-size: 40px;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin-left: -36px;
      text-align: center;
    }

    .empty-state-header {
      font-size: 30px;
      text-align: center;
      color: #343d47;
    }

    .empty-state-content {
      ul {
        list-style: disc outside;
        margin: 0 0 10px 0;
        padding: 0 0 0 30px;
      }
    }
  }
}

.text-success-alt {
	background-color: $state-success-text;
}

.text-info-alt {
	background-color: $state-info-text;
}

.sp-cross-scope-msg {
  margin-bottom: 10px;
}&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;Response Task Embedded Form&lt;/name&gt;&lt;option_schema&gt;[{"name":"disableUIActions","section":"Behavior","label":"Disable UI Actions on Form","type":"boolean"},{"name":"showFormView","section":"Behavior","label":"Display current form view","type":"boolean"},{"name":"omitHeaderOptions","section":"Behavior","label":"Omit header options icon","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[// form functionality - URL parameter driven
(function($sp, input, data, options, gs) {
    /* "use strict"; -linter issues */
    // populate the 'data' variable
    data.recordid = getformParms($sp.getParameter("sys_id"));
    if (data.recordid != false)
        data.showForm = true;
    else
        data.showForm = false;
    data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
    data.recordAddedMsg = gs.getMessage("Record Added");
    data.updatedMsg = gs.getMessage("updated_uppercase");
    data.exportPDFMsg = gs.getMessage("Export to PDF");
    data.exportPDFLandMsg = gs.getMessage("Export to PDF (landscape)");
    data.addAttachmentMsg = gs.getMessage("Add an attachment");
    data.maxAttachmentSize = parseInt(gs.getProperty("com.glide.attachment.max_size", 1024));
    if (isNaN(data.maxAttachmentSize))
        data.maxAttachmentSize = 24;
    data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "" + data.maxAttachmentSize + "MB");
    data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");

    data.isAdmin = gs.hasRightsTo('sp/configure.all/execute', null);
    data.emptyStateTemplate = options.empty_state_template;
    data.disableUIActions = options.disableUIActions === "true";
    data.hideRelatedLists = options.hideRelatedLists || false;
    if (input) {
        data.table = input.table;
        data.sys_id = input.sys_id;
        data.view = input.view;
        var result = {};
        if (input._fields) {
            result = $sp.saveRecord(input.table, input.sys_id, input._fields);
            data.sys_id = result.sys_id;
        }

        if (input.sys_id == '-1')
            data.isNewRecord = true;
    } else {
        data.table = "x_478823_nhorizon_response_task" || options.table || $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table");
        data.sys_id = data.recordid || options.sys_id || $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id");
        if (!data.sys_id &amp;&amp; options.sys_id_required != "true")
            data.sys_id = "-1";
        data.view = "Response_User" || options.view || $sp.getParameter("view") || $sp.getParameter("v"); // no default
    }

    data.query = $sp.getParameter("query") || options.query || "";
    data.f = {};
    if (!data.table)
        return;

    // Form widget is not a supported way to view an attachment
    if (data.table == "sys_attachment") {
        data.tableUnsupported = true;
        return;
    }

    if (!GlideTableDescriptor.isValid(data.table))
        return;

    if (!data.sys_id)
        return;

    var rec = $sp.getRecord(data.table, data.sys_id);
    data.isValid = rec.isValid() || data.sys_id == "-1";
    if (!data.isValid)
        return;

    data.table = rec.getRecordClassName();
    data.tableHierarchy = GlideDBObjectManager.getTables(data.table).toArray().join();
    data.canWrite = rec.canWrite();
    var hasRecordAccess = data.sys_id == "-1" ? rec.canCreate() : data.canWrite;
    data.canAttach = hasRecordAccess &amp;&amp; gs.hasRole(gs.getProperty('glide.attachment.role')) &amp;&amp; !GlideTableDescriptor.get(data.table).getED().getBooleanAttribute("no_attachment");
    data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

    // PRB1335036: show appropriate message when record is in cross app scope
    data.f.outOfScope = !rec.isInSelectedScope();
    // Populate scope labels only when needed
    if (data.f.outOfScope) {
        data.f.recordScopeLabel = gs.getScopeLabelByRecordId(rec.getUniqueValue());
        data.f.currentScopeLabel = gs.getCurrentApplicationName();
    }

    // Activity formatter is hardcoded to set specific options
    for (var f in data.f._formatters) {
        var fm = data.f._formatters[f];
        if (fm.formatter == "activity.xml") {
            fm.hardcoded = true;
            fm.widgetInstance = $sp.getWidget('widget-ticket-conversation', {
                table: data.table,
                sys_id: data.sys_id,
                includeExtended: true,
                hideAttachmentBtn: true,
                title: "${Activity}",
                use_dynamic_placeholder: true,
                btnLabel: "${Post}"
            });
        } else if (fm.formatter == "com_glideapp_servicecatalog_veditor" || fm.formatter == "com_glideapp_questionset_default_question_editor") {
            var qsConfig = $sp.getValue('quick_start_config');
            if (qsConfig)
                qsConfig = JSON.parse(qsConfig)[0];
            fm.widgetInstance = $sp.getWidget(fm.widget, {
                table: data.table,
                sys_id: data.sys_id,
                readonly_variable_editor: qsConfig ? qsConfig.readonly_variable_editor : 'false'
            });
        } else
            fm.widgetInstance = $sp.getWidget(fm.widget, data);
    }
})($sp, input, data, options, gs);

function getformParms(id) {
    var gr = new GlideRecord("x_478823_nhorizon_response_task");
    gr.addQuery("assigned_to", gs.getUserID());
    gr.addQuery("request", id);
    gr.addActiveQuery();
    gr.orderByDesc("sys_created_on");
    gr.query();
    if (gr.next()) {
        return gr.sys_id.toString();
    } else
        return false;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-05-28 14:30:08&lt;/sys_created_on&gt;&lt;sys_id&gt;91447079db05101011699fd2ca961906&lt;/sys_id&gt;&lt;sys_mod_count&gt;13&lt;/sys_mod_count&gt;&lt;sys_name&gt;Response Task Embedded Form&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_91447079db05101011699fd2ca961906&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-14 07:29:06&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div ng-if="data.showForm"&gt;
&lt;div ng-if="::!data.isValid &amp;&amp; !data.emptyStateTemplate" class="panel panel-default"&gt;
  &lt;div class="panel-body wrapper-lg text-center"&gt;
    &lt;span ng-if="!data.tableUnsupported"&gt;${Record not found}&lt;/span&gt;
    &lt;span ng-if="data.tableUnsupported"&gt;${Form view not supported for requested table}&lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div ng-if="!data.isValid &amp;&amp; data.emptyStateTemplate" class="panel-shift"&gt;
  &lt;div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div ng-if="data.isValid" class="panel-shift"&gt;
  &lt;div class="" ng-if="!data.f._view.length &amp;&amp; data.hideRelatedLists &amp;&amp; data.emptyStateTemplate"&gt;
    &lt;div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="" ng-if="!data.f._view.length &amp;&amp; data.hideRelatedLists &amp;&amp; !data.emptyStateTemplate"&gt;
    &lt;div class="panel panel-default"&gt;
      &lt;div class="panel-heading"&gt;&lt;span class="panel-title"&gt;{{data.f.title}}&lt;/span&gt; &lt;span ng-if="::options.showFormView == 'true' &amp;&amp; data.f.view != ''"&gt;[{{data.f.view_title}} view]&lt;/span&gt;&lt;/div&gt;
      &lt;div class="panel-body wrapper-lg text-center"&gt;
        ${No elements to display}
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;!-- readOnly due to scope --&gt;
  &lt;div ng-if="isPageReady &amp;&amp; data.f.outOfScope" class="read-only-message"&gt;
    &lt;div class="alert alert-info sp-cross-scope" role="alert"&gt;
      &lt;p&gt;${This record is in the &lt;strong&gt;{{data.f.recordScopeLabel}}&lt;/strong&gt; application, but &lt;strong&gt;{{data.f.currentScopeLabel}}&lt;/strong&gt; is the current application.}&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div ng-show="isPageReady" class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists" &gt;
    &lt;div class="panel-heading" ng-if="data.f.title.length" sp-context-menu="getUIActionContextMenu(event)"&gt;
      	&lt;span class="dropdown m-r-xs" ng-if="(data.isAdmin || getUIActions('context').length &gt; 0) &amp;&amp; options.omitHeaderOptions != 'true'"&gt;
            &lt;button aria-label="${Form menu}" class="btn btn-form-menu dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;&lt;/button&gt;
            &lt;ul class="dropdown-menu" aria-labelledby="adminMenu"&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a ng-href="/{{data.f.table}}.do?sys_id={{data.f.sys_id}}&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Open in platform}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin" class="dropdown-header"&gt;${Configure}&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&amp;sysparm_list={{data.f._sections[0].id}}&amp;sysparm_form=section&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Form Layout}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&amp;sysparm_list={{data.f.table}}&amp;sysparm_form=related_list&amp;sysparm_view={{data.f.view}}" target="_blank"&gt;${Related Lists}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="?id=lf&amp;table=sys_ui_policy&amp;filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id:'lf', table: 'sys_ui_policy', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})"&gt;${UI Policies} &lt;span class="badge pull-right" ng-if="f.policy.length"&gt;{{f.policy.length}}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin"&gt;&lt;a href="?id=lf&amp;table=sys_script_client&amp;filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id: 'lf', table: 'sys_script_client', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})"&gt;${Client Scripts} &lt;span class="badge pull-right" ng-if="adminMenu.getClientScriptCount()"&gt;{{adminMenu.getClientScriptCount()}}&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="getUIActions('context').length &gt; 0 &amp;&amp;  data.isAdmin" role="separator" class="divider"&gt;&lt;/li&gt;
              &lt;li ng-repeat="action in getUIActions('context')"&gt;&lt;a href="" ng-click="triggerUIAction(action)"&gt;{{action.name}}&lt;/a&gt;&lt;/li&gt;
              &lt;li ng-if="::data.isAdmin || getUIActions('context').length &gt; 0" role="separator" class="divider"&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a target="_new" href="/{{data.f.table}}.do?PDF&amp;sys_id={{data.sys_id}}&amp;sysparm_view={{data.f.view}}"&gt;${Export to PDF}&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a target="_new" href="/{{data.f.table}}.do?PDF&amp;landscape=true&amp;sys_id={{data.sys_id}}&amp;sysparm_view={{data.f.view}}"&gt;${Export to PDF (landscape)}&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/span&gt;
      &lt;span class="panel-title" role="heading" aria-level="2"&gt;{{data.f.title}}&lt;/span&gt; &lt;span ng-if="::options.showFormView == 'true' &amp;&amp; data.f.view != ''"&gt;[{{data.f.view_title}} view]&lt;/span&gt;
      &lt;div ng-if="::attachmentHandler &amp;&amp; data.canAttach" title="{{::data.addAttachmentMsg}}" class="pull-right attachment-button"&gt;
      	&lt;sp-attachment-button&gt;&lt;/sp-attachment-button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="panel-body"&gt;
      &lt;!-- performance debug --&gt;
      &lt;div ng-if="data.show_sql"&gt;
        &lt;div class="comment"&gt;
          &lt;span ng-if="data.f._perf.sql_count"&gt;${SQL Statements {{data.f._perf.sql_count}}}, &lt;/span&gt;
          &lt;span&gt;${Time {{data.f._perf.time}}}&lt;/span&gt;
        &lt;/div&gt;
        &lt;div ng-repeat="s in data.f._perf.sql" class="{{s.type}}"&gt;
          {{s.statement}}
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- attachments --&gt;
      &lt;sp-attachment-manager table="::data.table" sys-id="data.f._attachmentGUID" omit-edit="::!data.canAttach"&gt;&lt;/sp-attachment-manager&gt;
      &lt;!-- form --&gt;
      &lt;div&gt;
        &lt;sp-model form_model="data.f" mandatory="mandatory"&gt;&lt;/sp-model&gt;
      &lt;/div&gt;
      &lt;!-- UI Action Links --&gt;
      &lt;div ng-if="getUIActions('link').length &gt; 0"&gt;
        &lt;label style="margin: 0;"&gt;${Related Links}&lt;/label&gt;
        &lt;div ng-repeat="action in getUIActions('link')"&gt;
          &lt;a href ng-click="triggerUIAction(action)" gsft_id="{{::action.sys_id}}"&gt;{{::action.name}}&lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;!-- related lists --&gt;
	  &lt;div ng-if="!data.hideRelatedLists"&gt;
        &lt;label style="margin: 0"&gt;${Related Lists}&lt;/label&gt;
        &lt;div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;"&gt;
          &lt;span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible"&gt;
            &lt;a ng-if="rl.type != 'REL'" ng-href="?id=lf&amp;table={{::rl.table}}&amp;filter={{rl.field}}%3D{{data.f.sys_id}}{{rl.filter ? '^' + rl.filter : ''}}&amp;view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{::rl.table}}', filter: '{{rl.field}}%3D{{data.f.sys_id}}'})"&gt;{{rl.plural}}
              &lt;span class="label label-as-badge label-primary" ng-if="rl.count"&gt;{{::rl.count}}&lt;/span&gt;
            &lt;/a&gt;
            &lt;a ng-if="::rl.type == 'REL'" href="?id=lf&amp;table={{::rl.table}}&amp;relationship_id={{rl.relationship_id}}&amp;apply_to={{rl.apply_to}}&amp;apply_to_sys_id={{rl.apply_to_sys_id}}&amp;view={{::data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{::rl.table}}', apply_to: '{{rl.apply_to}}', apply_to_sys_id: '{{rl.apply_to_sys_id}}', relationship_id: '{{rl.relationship_id}}'})"&gt;{{rl.label}}
              &lt;span class="label label-as-badge label-primary" ng-if="rl.count"&gt;{{rl.count}}&lt;/span&gt;
            &lt;/a&gt;
            &lt;span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;" aria-hidden="true"&gt; | &lt;/span&gt;
          &lt;/span&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="panel-footer"&gt;
      &lt;button ng-click="triggerUIAction(action)" ng-disabled="submitting" ng-repeat="action in getUIActions('button')" class="btn action-btn" ng-class="::getButtonClass(action)" gsft_id="{{::action.sys_id}}"&gt;{{action.name}}&lt;/button&gt;
      &lt;span&gt;{{status}}&lt;/span&gt;
      &lt;button ng-if="getPrimaryAction()" type="submit" ng-click="triggerUIAction(getPrimaryAction())" ng-disabled="submitting" class="btn btn-primary action-btn pull-right" gsft_id="{{::getPrimaryAction().sys_id ? getPrimaryAction().sys_id : ''}}"&gt;${Save} &lt;span ng-if="saveButtonSuffix"&gt;(${{{saveButtonSuffix}}})&lt;/span&gt;&lt;/button&gt;
      &lt;div style="clear: both;"&gt;&lt;/div&gt;
      &lt;div ng-if="mandatory.length" class="alert alert-info" style="margin-top: .5em" aria-live="polite" aria-atomic="true"&gt;
        &lt;span ng-if="mandatory.length &gt; 0"&gt;${Required information} &lt;/span&gt;
        &lt;span ng-repeat="f in mandatory" class="label sc-field-error-label" ng-bind="f.label"&gt;&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1531549785</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>82e619b7dbc2101011699fd2ca96191d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172b1bb5e270000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Response Task Embedded Form</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>a7e6ba8bd29550102f759314bdd4c5b6</update_guid>
<update_guid_history>a7e6ba8bd29550102f759314bdd4c5b6:-1531549785,d74a6ea6cdd11010db9d3292a0db958a:-1052923321,5f5962a656d11010b00e435e5c5cad66:529896016,b6c8ae666ed1101056b1559b308160c7:-1531549785,2cd6ae2625d11010fe500bb7294cdc0b:919256560,1cd61aaa15911010f86b9afd37803a74:-1306037453,9a26526ad0911010d3633a2ad050b5cc:1744442099,c815da2aa2911010c6a4b6c4c017f2ca:-1772287410,84080df5624510105100bb5f62d98b38:892448991,8e8c70317e45101070f9794bd1f5ef7f:-628155044,2a7cb831084510104fdebe0b0a62cd1e:616815452,d97678b9760510106783b990774b488f:-1708953731,a385b0f9d60510106cdd72c4274e716b:-1535522546,9144f0b9e2051010fc8d118f8afe7542:386147528</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</application>
<category>customer</category>
<comments/>
<name>sys_scope_privilege_1f0f9991db9d901011699fd2ca9619a1</name>
<payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_scope_privilege"><sys_scope_privilege action="INSERT_OR_UPDATE"><operation>execute</operation><source_scope display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</source_scope><status>allowed</status><sys_class_name>sys_scope_privilege</sys_class_name><sys_created_by>Sachin</sys_created_by><sys_created_on>2020-06-08 14:35:47</sys_created_on><sys_id>1f0f9991db9d901011699fd2ca9619a1</sys_id><sys_mod_count>0</sys_mod_count><sys_name>RESTAPIRequestBody</sys_name><sys_package display_value="NHorizon" source="x_478823_nhorizon">584e2a5adbbf001011699fd2ca961993</sys_package><sys_policy/><sys_scope display_value="NHorizon">584e2a5adbbf001011699fd2ca961993</sys_scope><sys_update_name>sys_scope_privilege_1f0f9991db9d901011699fd2ca9619a1</sys_update_name><sys_updated_by>Sachin</sys_updated_by><sys_updated_on>2020-06-08 14:35:47</sys_updated_on><target_name>RESTAPIRequestBody</target_name><target_scope display_value="Global">global</target_scope><target_type>scriptable</target_type></sys_scope_privilege></record_update>]]></payload>
<payload_hash>-1631527775</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>82e619b7dbc2101011699fd2ca961920</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172945bdb4c0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>RESTAPIRequestBody</target_name>
<type>Cross scope privilege</type>
<update_domain>global</update_domain>
<update_guid>5b0f9991d99d9010b2249b6dfef245a2</update_guid>
<update_guid_history>5b0f9991d99d9010b2249b6dfef245a2:-1631527775</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_3ae9f69cdb48501011699fd2ca961959</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;standard&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function ($scope, $rootScope, $location, $window, spUtil, amb, $http, spAriaUtil, $timeout, spNavStateManager) {
	var c = this;
	/*
	 * options:
	 * hide_footer (bool) = true to remove the data table footer contents
	 * hide_header (bool) = true to remove the data table header contents
	 * show_new (bool) = true to show the "New" record button
	 * show_keywords (bool) = true to show the keyword search field
	 * table (string) = the table name to query
	 * filter (string) = the encoded query
	 * o (string) = the order by column
	 * d (string) = The order by direction: asc or desc
	 * p (int) = the page to jump to
	 * fields (string) = comma seperated list of fields that become the list columns
	 * view (string) = the default view to load for columns, overrides fields
	*/
	$scope.selectedItems = [];
	$scope.createInvoice = function(){
		$scope.selectedItems = [];
		for(var checkeditem= 0; checkeditem &lt; document.getElementsByClassName('nhCustomCheckbox').length; checkeditem++){
		if(document.getElementsByClassName('nhCustomCheckbox')[checkeditem].checked){
			 $scope.selectedItems.push(document.getElementsByClassName('nhCustomCheckbox')[checkeditem].id);
			 }
		}
		$scope.data.resolveChecked= true;
		$scope.data.selectedItems  = $scope.selectedItems;
		console.log("$rootScope.poNumber"+$rootScope.poNumber);
		$scope.data.selectedPO  = $rootScope.poNumber;
		$scope.server.update().then(function(response){
			console.log(response.resovedItems);
		 $rootScope.$broadcast('itemsSelected', response.resovedItems);
		});
	};
//	$('#nhCustomCheckbox').on('click', '.nhCustomCheckbox', function() { alert("Checked"); });
	$scope.exportTypes = [{label:'PDF', value: 'PDF'}, {label:'Excel', value:'EXCEL'}, {label:'CSV', value:'CSV'}];
	var keys = ['table', 'filter', 'p', 'o', 'd'];

	var eventNames = {
		click: 'data_table.click',
		setFilter: 'data_table.setFilter',
		setKeywords: 'data_table.setKeywords'
	};

	$scope.go = function(table, item) {
		if ($window.getSelection().toString().length &gt; 0)
			return;

		spNavStateManager.onRecordChange(table).then(function() {
		var parms = {};
		parms.table = table;
		parms.sys_id = item.sys_id;
		parms.record = item;
		$scope.ignoreLocationChange = true;
		for (var x in c.data.list) {
			c.data.list[x].selected = false;
		}
		item.selected = true;
		$scope.$emit(eventNames.click, parms);
		}, function() {
			// do nothing in case of closing the modal by clicking on x
		});	
	};
$scope.showAll = function(){
	$window.location.href = "./vendor?id=vendor_list&amp;table=x_478823_nhorizon_request";
}
	$scope.newRecord = function(){
		var parms = {
			id: 'form',
			table: $scope.data.table,
			view: $scope.data.view,
			sys_id: '-1'
		};
		if ($scope.data.filter != '')
			parms.query = $scope.data.filter;

		$location.search(parms);
	};

	function recoverStateFromUrl() {
		$scope.data.fields = [];
		var s = $location.search();
		for (var x in keys) {
			if (s[keys[x]]) {
				$scope.data[keys[x]] = s[keys[x]];
			}
		}
		$scope.server.update().then(function(data) {
			if (s.sys_id) {
				for (var x in data.list) {
					if (data.list[x].sys_id == s.sys_id) {
						$scope.go(s.table, data.list[x]);
					}
				}
			}
		});
	}

	if ($scope.options.fromUrl) {
		var origSearch = $location.search();
		$scope.$on('$locationChangeSuccess', function(e) {
			var s = $location.search();
			if (origSearch.id !== s.id)
				return;

			if ($scope.ignoreLocationChange){
				$scope.ignoreLocationChange = false;
				return;
			}

			// Helps to recover state when using the browser's back button
			recoverStateFromUrl();
		});
	}


	$scope.getNumber = function(num) {
		return new Array(num);
	}

	$scope.mathMin = function(v1,v2) {
		return Math.min(v1,v2);
	}

	function getData(updateUrl) {
		var f = $scope.data;
		spUtil.update($scope).then(function(data) {
			f.view = data.view;
			if ($scope.options.fromUrl &amp;&amp; updateUrl)
				setPermalink(f.table, f.filter, f.o, f.d, f.p);

			if ($scope.options.show_breadcrumbs &amp;&amp; data.filterBreadcrumbs)
				$scope.$broadcast('widget-filter-breadcrumbs.setBreadcrumbs', data.filterBreadcrumbs.data, data.filter);

			initRecordWatcher(f.table, f.filter);
		});
	}

	function setPermalink(table, filter, orderBy, orderDirection, page){
		$scope.ignoreLocationChange = true;
		var search = $location.search();
		angular.extend(search, {
			spa: 1,
			table: table,
			filter: filter,
			p: page,
			o: orderBy,
			d: orderDirection
		});
	//	$location.search(search);
	}

	var watcher;
	function initRecordWatcher(table, filter){
		if (watcher)
			watcher.unsubscribe();

		if (table &amp;&amp; filter) {
			var watcherChannel = amb.getChannelRW(table, filter);
			amb.connect();
			watcher = watcherChannel.subscribe(function(message) {
				if (!message.data)
					return;
				switch(message.data.action) {
					case "change":
						updateRowFromRW(message);
						break;
					case "exit":
						// A record was removed
					case "enter":
						// A record was added
					default:
						spUtil.update($scope);
						break;
				}
			});
		}
	}

	function updateRowFromRW(message) {
		if (message.data &amp;&amp; message.data.sys_id &amp;&amp; $scope.data.list) {
			var row, field;
			for(var i=0;i&lt;$scope.data.list.length; i++) {
				row = $scope.data.list[i];
				if (row.sys_id == message.data.sys_id) {
					var fields = Object.getOwnPropertyNames(message.data.record);
					for(var f in fields) {
						field = fields[f];
						if(typeof row[field] !== 'undefined') {
						    row[field].display_value = message.data.record[field].display_value;
						}
					}
				}
			}
		}
	}

	$scope.$on('$destroy', function() {
		if (watcher)
			watcher.unsubscribe();
	});

	$scope.setPageNum = function(num) {
		$scope.data.p = num;
		getData(true);
		$timeout(function() {
			$scope.focusOnTableHeader();
		});
	}

	$scope.setOrderBy = function(field) {
		var d = "asc";
		if ($scope.data.o == field) {
			if ($scope.data.d == "asc")
				d = "desc";
			else
				d = "asc";
		}

		if (d === "asc") {
			spAriaUtil.sendLiveMessage($scope.data.msg.sortingByAsc);
		} else if (d === "desc") {
			spAriaUtil.sendLiveMessage($scope.data.msg.sortingByDesc);
		}

		$scope.data.o = field;
		$scope.data.d = d;
		$scope.setSearch(true);
	}

	$scope.setSearch = function(updateUrl) {
		$scope.data.p = 1;
		if ($scope.data.keywords) {
			var previousSearchTerm = $scope.previousSearchTerm;
			if (previousSearchTerm) {
			previousSearchTerm = '123TEXTQUERY321=' + previousSearchTerm;
			var previousSearchTermStartIndex = $scope.data.filter.indexOf(previousSearchTerm);
			var previousSearchTermEndIndex = previousSearchTermStartIndex + previousSearchTerm.length;
			if (previousSearchTermStartIndex &gt;= 0)
				$scope.data.filter = $scope.data.filter.substr(0, previousSearchTermStartIndex) + $scope.data.filter.substr(previousSearchTermEndIndex + 1, $scope.data.filter.length);
			}
			$scope.previousSearchTerm = $scope.data.keywords;
		}
		getData(updateUrl);
	}

	$scope.$on(eventNames.setFilter, function(e, newFilter){
		$scope.data.filter = newFilter;
		$scope.setSearch(false);
	});

	$scope.$on(eventNames.setKeywords, function(e, keywords){
		$scope.data.keywords = keywords;
		$scope.setSearch(false);
	});

	$scope.$on('widget-filter-breadcrumbs.queryModified', function(e, newFilter){
		$scope.data.filter = newFilter;
		$scope.setSearch(true);
	});

	$scope.rowsWerePruned = function() {
		if (!$scope.data.list)
			return;

		$scope.rowsPruned = $scope.mathMin($scope.data.window_end,$scope.data.row_count) - $scope.data.window_start - $scope.data.list.length;
		return $scope.rowsPruned &gt; 0;
	}

	$scope.showFilter = function() {
		return !$scope.data.list.length &amp;&amp; !$scope.data.num_pages &amp;&amp; !$scope.data.invalid_table &amp;&amp; !$scope.loadingData;
	}

	c.appendQuery = function(query){
		if ($scope.data.filter.length &gt; 1)
			$scope.data.filter += '^';
		$scope.data.filter += query;
			$scope.setSearch();

	}

	// Makes Widget Async
	$scope.data = $scope.options;
	$scope.loadingData = true;
	$scope.server.update().then(function() {
		if ($scope.data.newButtonUnsupported)
			console.log("Service Portal: New button not supported for sys_attachment list");
		$scope.loadingData = false;
		initRecordWatcher($scope.data.table, $scope.data.filter);
	});

	function parseQuery(table, queryString){
		return $http.post('/api/now/sp/parsequery/' + table, queryString).then(function(response){
				return response.data.result;
		});
	}

	c.createQueryTerm = function(table, field, sys_id, operator){
		return $http.get('/api/now/sp/getInOutQueryTerm', {
			params: {
				table: table,
				sys_id: sys_id,
				field: field,
				operator: operator
			}
		}).then(function(response){
			if (response &amp;&amp; response.data &amp;&amp; response.data.result)
				return response.data.result.parts;
		});
	}

	c.isMultiPart = function(terms) {
		for (var i = 0; i &lt; terms.length; i++) {
			var term = terms[i];
			while (term.left)
				term = term.left;
			if (term.NQ)
				return true;
		}
		return false;
	}
	
	c.showMatching = function(field, newTerm) {
		var queryString = $scope.data.filter;
		var eq = "";
		parseQuery($scope.data.table, queryString).then(function(oldTerms) {
			var isMultiPart = c.isMultiPart(oldTerms);
			for (var i = 0; i &lt; oldTerms.length; i++) {
				var term = oldTerms[i];
				if (!isMultiPart &amp;&amp; isSameField(newTerm, term))
					continue;

				if (eq.length)
					eq += '^';

				// term may be separated into nested "left" and "right" bits,
				// follow the lefts to the bottom where "NQ" might be specified
				var termNQCheck = oldTerms[i];
				while (termNQCheck.left)
					termNQCheck = termNQCheck.left;
				if (termNQCheck.NQ) {
					// query is multipart so apply new term to each part
					eq += getEncodedTerm(newTerm);
					eq += "^NQ";
				}
				eq += getEncodedTerm(term);
			}
			if (eq.length)
				eq += '^';
			eq += getEncodedTerm(newTerm);

			$scope.data.filter = eq;
			$scope.setSearch();
		});
	};

	c.filterOut = function(field, newTerm) {
		var eq = "";
		if ($scope.data.filter.indexOf("^NQ") == -1) {
			// don't need server roundtrip to parse query,
			// can just append the new term
			eq = $scope.data.filter;
			if (eq.length)
				eq += '^';
			eq += getEncodedTerm(newTerm);
			$scope.data.filter = eq;
			$scope.setSearch();
			return;
		}
		
		// query may be multipart so must apply new term to each part
		var queryString = $scope.data.filter;
		parseQuery($scope.data.table, queryString).then(function(oldTerms) {
			for (var i = 0; i &lt; oldTerms.length; i++) {
				var term = oldTerms[i];
				if (eq.length)
					eq += '^';

				// term may be separated into nested "left" and "right" bits,
				// follow the lefts to the bottom where "NQ" might be specified
				var termNQCheck = oldTerms[i];
				while (termNQCheck.left)
					termNQCheck = termNQCheck.left;
				if (termNQCheck.NQ) {
					// query is multipart so apply new term to end of each part
					eq += getEncodedTerm(newTerm);
					eq += "^NQ";
				}
				eq += getEncodedTerm(term);
			}
			if (eq.length)
				eq += '^';
			eq += getEncodedTerm(newTerm);

			$scope.data.filter = eq;
			$scope.setSearch();
		});
	};

	function isSameField(t1, t2) {
		if ('left' in t1 &amp;&amp; 'left' in t2)
			return t1.left.query_term_field === t2.left.query_term_field;
		else if ('left' in t1)
			return t1.left.query_term_field === t2.query_term_field;
		else if ('left' in t2)
			return t1.query_term_field === t2.left.query_term_field;
		return t1.query_term_field === t2.query_term_field;
	}
	function getEncodedTerm(term) {
		var eq;
		if (term.left) {
			eq = getEncodedTerm(term.left);
			eq += '^OR';
			eq += getEncodedTerm(term.right);
		} else {
			eq = term.query_term_field;
			eq += term.operator;
			eq += term.value;
		}
		return eq;
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.pointer{&amp;#13;
cursor: default!important;&amp;#13;
}&amp;#13;
.panel-heading {&amp;#13;
  padding-left: 8px;&amp;#13;
}&amp;#13;
&amp;#13;
thead {&amp;#13;
  border-bottom: 1px solid #ddd;&amp;#13;
}&amp;#13;
&amp;#13;
table {&amp;#13;
  margin-bottom: 0;&amp;#13;
}&amp;#13;
&amp;#13;
.table &amp;gt; thead &amp;gt; tr &amp;gt; th {&amp;#13;
  border: 1px solid #ddd;&amp;#13;
  vertical-align: middle;&amp;#13;
&amp;#13;
  &amp;amp;:nth-child(2) {&amp;#13;
    border-left: none;&amp;#13;
  }&amp;#13;
&amp;#13;
&amp;#13;
&amp;#13;
  &amp;amp;:last-child {&amp;#13;
    border-right: none;&amp;#13;
  }&amp;#13;
}&amp;#13;
&amp;#13;
th i {&amp;#13;
  display: inline-block;&amp;#13;
  margin-left: 5px;&amp;#13;
  color: #A0A0A0;&amp;#13;
}&amp;#13;
&amp;#13;
th .disabled{&amp;#13;
  color:#ddd;&amp;#13;
}&amp;#13;
&amp;#13;
.th-title {&amp;#13;
  display: inline-block;&amp;#13;
  color: $primary;&amp;#13;
}&amp;#13;
&amp;#13;
.panel-body {&amp;#13;
  overflow: auto;&amp;#13;
  padding: 0px;&amp;#13;
}&amp;#13;
&amp;#13;
&amp;#13;
.selected {&amp;#13;
  color: #fff;&amp;#13;
  background-color: $data-table-selected;&amp;#13;
  border-color: 1px solid #fff;&amp;#13;
}&amp;#13;
&amp;#13;
tbody tr:last-child {&amp;#13;
  border-bottom: none;&amp;#13;
}&amp;#13;
&amp;#13;
.pruned-msg {&amp;#13;
  padding-bottom: 10px;&amp;#13;
  padding-left: 4px;&amp;#13;
  text-align: center;&amp;#13;
}&amp;#13;
&amp;#13;
.pruned-msg-filter-pad {&amp;#13;
  padding-top:8px;&amp;#13;
}&amp;#13;
&amp;#13;
.filter-breadcrumbs {&amp;#13;
  border-bottom: 1px solid #ddd;&amp;#13;
  padding-top: 3px;&amp;#13;
}&amp;#13;
&amp;#13;
.dropdown-toggle {&amp;#13;
  background: none;&amp;#13;
  padding: 0 0 4px 0;&amp;#13;
}&amp;#13;
&amp;#13;
.sp-list-cell {&amp;#13;
  white-space: pre-wrap;&amp;#13;
}&amp;#13;
&amp;#13;
.dropdown {&amp;#13;
  .glyphicon-menu-hamburger:focus {&amp;#13;
 		outline: thin dotted;&amp;#13;
		outline: 5px auto $input-border-focus;&amp;#13;
		outline-offset: -2px; &amp;#13;
	}&amp;#13;
}&lt;/css&gt;&lt;data_table&gt;sp_instance_table&lt;/data_table&gt;&lt;demo_data&gt;{"data":
	{
		"table": "incident",
		"view": "default",
		"o": "opened_at",
		"d": "desc",
		"filter": "activeEQtrue",
		"p": 1,
		"fields": "number,short_description"
	}
}&lt;/demo_data&gt;&lt;description&gt;NH Data Table Request&lt;/description&gt;&lt;docs/&gt;&lt;field_list&gt;table,filter,field_list,maximum_entries,order,order_by,order_direction,title,color,glyph,sp_page&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;nh_po_line_item&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function(scope, element, attrs, ctrl){
	var $ul, $contextMenu;

	scope.focusOnTableHeader = function() {
		element.find(".data-table-title").attr("tabindex", "-1").focus();
	}

	element.on('contextmenu', function(e){
		if (e.ctrlKey)
			return; // ctrlKey is for the debug menu, not this menu

		var rowScope = angular.element(e.target).scope();
		var field, item, fieldVal;

		// Context Menu for tbody
		if (angular.isDefined(rowScope.field) &amp;&amp; angular.isDefined(rowScope.item)){
			e.preventDefault();
			field = rowScope.field;
			item = rowScope.item;
			fieldVal = item[field].value;

			var items = [
				['${Show Matching}', function(){
					ctrl.createQueryTerm(scope.data.table, field, item.sys_id, '=').then(function(term){
						ctrl.showMatching(field, term);
					});
				}],
				['${Filter Out}', function(){
					ctrl.createQueryTerm(scope.data.table, field, item.sys_id, '!=').then(function(term){
						ctrl.filterOut(field, term);
					});
				}]
			];

			renderContextMenu(items);
			setContextMenuPosition(e);
		}
	});

	function renderContextMenu(items){
		var scrollHeight = $('body').get(0).scrollHeight;
		$contextMenu = angular.element('&lt;div&gt;', {'class': 'dropdown clearfix context-dropdown open'});

		$contextMenu.on('click', function (e) {
			if ($(e.target).hasClass('dropdown')) {
				_clearContextMenus(event);
			}
		});
		$contextMenu.on('contextmenu', function (event) {
			event.preventDefault();
			_clearContextMenus(event);
		});

		$contextMenu.css({
			position: 'absolute',
			top: 0,
			height: scrollHeight,
			left: 0,
			right: 0,
			zIndex: 9999
		});

		$('body').append($contextMenu);

		$ul = angular.element('&lt;ul&gt;', {
			'class': 'dropdown-menu',
			'role': 'menu'
		});
		renderItems();
		$contextMenu.append($ul);

		function renderItems(){
			angular.forEach(items, function (item) {
				var $li = angular.element('&lt;li&gt;');

				if (item === null) {
					$li.addClass('divider');
				} else {
					var $a = angular.element('&lt;a&gt;');
					$a.attr({tabindex: '-1', href:'#'});
					$a.text(item[0]);
					$li.append($a);
					$li.on('click', function (e) {
						e.preventDefault();
						scope.$apply(function () {
							_clearContextMenus(e);
							item[1].call(item, item);
						});
					});
				}

				$ul.append($li);
			});
		}
	}

	function _clearContextMenus(event){
		if (!event){
			return;
		}

		angular.element(event.currentTarget).removeClass('context');

		var els = angular.element(".context-dropdown");
		angular.forEach(els, function(el){
			angular.element(el).remove();
		});
	}

	var contextMenuItemHeight = 0;
	function setContextMenuPosition(event){
		if (contextMenuItemHeight === 0)
			contextMenuItemHeight = $ul.children(0).height();

		// Why not just call .width() and .height() on the container? Because those calculations cause browsers to reflow
		// that can cause IE10 to take 200ms to render a context menu.
		var cmWidth = 150;
		var cmHeight = contextMenuItemHeight * $ul.children().length;
		var startX = event.pageX + cmWidth &gt;= window.innerWidth ? event.pageX - cmWidth : event.pageX;
		var startY = event.pageY + cmHeight &gt;= window.innerHeight ? event.pageY - cmHeight : event.pageY;

		$ul.css({
			display: 'block',
			position: 'absolute',
			left: startX,
			top: startY,
			'min-width': cmWidth
		});
	}
}]]&gt;&lt;/link&gt;&lt;name&gt;NH PO LINE ITEM&lt;/name&gt;&lt;option_schema&gt;[{"hint":"If enabled, show the list filter in the breadcrumbs of the data table","name":"enable_filter","default_value":"false","section":"Behavior","label":"Enable Filter","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_external,snc_internal&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	if (!input) // asynch load list
		return;

	data.msg = {};
	data.msg.sortingByAsc = gs.getMessage("Sorting by ascending");
	data.msg.sortingByDesc = gs.getMessage("Sorting by descending");
if(input &amp;&amp; input.resolveChecked){
	data.resovedItems = resolveItems(input.selectedItems, input.selectedPO);
}
	/*
	 * data.table = the table
	 * data.p = the current page starting at 1
	 * data.o = the order by column
	 * data.d = the order by direction
	 * data.keywords = the keyword search term
	 * data.list = the table data as an array
	 * data.invalid_table = true if table is invalid or if data was not succesfully fetched
	 * data.table_label = the table's display name. e.g. Incident
	 * data.table_plural = the table's plural display name. e.g. Incidents
	 * data.fields = a comma delimited list of field names to show in the data table
	 * data.column_labels = a map of field name -&gt; display name
	 * data.window_size = the number of rows to show
	 * data.filter = the encoded query
	 */
	// copy to data[name] from input[name] || option[name]
	optCopy(['table', 'p', 'o', 'd', 'filter', 'filterACLs', 'fields', 'keywords', 'view']);
	optCopy(['relationship_id', 'apply_to', 'apply_to_sys_id', 'window_size']);
	if (!data.table) {
		data.invalid_table = true;
		data.table_label = "";
		return;
	}

	if (!data.fields) {
		if (data.view)
			data.fields = $sp.getListColumns(data.table, data.view);
		else
			data.fields = $sp.getListColumns(data.table);
	}

	data.title = input.headerTitle;
	data.view =  data.view || 'mobile';
	data.table = data.table || $sp.getValue('table');
	data.filter = data.filter || $sp.getValue('filter');
	data.keywords = data.keywords || $sp.getValue('keywords');
	data.p = data.p || $sp.getValue('p') || 1;
	data.p = parseInt(data.p);
	data.o = data.o || $sp.getValue('o') || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('d') || $sp.getValue('order_direction');
	data.page_index = data.p - 1;
	data.show_new = data.show_new || options.show_new;
	var windowSize = data.window_size || $sp.getValue('maximum_entries') || 20;
	windowSize = parseInt(windowSize);
	if (isNaN(windowSize) || windowSize &lt; 1)
		windowSize = 20;
	data.window_size = windowSize;

	var grForMetaData = new GlideRecord(data.table);
	var gr;
	// FilteredGlideRecord is not supported in scoped apps, so GlideRecordSecure will always be used in an application scope
	if (typeof FilteredGlideRecord != "undefined" &amp;&amp; (gs.getProperty("glide.security.ui.filter") == "true" || grForMetaData.getAttribute("glide.security.ui.filter") != null)) {
		gr = new FilteredGlideRecord(data.table);
		gr.applyRowSecurity();
	} else
		gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}

	data.canCreate = gr.canCreate();
	data.newButtonUnsupported = data.table == "sys_attachment";
	data.table_label = gr.getLabel();
	data.table_plural = gr.getED().getPlural();
	data.hasTextIndex = $sp.hasTextIndex(data.table);
	if (data.filter) {
		if (data.filterACLs)
			gr = $sp.addQueryString(gr, data.filter);
		else
			gr.addEncodedQuery(data.filter);
	}
	if (data.keywords) {
		gr.addQuery('123TEXTQUERY321', data.keywords);
		data.keywords = null;
	}

	data.filter = gr.getEncodedQuery();

	if (data.relationship_id) {
		var rel = GlideRelationship.get(data.relationship_id);
		var target = new GlideRecord(data.table);
		var applyTo = new GlideRecord(data.apply_to);
		applyTo.get("sys_id", data.apply_to_sys_id);
		rel.queryWith(applyTo, target); // put the relationship query into target
		data.exportQuery = target.getEncodedQuery();
		gr.addEncodedQuery(data.exportQuery); // get the query the relationship made for us
	}
	if (data.exportQuery)
		data.exportQuery += '^' + data.filter;
	else
		data.exportQuery = data.filter;
	data.exportQueryEncoded = encodeURI(data.exportQuery);
	if (data.o){
		if (data.d == "asc")
			gr.orderBy(data.o);
		else
			gr.orderByDesc(data.o);
		if (gs.getProperty("glide.secondary.query.sysid") == "true")
			gr.orderBy("sys_id");
	}

	data.window_start = data.page_index * data.window_size;
	data.window_end = (data.page_index + 1) * data.window_size;
	gr.chooseWindow(data.window_start, data.window_end);
	gr._query();

	data.row_count = gr.getRowCount();
	data.num_pages = Math.ceil(data.row_count / data.window_size);
	data.column_labels = {};
	data.fields_array = data.fields.split(',');

	// use GlideRecord to get field labels vs. GlideRecordSecure
	for (var i in data.fields_array) {
		var field = data.fields_array[i];
		var ge = grForMetaData.getElement(field);
		if (ge == null)
			continue;

		data.column_labels[field] = ge.getLabel();
	}

	data.list = [];
	while (gr._next()) {
		var record = {};
		$sp.getRecordElements(record, gr, data.fields);
		if (typeof FilteredGlideRecord != "undefined" &amp;&amp; gr instanceof FilteredGlideRecord) {
			// FilteredGlideRecord doesn't do field-level
			// security, so take care of that here
			for (var f in data.fields_array) {
				var fld = data.fields_array[f];
				if (!gr.isValidField(fld))
					continue;

				if (!gr[fld].canRead()) {
					record[fld].value = null;
					record[fld].display_value = null;
				}
			}
		}
		record.sys_id = gr.getValue('sys_id');
		record.targetTable = gr.getRecordClassName();
		data.list.push(record);
	}

	data.enable_filter = (input.enable_filter == true || input.enable_filter == "true" ||
		options.enable_filter == true || options.enable_filter == "true");
	var breadcrumbWidgetParams = {
		table: data.table,
		query: data.filter,
		enable_filter: data.enable_filter
	};
	data.filterBreadcrumbs = $sp.getWidget('widget-filter-breadcrumbs', breadcrumbWidgetParams);

	// copy to data from input or options
	function optCopy(names) {
		names.forEach(function(name) {
			data[name] = input[name] || options[name];
		});
	}

})();
function resolveItems(ids, po){
    var grn =getPOitem(po);
	var returnArray = [];
	var items = new GlideRecord("x_478823_nhorizon_po_line_item");
	items.addQuery("sys_id", "IN", ids);
	items.query();
	while(items.next()){
		var itemObj ={};
		itemObj.id_ = "";
		itemObj.description_ = items.description.toString();
		itemObj.quantity_ = items.open_quantity.toString();
		itemObj.Maxquantity_ = items.open_quantity.toString();
		itemObj.unit_price_ = items.unit_price.toString();
		itemObj.amount_ = items.total_amount.toString();
		itemObj.po_line_item_=items.sys_id.toString();
		itemObj.grn_ = grn;
		returnArray.push(JSON.stringify(itemObj));
	}
	return returnArray;
}
function getPOitem(id){
	var poArray =[];
	var poItem = new GlideRecord("x_478823_nhorizon_grn_line_items");
	poItem.addQuery('po_details', id);
	poItem.addQuery('grn_header.open_grn', true);
	poItem.query();
	while(poItem.next()){
		var itemobj = {};
		itemobj.description  = poItem.item_description.toString()+"("+poItem.quantity.toString()+")";
		itemobj.sys_id = poItem.sys_id.toString();
  poArray.push(JSON.stringify(itemobj));
   }
	return poArray;
}]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-04 15:20:23&lt;/sys_created_on&gt;&lt;sys_id&gt;3ae9f69cdb48501011699fd2ca961959&lt;/sys_id&gt;&lt;sys_mod_count&gt;49&lt;/sys_mod_count&gt;&lt;sys_name&gt;NH PO LINE ITEM&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_3ae9f69cdb48501011699fd2ca961959&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-05 13:00:11&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[  &lt;div class="panel panel-{{options.color}} b"&gt;
    &lt;div class="panel-heading form-inline" ng-hide="options.hide_header"&gt;
      &lt;span class="dropdown m-r-xs"&gt;
        &lt;button aria-label="${{{data.title || data.table_plural}} Context Menu}" class="btn dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="optionsMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;&lt;/button&gt;
        &lt;ul class="dropdown-menu" aria-labelledby="optionsMenu"&gt;
          &lt;li ng-repeat="t in ::exportTypes"&gt;
            &lt;a ng-href="/{{data.table}}_list.do?{{::t.value}}&amp;sysparm_query={{data.exportQueryEncoded}}&amp;sysparm_view={{data.view}}&amp;sysparm_fields={{data.fields}}" target="_new" tabindex="-1"&gt;${Export as} {{::t.label}}&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/span&gt;
      &lt;span class="panel-title"&gt;&lt;i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"&gt;&lt;/i&gt;{{data.title || data.table_plural}}&lt;/span&gt;
      &lt;button name="new" role="button" class="btn btn-primary btn-sm m-l-xs" ng-click="newRecord()" ng-if="options.show_new &amp;&amp; data.canCreate &amp;&amp; !data.newButtonUnsupported" aria-label="${Create new record}"&gt;${New}&lt;/button&gt;
      &lt;div class="pull-right" ng-if="options.show_keywords"&gt;
		&lt;form ng-if="data.hasTextIndex" ng-submit="setSearch(true)"&gt;
        &lt;div class="input-group"&gt;
          &lt;input type="text" name="datatable-search" ng-model="data.keywords" ng-model-options="{debounce:250}" class="form-control" placeholder="${Keyword Search}" aria-label="${Keyword Search}"&gt;
          &lt;span class="input-group-btn"&gt;
            &lt;button name="search" class="btn btn-default" type="submit" aria-label="${Search}"&gt;&lt;span class="glyphicon glyphicon-search"&gt;&lt;/span&gt;&lt;/button&gt;
          &lt;/span&gt;
        &lt;/div&gt;
        &lt;/form&gt;
      &lt;/div&gt;
      &lt;div class="clearfix"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- body --&gt;
    &lt;div class="panel-body"&gt;
      &lt;h2 class="sr-only data-table-title"&gt;{{data.title || data.table_plural}} ${table} - ${page} {{data.p}}&lt;/h2&gt;
      &lt;div ng-if="options.show_breadcrumbs &amp;&amp; (data.filter || data.enable_filter)" class="filter-breadcrumbs"&gt;
	    		&lt;sp-widget widget="data.filterBreadcrumbs"&gt;&lt;/sp-widget&gt;
      &lt;/div&gt;
      &lt;div class="clearfix"&gt;&lt;/div&gt;
      &lt;div class="alert alert-info" ng-if="!data.list.length &amp;&amp; !data.num_pages &amp;&amp; !data.invalid_table &amp;&amp; !loadingData"&gt;
        ${No records in {{data.table_label}} &lt;span ng-if="data.filter"&gt;using that filter&lt;/span&gt;}
      &lt;/div&gt;
      &lt;div class="alert alert-info" ng-if="loadingData"&gt;
          &lt;fa name="spinner" spin="true"&gt;&lt;/fa&gt; ${Loading data}...
       &lt;/div&gt;
      &lt;table class="table table-striped table-responsive" ng-if="data.list.length"&gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th ng-repeat="field in data.fields_array track by $index" class="text-nowrap" ng-click="setOrderBy(field)"
             scope="col" role="columnheader" aria-sort="{{field == data.o ? (data.d == 'asc'? 'ascending': 'descending') : 'none'}}"&gt;
              &lt;div class="th-title" title="${Sort by} {{field == data.o ? (data.d == 'asc' ?  '${Descending}': '${Ascending}') : '${Ascending}'}}" role="button" tabindex="0" aria-label="{{data.column_labels[field]}}"&gt;{{data.column_labels[field]}}&lt;/div&gt;
              &lt;i class="fa" ng-if="field == data.o" ng-class="{'asc': 'fa-chevron-up', 'desc': 'fa-chevron-down'}[data.d]"&gt;&lt;/i&gt;
            &lt;/th&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
          &lt;tr ng-repeat="item in data.list track by item.sys_id"&gt;
             &lt;td&gt;&lt;input type="checkbox" class="form-check-input nhCustomCheckbox" id="{{item.sys_id}}"&gt;&lt;/td&gt;
            &lt;td role="cell" class="pointer sp-list-cell" ng-class="{selected: item.selected}"  ng-repeat="field in ::data.fields_array" data-field="{{::field}}" data-th="{{::data.column_labels[field]}}"&gt;&lt;span ng-if="$first" aria-label="${Open record}: {{::item[field].display_value}}" role="link" tabindex="0"&gt;{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length &gt; item[field].limit ? '...' : ''}}&lt;/span&gt;&lt;span ng-if="!$first"&gt;{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length &gt; item[field].limit ? '...' : ''}}&lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div ng-class="{'pruned-msg-filter-pad': (!options.show_breadcrumbs || !data.filter) &amp;&amp; !data.list.length}" class="pruned-msg" ng-if="rowsWerePruned()"&gt;
        &lt;span ng-if="rowsPruned == 1"&gt;${{{rowsPruned}} row removed by security constraints}&lt;/span&gt;
        &lt;span ng-if="rowsPruned &gt; 1"&gt;${{{rowsPruned}} rows removed by security constraints}&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- footer --&gt;
    &lt;div class="panel-footer" ng-hide="options.hide_footer" ng-if="data.row_count"&gt;
      &lt;div class="btn-toolbar m-r pull-left"&gt;
        &lt;div class="btn-group"&gt;
          &lt;a ng-disabled="data.p == 1" href="javascript:void(0)" ng-click="setPageNum(data.p - 1)" class="btn btn-default" aria-label="${Previous page} {{data.p == 1 ? '${disabled}' : ''}}" tabindex="{{(data.p == 1) ? -1 : 0}}"&gt;&lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div ng-if="data.num_pages &gt; 1 &amp;&amp; data.num_pages &lt; 20" class="btn-group"&gt;
          &lt;a ng-repeat="i in getNumber(data.num_pages) track by $index" ng-click="setPageNum($index + 1)" href="javascript:void(0)" ng-class="{active: ($index + 1) == data.p}" type="button" class="btn btn-default" aria-label="${Page} {{$index + 1}}"&gt;{{$index + 1}}&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class="btn-group"&gt;
          &lt;a ng-disabled="data.p == data.num_pages" href="javascript:void(0)" ng-click="setPageNum(data.p + 1)" class="btn btn-default" aria-label="${Next page} {{data.p == data.num_pages ? '${disabled}' : ''}}" tabindex="{{(data.p == data.num_pages) ? -1 : 0}}"&gt;&lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
         &lt;div class="btn-group"&gt;
           &lt;button type="button" class="btn btn-primary pull-right" ng-click="createInvoice()"&gt;Create Invoice Line Item&lt;/button&gt; 
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="m-t-xs panel-title"&gt;${Rows {{data.window_start + 1}} - {{ mathMin(data.window_end,data.row_count) }} of {{data.row_count}}}&lt;/div&gt;
        
      &lt;span class="clearfix"&gt;&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1751591875</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>86e619b7dbc2101011699fd2ca96191c</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172849143b70000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>NH PO LINE ITEM</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>fd6cad1cc6991010292d9fe325403878</update_guid>
<update_guid_history>fd6cad1cc6991010292d9fe325403878:1751591875,9cb78d0b7da01010c7e622e474584eba:-946661776,546c94cb64201010b47673520f4713ef:-1703516255,e3eb14cbb8201010ec120d418ba32d7b:718145767,57d91cc74d2010105279e2df5a3380f3:1976941817,55ae261e9f201010e3edc537c8fd75a5:22347724,851be65a5320101050dd17398cd9409c:-1795557894,3c65e6d1406050109c75a0a7621b8b1b:719249974,8b04ea5106605010badd72f77955e8a6:1668172144,711ade9986205010b89f47a6cfbd355e:1913640499,e7331e15242050102e73d86a489390a2:-443914781,18734ccea54c1010aa052b7228bec035:-1618763045,9630448e644c101019533105261f3f72:-1019139321,5bed7b7d754c1010af4552b8778f9830:-753125669,8a9dfb7d7f4c1010c23db80a1abcb1ac:1277551028,8aecf77d114c1010d15b1e266af009eb:-1972728176,6c0d1be1c4c01010df1a3ca6e1ef5737:1425506986,605c1fe13cc01010f6f0e0363e642112:498103818,ecfbd3e153c01010beaacb7ba627e1c5:-1488004182,f48bdfa170c01010471920e33241adbd:-328943510,b4df1d55d20cd0100f159cfd40cb7519:498103818,b9df011d91c8d0105e2cefdeb3d090f7:-388022805,317c74117fc8d0103534b0739a372223:-1166142478,63f94581d180d0109d1d7f07a3d3e10c:2106904301,683049c96440d01022f565be08e58f39:1957475296,223eb8896040d010357f218437338853:1218013435,8f1e7c899340d010204c31b0cb07f755:-1730403414,47acbc49f140d010210a8659f02339e1:-1394096616,be9cbc494f40d0107eab2b96fc1e153e:-5341804,0dcb30c57840d01092785e6b07dce4f2:2122881010,a7c978c59540d0109ea6a8186450478d:-414163837,36993009d240d01055ed61cadbe02fc1:885945031,a159f8c55440d0109abed1fd5b0524b8:667004028,4d19b8051540d01033aebbc2d09c3b84:799151,5dd878c53b40d01035d1471219a84d1e:25350991,dbec2801f940d010ff474728c5021998:1424685368,bf33dc012a00d010d3476b816a324a31:244704976,4bc294cd69cc901073cc7de92602a09d:1040373784,55a21041dd00d010076b71c8aa472368:696213227,ddd4bb7c678c901032cc4cfc86712665:1279965831,d744bb7ca08c90100275f8776f643d0d:913150898,29e37b7c898c9010d0cfeceb034092d7:472184507,f54e365042885010cb8576473b486c4e:-1352260244,c60eba50bc885010a41dde9c20ba9057:-1807328596,75ed32505e885010684e6b68f542c3f0:-632939999,d36d3650c98850103eec7dc3b525c944:-748327552,288cfa10ec885010f529705be8e41f0b:1683606886,31fb7210968850104a086c9ee9fcf782:1747297480,3d1afa9c584850103b83de22c6d0e96c:2096668231,3ee9f69c4a485010a5d70cc037b56d5b:-473690825</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_f3999df0dbc1901011699fd2ca9619b1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, $location, $window, spUtil, amb, $http, spAriaUtil, $timeout, spNavStateManager) {
    var c = this;
    /*
     * options:
     * hide_footer (bool) = true to remove the data table footer contents
     * hide_header (bool) = true to remove the data table header contents
     * show_new (bool) = true to show the "New" record button
     * show_keywords (bool) = true to show the keyword search field
     * table (string) = the table name to query
     * filter (string) = the encoded query
     * o (string) = the order by column
     * d (string) = The order by direction: asc or desc
     * p (int) = the page to jump to
     * fields (string) = comma seperated list of fields that become the list columns
     * view (string) = the default view to load for columns, overrides fields
     */
    $scope.exportTypes = [{
        label: 'PDF',
        value: 'PDF'
    }, {
        label: 'Excel',
        value: 'EXCEL'
    }, {
        label: 'CSV',
        value: 'CSV'
    }];
    var keys = ['table', 'filter', 'p', 'o', 'd'];

    var eventNames = {
        click: 'data_table.click',
        setFilter: 'data_table.setFilter',
        setKeywords: 'data_table.setKeywords'
    };

    $scope.go = function(table, item) {
        if ($window.getSelection().toString().length &gt; 0)
            return;

        spNavStateManager.onRecordChange(table).then(function() {
            var parms = {};
            if (table == "x_478823_nhorizon_response_task") {
                parms.table = "x_478823_nhorizon_request";
                parms.sys_id = item.request.value;
            } else {
                parms.table = table;
                parms.sys_id = item.sys_id;
            }
            parms.record = item;
            $scope.ignoreLocationChange = true;
            for (var x in c.data.list) {
                c.data.list[x].selected = false;
            }
            item.selected = true;
            $scope.$emit(eventNames.click, parms);
        }, function() {
            // do nothing in case of closing the modal by clicking on x
        });
    };

    $scope.newRecord = function() {
        var parms = {
            id: 'form',
            table: $scope.data.table,
            view: $scope.data.view,
            sys_id: '-1'
        };
        if ($scope.data.filter != '')
            parms.query = $scope.data.filter;

        $location.search(parms);
    };

    function recoverStateFromUrl() {
        $scope.data.fields = [];
        var s = $location.search();
        for (var x in keys) {
            if (s[keys[x]]) {
                $scope.data[keys[x]] = s[keys[x]];
            }
        }
        $scope.server.update().then(function(data) {
            if (s.sys_id) {
                for (var x in data.list) {
                    if (data.list[x].sys_id == s.sys_id) {
                        $scope.go(s.table, data.list[x]);
                    }
                }
            }
        });
    }

    if ($scope.options.fromUrl) {
        var origSearch = $location.search();
        $scope.$on('$locationChangeSuccess', function(e) {
            var s = $location.search();
            if (origSearch.id !== s.id)
                return;

            if ($scope.ignoreLocationChange) {
                $scope.ignoreLocationChange = false;
                return;
            }

            // Helps to recover state when using the browser's back button
            recoverStateFromUrl();
        });
    }


    $scope.getNumber = function(num) {
        return new Array(num);
    }

    $scope.mathMin = function(v1, v2) {
        return Math.min(v1, v2);
    }

    function getData(updateUrl) {
        var f = $scope.data;
        spUtil.update($scope).then(function(data) {
            f.view = data.view;
            if ($scope.options.fromUrl &amp;&amp; updateUrl)
                setPermalink(f.table, f.filter, f.o, f.d, f.p);

            if ($scope.options.show_breadcrumbs &amp;&amp; data.filterBreadcrumbs)
                $scope.$broadcast('widget-filter-breadcrumbs.setBreadcrumbs', data.filterBreadcrumbs.data, data.filter);

            initRecordWatcher(f.table, f.filter);
        });
    }

    function setPermalink(table, filter, orderBy, orderDirection, page) {
        $scope.ignoreLocationChange = true;
        var search = $location.search();
        angular.extend(search, {
            spa: 1,
            table: table,
            filter: filter,
            p: page,
            o: orderBy,
            d: orderDirection
        });
        $location.search(search);
    }

    var watcher;

    function initRecordWatcher(table, filter) {
        if (watcher)
            watcher.unsubscribe();

        if (table &amp;&amp; filter) {
            var watcherChannel = amb.getChannelRW(table, filter);
            amb.connect();
            watcher = watcherChannel.subscribe(function(message) {
                if (!message.data)
                    return;
                switch (message.data.action) {
                    case "change":
                        updateRowFromRW(message);
                        break;
                    case "exit":
                        // A record was removed
                    case "enter":
                        // A record was added
                    default:
                        spUtil.update($scope);
                        break;
                }
            });
        }
    }

    function updateRowFromRW(message) {
        if (message.data &amp;&amp; message.data.sys_id &amp;&amp; $scope.data.list) {
            var row, field;
            for (var i = 0; i &lt; $scope.data.list.length; i++) {
                row = $scope.data.list[i];
                if (row.sys_id == message.data.sys_id) {
                    var fields = Object.getOwnPropertyNames(message.data.record);
                    for (var f in fields) {
                        field = fields[f];
                        if (typeof row[field] !== 'undefined') {
                            row[field].display_value = message.data.record[field].display_value;
                        }
                    }
                }
            }
        }
    }

    $scope.$on('$destroy', function() {
        if (watcher)
            watcher.unsubscribe();
    });

    $scope.setPageNum = function(num) {
        $scope.data.p = num;
        getData(true);
        $timeout(function() {
            $scope.focusOnTableHeader();
        });
    }

    $scope.setOrderBy = function(field) {
        var d = "asc";
        if ($scope.data.o == field) {
            if ($scope.data.d == "asc")
                d = "desc";
            else
                d = "asc";
        }

        if (d === "asc") {
            spAriaUtil.sendLiveMessage($scope.data.msg.sortingByAsc);
        } else if (d === "desc") {
            spAriaUtil.sendLiveMessage($scope.data.msg.sortingByDesc);
        }

        $scope.data.o = field;
        $scope.data.d = d;
        $scope.setSearch(true);
    }

    $scope.setSearch = function(updateUrl) {
        $scope.data.p = 1;
        if ($scope.data.keywords) {
            var previousSearchTerm = $scope.previousSearchTerm;
            if (previousSearchTerm) {
                previousSearchTerm = '123TEXTQUERY321=' + previousSearchTerm;
                var previousSearchTermStartIndex = $scope.data.filter.indexOf(previousSearchTerm);
                var previousSearchTermEndIndex = previousSearchTermStartIndex + previousSearchTerm.length;
                if (previousSearchTermStartIndex &gt;= 0)
                    $scope.data.filter = $scope.data.filter.substr(0, previousSearchTermStartIndex) + $scope.data.filter.substr(previousSearchTermEndIndex + 1, $scope.data.filter.length);
            }
            $scope.previousSearchTerm = $scope.data.keywords;
        }
        getData(updateUrl);
    }

    $scope.$on(eventNames.setFilter, function(e, newFilter) {
        $scope.data.filter = newFilter;
        $scope.setSearch(false);
    });

    $scope.$on(eventNames.setKeywords, function(e, keywords) {
        $scope.data.keywords = keywords;
        $scope.setSearch(false);
    });

    $scope.$on('widget-filter-breadcrumbs.queryModified', function(e, newFilter) {
        $scope.data.filter = newFilter;
        $scope.setSearch(true);
    });

    $scope.rowsWerePruned = function() {
        if (!$scope.data.list)
            return;

        $scope.rowsPruned = $scope.mathMin($scope.data.window_end, $scope.data.row_count) - $scope.data.window_start - $scope.data.list.length;
        return $scope.rowsPruned &gt; 0;
    }

    $scope.showFilter = function() {
        return !$scope.data.list.length &amp;&amp; !$scope.data.num_pages &amp;&amp; !$scope.data.invalid_table &amp;&amp; !$scope.loadingData;
    }

    c.appendQuery = function(query) {
        if ($scope.data.filter.length &gt; 1)
            $scope.data.filter += '^';
        $scope.data.filter += query;
        $scope.setSearch();

    }

    // Makes Widget Async
    $scope.data = $scope.options;
    $scope.loadingData = true;
    $scope.server.update().then(function() {
        if ($scope.data.newButtonUnsupported)
            console.log("Service Portal: New button not supported for sys_attachment list");
        $scope.loadingData = false;
        initRecordWatcher($scope.data.table, $scope.data.filter);
    });

    function parseQuery(table, queryString) {
        return $http.post('/api/now/sp/parsequery/' + table, queryString).then(function(response) {
            return response.data.result;
        });
    }

    c.createQueryTerm = function(table, field, sys_id, operator) {
        return $http.get('/api/now/sp/getInOutQueryTerm', {
            params: {
                table: table,
                sys_id: sys_id,
                field: field,
                operator: operator
            }
        }).then(function(response) {
            if (response &amp;&amp; response.data &amp;&amp; response.data.result)
                return response.data.result.parts;
        });
    }

    c.isMultiPart = function(terms) {
        for (var i = 0; i &lt; terms.length; i++) {
            var term = terms[i];
            while (term.left)
                term = term.left;
            if (term.NQ)
                return true;
        }
        return false;
    }

    c.showMatching = function(field, newTerm) {
        var queryString = $scope.data.filter;
        var eq = "";
        parseQuery($scope.data.table, queryString).then(function(oldTerms) {
            var isMultiPart = c.isMultiPart(oldTerms);
            for (var i = 0; i &lt; oldTerms.length; i++) {
                var term = oldTerms[i];
                if (!isMultiPart &amp;&amp; isSameField(newTerm, term))
                    continue;

                if (eq.length)
                    eq += '^';

                // term may be separated into nested "left" and "right" bits,
                // follow the lefts to the bottom where "NQ" might be specified
                var termNQCheck = oldTerms[i];
                while (termNQCheck.left)
                    termNQCheck = termNQCheck.left;
                if (termNQCheck.NQ) {
                    // query is multipart so apply new term to each part
                    eq += getEncodedTerm(newTerm);
                    eq += "^NQ";
                }
                eq += getEncodedTerm(term);
            }
            if (eq.length)
                eq += '^';
            eq += getEncodedTerm(newTerm);

            $scope.data.filter = eq;
            $scope.setSearch();
        });
    };

    c.filterOut = function(field, newTerm) {
        var eq = "";
        if ($scope.data.filter.indexOf("^NQ") == -1) {
            // don't need server roundtrip to parse query,
            // can just append the new term
            eq = $scope.data.filter;
            if (eq.length)
                eq += '^';
            eq += getEncodedTerm(newTerm);
            $scope.data.filter = eq;
            $scope.setSearch();
            return;
        }

        // query may be multipart so must apply new term to each part
        var queryString = $scope.data.filter;
        parseQuery($scope.data.table, queryString).then(function(oldTerms) {
            for (var i = 0; i &lt; oldTerms.length; i++) {
                var term = oldTerms[i];
                if (eq.length)
                    eq += '^';

                // term may be separated into nested "left" and "right" bits,
                // follow the lefts to the bottom where "NQ" might be specified
                var termNQCheck = oldTerms[i];
                while (termNQCheck.left)
                    termNQCheck = termNQCheck.left;
                if (termNQCheck.NQ) {
                    // query is multipart so apply new term to end of each part
                    eq += getEncodedTerm(newTerm);
                    eq += "^NQ";
                }
                eq += getEncodedTerm(term);
            }
            if (eq.length)
                eq += '^';
            eq += getEncodedTerm(newTerm);

            $scope.data.filter = eq;
            $scope.setSearch();
        });
    };

    function isSameField(t1, t2) {
        if ('left' in t1 &amp;&amp; 'left' in t2)
            return t1.left.query_term_field === t2.left.query_term_field;
        else if ('left' in t1)
            return t1.left.query_term_field === t2.query_term_field;
        else if ('left' in t2)
            return t1.query_term_field === t2.left.query_term_field;
        return t1.query_term_field === t2.query_term_field;
    }

    function getEncodedTerm(term) {
        var eq;
        if (term.left) {
            eq = getEncodedTerm(term.left);
            eq += '^OR';
            eq += getEncodedTerm(term.right);
        } else {
            eq = term.query_term_field;
            eq += term.operator;
            eq += term.value;
        }
        return eq;
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.panel-heading {
  padding-left: 8px;
}

thead {
  border-bottom: 1px solid #ddd;
}

table {
  margin-bottom: 0;
}

.table &amp;gt; thead &amp;gt; tr &amp;gt; th {
  border: 1px solid #ddd;
  cursor: pointer;
  vertical-align: middle;

  &amp;amp;:nth-child(2) {
    border-left: none;
  }



  &amp;amp;:last-child {
    border-right: none;
  }
}

th i {
  display: inline-block;
  margin-left: 5px;
  color: #A0A0A0;
}

th .disabled{
  color:#ddd;
}

.th-title {
  display: inline-block;
  color: $primary;
}

.panel-body {
  overflow: auto;
  padding: 0px;
}


.selected {
  color: #fff;
  background-color: $data-table-selected;
  border-color: 1px solid #fff;
}

tbody tr:last-child {
  border-bottom: none;
}

.pruned-msg {
  padding-bottom: 10px;
  padding-left: 4px;
  text-align: center;
}

.pruned-msg-filter-pad {
  padding-top:8px;
}

.filter-breadcrumbs {
  border-bottom: 1px solid #ddd;
  padding-top: 3px;
}

.dropdown-toggle {
  background: none;
  padding: 0 0 4px 0;
}

.sp-list-cell {
  white-space: pre-wrap;
}

.dropdown {
  .glyphicon-menu-hamburger:focus {
 		outline: thin dotted;
		outline: 5px auto $input-border-focus;
		outline-offset: -2px; 
	}
}&lt;/css&gt;&lt;data_table&gt;sp_instance_table&lt;/data_table&gt;&lt;demo_data&gt;{"data":
	{
		"table": "incident",
		"view": "default",
		"o": "opened_at",
		"d": "desc",
		"filter": "activeEQtrue",
		"p": 1,
		"fields": "number,short_description"
	}
}&lt;/demo_data&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list&gt;table,filter,field_list,maximum_entries,order,order_by,order_direction,title,color,glyph,sp_page&lt;/field_list&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;global_data_table&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function(scope, element, attrs, ctrl){
	var $ul, $contextMenu;

	scope.focusOnTableHeader = function() {
		element.find(".data-table-title").attr("tabindex", "-1").focus();
	}

	element.on('contextmenu', function(e){
		if (e.ctrlKey)
			return; // ctrlKey is for the debug menu, not this menu

		var rowScope = angular.element(e.target).scope();
		var field, item, fieldVal;

		// Context Menu for tbody
		if (angular.isDefined(rowScope.field) &amp;&amp; angular.isDefined(rowScope.item)){
			e.preventDefault();
			field = rowScope.field;
			item = rowScope.item;
			fieldVal = item[field].value;

			var items = [
				['${Show Matching}', function(){
					ctrl.createQueryTerm(scope.data.table, field, item.sys_id, '=').then(function(term){
						ctrl.showMatching(field, term);
					});
				}],
				['${Filter Out}', function(){
					ctrl.createQueryTerm(scope.data.table, field, item.sys_id, '!=').then(function(term){
						ctrl.filterOut(field, term);
					});
				}]
			];

			renderContextMenu(items);
			setContextMenuPosition(e);
		}
	});

	function renderContextMenu(items){
		var scrollHeight = $('body').get(0).scrollHeight;
		$contextMenu = angular.element('&lt;div&gt;', {'class': 'dropdown clearfix context-dropdown open'});

		$contextMenu.on('click', function (e) {
			if ($(e.target).hasClass('dropdown')) {
				_clearContextMenus(event);
			}
		});
		$contextMenu.on('contextmenu', function (event) {
			event.preventDefault();
			_clearContextMenus(event);
		});

		$contextMenu.css({
			position: 'absolute',
			top: 0,
			height: scrollHeight,
			left: 0,
			right: 0,
			zIndex: 9999
		});

		$('body').append($contextMenu);

		$ul = angular.element('&lt;ul&gt;', {
			'class': 'dropdown-menu',
			'role': 'menu'
		});
		renderItems();
		$contextMenu.append($ul);

		function renderItems(){
			angular.forEach(items, function (item) {
				var $li = angular.element('&lt;li&gt;');

				if (item === null) {
					$li.addClass('divider');
				} else {
					var $a = angular.element('&lt;a&gt;');
					$a.attr({tabindex: '-1', href:'#'});
					$a.text(item[0]);
					$li.append($a);
					$li.on('click', function (e) {
						e.preventDefault();
						scope.$apply(function () {
							_clearContextMenus(e);
							item[1].call(item, item);
						});
					});
				}

				$ul.append($li);
			});
		}
	}

	function _clearContextMenus(event){
		if (!event){
			return;
		}

		angular.element(event.currentTarget).removeClass('context');

		var els = angular.element(".context-dropdown");
		angular.forEach(els, function(el){
			angular.element(el).remove();
		});
	}

	var contextMenuItemHeight = 0;
	function setContextMenuPosition(event){
		if (contextMenuItemHeight === 0)
			contextMenuItemHeight = $ul.children(0).height();

		// Why not just call .width() and .height() on the container? Because those calculations cause browsers to reflow
		// that can cause IE10 to take 200ms to render a context menu.
		var cmWidth = 150;
		var cmHeight = contextMenuItemHeight * $ul.children().length;
		var startX = event.pageX + cmWidth &gt;= window.innerWidth ? event.pageX - cmWidth : event.pageX;
		var startY = event.pageY + cmHeight &gt;= window.innerHeight ? event.pageY - cmHeight : event.pageY;

		$ul.css({
			display: 'block',
			position: 'absolute',
			left: startX,
			top: startY,
			'min-width': cmWidth
		});
	}
}]]&gt;&lt;/link&gt;&lt;name&gt;Global Data Table&lt;/name&gt;&lt;option_schema&gt;[{"hint":"If enabled, show the list filter in the breadcrumbs of the data table","name":"enable_filter","default_value":"false","section":"Behavior","label":"Enable Filter","type":"boolean"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
	if (!input) // asynch load list
		return;

	data.msg = {};
	data.msg.sortingByAsc = gs.getMessage("Sorting by ascending");
	data.msg.sortingByDesc = gs.getMessage("Sorting by descending");

	/*
	 * data.table = the table
	 * data.p = the current page starting at 1
	 * data.o = the order by column
	 * data.d = the order by direction
	 * data.keywords = the keyword search term
	 * data.list = the table data as an array
	 * data.invalid_table = true if table is invalid or if data was not succesfully fetched
	 * data.table_label = the table's display name. e.g. Incident
	 * data.table_plural = the table's plural display name. e.g. Incidents
	 * data.fields = a comma delimited list of field names to show in the data table
	 * data.column_labels = a map of field name -&gt; display name
	 * data.window_size = the number of rows to show
	 * data.filter = the encoded query
	 */
	// copy to data[name] from input[name] || option[name]
	optCopy(['table', 'p', 'o', 'd', 'filter', 'filterACLs', 'fields', 'keywords', 'view']);
	optCopy(['relationship_id', 'apply_to', 'apply_to_sys_id', 'window_size']);
	if (!data.table) {
		data.invalid_table = true;
		data.table_label = "";
		return;
	}

	if (!data.fields) {
		if (data.view)
			data.fields = $sp.getListColumns(data.table, data.view);
		else
			data.fields = $sp.getListColumns(data.table);
	}

	data.title = input.headerTitle;
	data.view = "vendor_user" || 'vendor_user';
	data.table = data.table || $sp.getValue('table');
	data.filter = data.filter || $sp.getValue('filter') ||"assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^stateIN151,201";
	data.keywords = data.keywords || $sp.getValue('keywords');
	data.p = data.p || $sp.getValue('p') || 1;
	data.p = parseInt(data.p);
	data.o = data.o || $sp.getValue('o') || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('d') || $sp.getValue('order_direction');
	data.page_index = data.p - 1;
	data.show_new = data.show_new || options.show_new;
	var windowSize = data.window_size || $sp.getValue('maximum_entries') || 20;
	windowSize = parseInt(windowSize);
	if (isNaN(windowSize) || windowSize &lt; 1)
		windowSize = 20;
	data.window_size = windowSize;

	var grForMetaData = new GlideRecord(data.table);
	var gr;
	// FilteredGlideRecord is not supported in scoped apps, so GlideRecordSecure will always be used in an application scope
	if (typeof FilteredGlideRecord != "undefined" &amp;&amp; (gs.getProperty("glide.security.ui.filter") == "true" || grForMetaData.getAttribute("glide.security.ui.filter") != null)) {
		gr = new FilteredGlideRecord(data.table);
		gr.applyRowSecurity();
	} else
		gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}

	data.canCreate = gr.canCreate();
	data.newButtonUnsupported = data.table == "sys_attachment";
	data.table_label = gr.getLabel();
	data.table_plural = gr.getED().getPlural();
	data.hasTextIndex = $sp.hasTextIndex(data.table);
	if (data.filter) {
		if (data.filterACLs)
			gr = $sp.addQueryString(gr, data.filter);
		else
			gr.addEncodedQuery(data.filter);
	}
	if (data.keywords) {
		gr.addQuery('123TEXTQUERY321', data.keywords);
		data.keywords = null;
	}

	data.filter = gr.getEncodedQuery();

	if (data.relationship_id) {
		var rel = GlideRelationship.get(data.relationship_id);
		var target = new GlideRecord(data.table);
		var applyTo = new GlideRecord(data.apply_to);
		applyTo.get("sys_id", data.apply_to_sys_id);
		rel.queryWith(applyTo, target); // put the relationship query into target
		data.exportQuery = target.getEncodedQuery();
		gr.addEncodedQuery(data.exportQuery); // get the query the relationship made for us
	}
	if (data.exportQuery)
		data.exportQuery += '^' + data.filter;
	else
		data.exportQuery = data.filter;
	data.exportQueryEncoded = encodeURI(data.exportQuery);
	if (data.o){
		if (data.d == "asc")
			gr.orderBy(data.o);
		else
			gr.orderByDesc(data.o);
		if (gs.getProperty("glide.secondary.query.sysid") == "true")
			gr.orderBy("sys_id");
	}

	data.window_start = data.page_index * data.window_size;
	data.window_end = (data.page_index + 1) * data.window_size;
	gr.chooseWindow(data.window_start, data.window_end);
	gr._query();

	data.row_count = gr.getRowCount();
	data.num_pages = Math.ceil(data.row_count / data.window_size);
	data.column_labels = {};
	data.fields_array = data.fields.split(',');

	// use GlideRecord to get field labels vs. GlideRecordSecure
	for (var i in data.fields_array) {
		var field = data.fields_array[i];
		var ge = grForMetaData.getElement(field);
		if (ge == null)
			continue;

		data.column_labels[field] = ge.getLabel();
	}

	data.list = [];
	while (gr._next()) {
		var record = {};
		$sp.getRecordElements(record, gr, data.fields);
		if (typeof FilteredGlideRecord != "undefined" &amp;&amp; gr instanceof FilteredGlideRecord) {
			// FilteredGlideRecord doesn't do field-level
			// security, so take care of that here
			for (var f in data.fields_array) {
				var fld = data.fields_array[f];
				if (!gr.isValidField(fld))
					continue;

				if (!gr[fld].canRead()) {
					record[fld].value = null;
					record[fld].display_value = null;
				}
			}
		}
		record.sys_id = gr.getValue('sys_id');
		record.targetTable = gr.getRecordClassName();
		data.list.push(record);
	}

	data.enable_filter = (input.enable_filter == true || input.enable_filter == "true" ||
		options.enable_filter == true || options.enable_filter == "true");
	var breadcrumbWidgetParams = {
		table: data.table,
		query: data.filter,
		enable_filter: data.enable_filter
	};
	data.filterBreadcrumbs = $sp.getWidget('widget-filter-breadcrumbs', breadcrumbWidgetParams);

	// copy to data from input or options
	function optCopy(names) {
		names.forEach(function(name) {
			data[name] = input[name] || options[name];
		})
	}

})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-05-25 14:39:24&lt;/sys_created_on&gt;&lt;sys_id&gt;f3999df0dbc1901011699fd2ca9619b1&lt;/sys_id&gt;&lt;sys_mod_count&gt;7&lt;/sys_mod_count&gt;&lt;sys_name&gt;Global Data Table&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_f3999df0dbc1901011699fd2ca9619b1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-14 07:36:53&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[  &lt;div class="panel panel-{{options.color}} b"&gt;
    &lt;div class="panel-heading form-inline" ng-hide="options.hide_header"&gt;
      &lt;span class="dropdown m-r-xs"&gt;
        &lt;button aria-label="${{{data.title || data.table_plural}} Context Menu}" class="btn dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="optionsMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;&lt;/button&gt;
        &lt;ul class="dropdown-menu" aria-labelledby="optionsMenu"&gt;
          &lt;li ng-repeat="t in ::exportTypes"&gt;
            &lt;a ng-href="/{{data.table}}_list.do?{{::t.value}}&amp;sysparm_query={{data.exportQueryEncoded}}&amp;sysparm_view={{data.view}}&amp;sysparm_fields={{data.fields}}" target="_new" tabindex="-1"&gt;${Export as} {{::t.label}}&lt;/a&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/span&gt;
      &lt;span class="panel-title"&gt;&lt;i ng-if="options.glyph" class="fa fa-{{options.glyph}} m-r"&gt;&lt;/i&gt;{{data.title || data.table_plural}}&lt;/span&gt;
     
      &lt;div class="pull-right" ng-if="options.show_keywords"&gt;
		&lt;form ng-if="data.hasTextIndex" ng-submit="setSearch(true)"&gt;
        &lt;div class="input-group"&gt;
          &lt;input type="text" name="datatable-search" ng-model="data.keywords" ng-model-options="{debounce:250}" class="form-control" placeholder="${Keyword Search}" aria-label="${Keyword Search}"&gt;
          &lt;span class="input-group-btn"&gt;
            &lt;button name="search" class="btn btn-default" type="submit" aria-label="${Search}"&gt;&lt;span class="glyphicon glyphicon-search"&gt;&lt;/span&gt;&lt;/button&gt;
          &lt;/span&gt;
        &lt;/div&gt;
        &lt;/form&gt;
      &lt;/div&gt;
      &lt;div class="clearfix"&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- body --&gt;
    &lt;div class="panel-body"&gt;
      &lt;h2 class="sr-only data-table-title"&gt;{{data.title || data.table_plural}} ${table} - ${page} {{data.p}}&lt;/h2&gt;
      &lt;div ng-if="options.show_breadcrumbs &amp;&amp; (data.filter || data.enable_filter)" class="filter-breadcrumbs"&gt;
	    		&lt;sp-widget widget="data.filterBreadcrumbs"&gt;&lt;/sp-widget&gt;
      &lt;/div&gt;
      &lt;div class="clearfix"&gt;&lt;/div&gt;
      &lt;div class="alert alert-info" ng-if="!data.list.length &amp;&amp; !data.num_pages &amp;&amp; !data.invalid_table &amp;&amp; !loadingData"&gt;
        ${No records in {{data.table_label}} &lt;span ng-if="data.filter"&gt;using that filter&lt;/span&gt;}
      &lt;/div&gt;
      &lt;div class="alert alert-info" ng-if="loadingData"&gt;
          &lt;fa name="spinner" spin="true"&gt;&lt;/fa&gt; ${Loading data}...
       &lt;/div&gt;
      &lt;table class="table table-striped table-responsive" ng-if="data.list.length"&gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;th ng-repeat="field in data.fields_array track by $index" class="text-nowrap" ng-click="setOrderBy(field)"
             scope="col" role="columnheader" aria-sort="{{field == data.o ? (data.d == 'asc'? 'ascending': 'descending') : 'none'}}"&gt;
              &lt;div class="th-title" title="${Sort by} {{field == data.o ? (data.d == 'asc' ?  '${Descending}': '${Ascending}') : '${Ascending}'}}" role="button" tabindex="0" aria-label="{{data.column_labels[field]}}"&gt;{{data.column_labels[field]}}&lt;/div&gt;
              &lt;i class="fa" ng-if="field == data.o" ng-class="{'asc': 'fa-chevron-up', 'desc': 'fa-chevron-down'}[data.d]"&gt;&lt;/i&gt;
            &lt;/th&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
          &lt;tr ng-repeat="item in data.list track by item.sys_id"&gt;
            &lt;td role="cell" class="pointer sp-list-cell" ng-class="{selected: item.selected}" ng-click="go(item.targetTable, item)" ng-repeat="field in ::data.fields_array" data-field="{{::field}}" data-th="{{::data.column_labels[field]}}"&gt;&lt;span ng-if="$first" aria-label="${Open record}: {{::item[field].display_value}}" role="link" tabindex="0"&gt;{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length &gt; item[field].limit ? '...' : ''}}&lt;/span&gt;&lt;span ng-if="!$first"&gt;{{::item[field].display_value | limitTo : item[field].limit}}{{::item[field].display_value.length &gt; item[field].limit ? '...' : ''}}&lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
        &lt;/tbody&gt;
      &lt;/table&gt;
      &lt;div ng-class="{'pruned-msg-filter-pad': (!options.show_breadcrumbs || !data.filter) &amp;&amp; !data.list.length}" class="pruned-msg" ng-if="rowsWerePruned()"&gt;
        &lt;span ng-if="rowsPruned == 1"&gt;${{{rowsPruned}} row removed by security constraints}&lt;/span&gt;
        &lt;span ng-if="rowsPruned &gt; 1"&gt;${{{rowsPruned}} rows removed by security constraints}&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;!-- footer --&gt;
    &lt;div class="panel-footer" ng-hide="options.hide_footer" ng-if="data.row_count"&gt;
      &lt;div class="btn-toolbar m-r pull-left"&gt;
        &lt;div class="btn-group"&gt;
          &lt;a ng-disabled="data.p == 1" href="javascript:void(0)" ng-click="setPageNum(data.p - 1)" class="btn btn-default" aria-label="${Previous page} {{data.p == 1 ? '${disabled}' : ''}}" tabindex="{{(data.p == 1) ? -1 : 0}}"&gt;&lt;i class="fa fa-chevron-left"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
        &lt;div ng-if="data.num_pages &gt; 1 &amp;&amp; data.num_pages &lt; 20" class="btn-group"&gt;
          &lt;a ng-repeat="i in getNumber(data.num_pages) track by $index" ng-click="setPageNum($index + 1)" href="javascript:void(0)" ng-class="{active: ($index + 1) == data.p}" type="button" class="btn btn-default" aria-label="${Page} {{$index + 1}}"&gt;{{$index + 1}}&lt;/a&gt;
        &lt;/div&gt;
        &lt;div class="btn-group"&gt;
          &lt;a ng-disabled="data.p == data.num_pages" href="javascript:void(0)" ng-click="setPageNum(data.p + 1)" class="btn btn-default" aria-label="${Next page} {{data.p == data.num_pages ? '${disabled}' : ''}}" tabindex="{{(data.p == data.num_pages) ? -1 : 0}}"&gt;&lt;i class="fa fa-chevron-right"&gt;&lt;/i&gt;&lt;/a&gt;
        &lt;/div&gt;
      &lt;/div&gt;
      &lt;div class="m-t-xs panel-title"&gt;${Rows {{data.window_start + 1}} - {{ mathMin(data.window_end,data.row_count) }} of {{data.row_count}}}&lt;/div&gt;

      &lt;span class="clearfix"&gt;&lt;/span&gt;
    &lt;/div&gt;
  &lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>134431597</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>86e619b7dbc2101011699fd2ca96191f</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172b1c2821e0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Global Data Table</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>7db8fecb3b95501076f3627fa467fee6</update_guid>
<update_guid_history>7db8fecb3b95501076f3627fa467fee6:134431597,7573fb3a31dd101015ea56c0952c736f:-1078690368,bc22fbb6b0dd10102e736e20abe597a2:1657210868,c640e12c8dd15010c96862e525e7c649:-1302552664,2810ede806d15010bdc64b374d834435:1829923695,a2badd74e5c19010526e077e8fabccaf:1109279827,2e7a1d749dc1901078bc512ed1e0362d:-1864437739,00a99df07bc19010e9439b3a7dd0bab3:1112220613</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_19a62424dbd4901011699fd2ca961971</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {
    var c = this;
    var gcList = c.data.gcList.sort();
    var ccList = c.data.ccList.sort();
    var isVendor = c.data.isVendor;
    var canWrite = c.data.canWrite;
	var isCodingDone=c.data.isCodingDone;
	console.log("can write-"+canWrite);
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.po_details');
    }, function(value) {
        if ((value == "")) {
            c.data.showInput = true;
        } else {
            c.data.showInput = false;
        }
    });

    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.subtotal');
    }, function(value) {
        calculateTotal();
    });

    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.cgst');
    }, function(value) {
        $scope.page.g_form.setValue("invoice_header.sgst", $scope.page.g_form.getValue('invoice_header.cgst'));
        calculateTotal();

    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.sgst');
    }, function(value) {
        if ($scope.page.g_form.getValue("invoice_header.cgst") == "") {
            $scope.page.g_form.setValue("invoice_header.cgst", $scope.page.g_form.getValue('invoice_header.sgst'));
        }
        calculateTotal();

    });
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('invoice_header.igst');
    }, function(value) {
        calculateTotal();
    });

    var g_form = $scope.page.g_form;
    var counter = 0;
    var varstring = g_form.getValue("npo_input").toString();
    if (varstring != "") {
        counter = 1;
        var obj = JSON.parse("["+varstring+"]");
        /*for(var z = 0;z&lt;document.getElementById("myTable1").length; z++){
		console.log("table length"+document.getElementById("myTable1").length);
            document.getElementById("myTable1").deleteRow(z);
        }
	*/
        var gcSelect0 = document.getElementById("ngl_code_0");
        for (var t = 0; t &lt; gcList.length; t++) {
            var gcOption0 = document.createElement('option');
            gcOption0.text = gcList[t];
            gcOption0.value = gcList[t];
            gcSelect0.add(gcOption0);
        }
        var ccSelect0 = document.getElementById("ncost_center_0");
        for (var s = 0; s &lt; ccList.length; s++) {
            var ccOption0 = document.createElement('option');
            ccOption0.text = ccList[s];
            ccOption0.value = ccList[s];
            ccSelect0.add(ccOption0);
        }
        console.log(obj.length);
        for (var i = 1; i &lt; obj.length; i++) {
            addRows();
        }
        for (var j = 0; j &lt; obj.length; j++) {
            console.log("NPO Object-" + JSON.stringify(obj[j]));
            var decodeJson = obj[j];
            document.getElementById("ndescription_" + j).value = decodeJson.description;
            document.getElementById("nquantity_" + j).value = decodeJson.quantity;
            document.getElementById("namount_" + j).value = decodeJson.amount;
            document.getElementById("nunit_price_" + j).value = decodeJson.unit_price;

            //GL Code
            var gcSelect = document.getElementById("ngl_code_" + j);
            var gcIndex = gcList.indexOf(decodeJson.gl_code);
            gcSelect.value = decodeJson.gl_code;
            gcSelect.selectedIndex = gcIndex + 1;

            //Cost Center
            var ccSelect = document.getElementById("ncost_center_" + j);
            var ccIndex = ccList.indexOf(decodeJson.cost_center);
            ccSelect.value = decodeJson.cost_center;
            ccSelect.selectedIndex = ccIndex + 1;
        }
        if (!canWrite) {
            makeReadonly1();
        }
		if(isCodingDone=='true' &amp;&amp; canWrite){
			var elm = document.getElementsByClassName("dynamicTable1");
			console.log("ELM length-"+elm.length);
            for (var k = 0; k &lt; elm.length; k++) {
                if(elm[k].id.indexOf("ngl_code_") &gt;= 0 || elm[k].id.indexOf("ncost_center_") &gt;= 0) {
                    elm[k].disabled = true;
                }
            }
		}
        if (isVendor) {
            document.getElementById("gl_code_lbl").style.display = "none";
            document.getElementById("gl_cost_center_lbl").style.display = "none";
        }
	
        function makeReadonly1() {
            var el = document.getElementsByClassName("dynamicTable1");
            for (var i = 0; i &lt; el.length; i++) {
                if ((isVendor == true) &amp;&amp; (el[i].id.indexOf("ngl_code_") &gt;= 0 || el[i].id.indexOf("ncost_center_") &gt;= 0)) {
                    el[i].style.display = "none";
                }
                el[i].disabled = true;
            }
        }

        function addRows() {

            console.log(counter);
            var newRow = $("&lt;tr&gt;");
            var cols = "";

            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-4 dynamicTable1" onchange="saveData1()" id="ndescription_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-4 dynamicTable1" onchange="saveData1()" id="nquantity_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-2 dynamicTable1" onchange="saveData1()" id="nunit_price_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-2 dynamicTable1" onchange="saveData1()" id="namount_' + counter + '"/&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select value="" class="form-control col-sm-4 dynamicTable1" onchange="saveData1()" id="ngl_code_' + counter + '"&gt;';
            cols += '&lt;option value=""&gt;--Select Value--&lt;/option&gt;';
            for (var g = 0; g &lt; gcList.length; g++) {
                cols += '&lt;option value=' + gcList[g] + '&gt;' + gcList[g] + '&lt;/option&gt;';
            }
            cols += '&lt;/select&gt;&lt;/td&gt;';
            cols += '&lt;td&gt;&lt;select value="" class="form-control col-sm-2 dynamicTable1" onchange="saveData1()" id="ncost_center_' + counter + '"&gt;';
            cols += '&lt;option value=""&gt;--Select Value--&lt;/option&gt;';
            for (var c = 0; c &lt; ccList.length; c++) {
                cols += '&lt;option value=' + ccList[c] + '&gt;' + ccList[c] + '&lt;/option&gt;';
            }
            cols += '&lt;/select&gt;&lt;/td&gt;';
            //cols += '&lt;td&gt;&lt;span class="glyphicon glyphicon-trash ibtnDel dynamicTable1" value="delete" style="color:red; font-size: 24px"&gt;&lt;/span&gt;&lt;/td&gt;';
            newRow.append(cols);
            $("table.order-list1").append(newRow);
            counter++;



            $("table.order-list1").on("click", ".ibtnDel", function(event) {
                setTimeout(function() {
                    $scope.saveData1();
                }, 500);
                $(this).closest("tr").remove();
                counter -= 1
            });
        }
        $scope.saveData1 = function() {
            var table = document.getElementById("myTable1");
            var g_form = $scope.page.g_form;
            var npi = JSON.parse("[" + g_form.getValue("npo_input") + "]");
            var tableLength = table.rows.length - 1;
            var tableDataArray = [];
            var rowData = {};
            for (var i = 0; i &lt; tableLength; i++) {
                console.log(i);
                rowData.description = document.getElementById("ndescription_" + i).value.toString();
                rowData.quantity = document.getElementById("nquantity_" + i).value.toString();
                rowData.unit_price = document.getElementById("nunit_price_" + i).value.toString();
                rowData.amount = document.getElementById("namount_" + i).value.toString();
                rowData.gl_code = document.getElementById("ngl_code_" + i).value.toString();
                rowData.cost_center = document.getElementById("ncost_center_" + i).value.toString();
                rowData.inlID = npi[i].inlID;
                tableDataArray.push(JSON.stringify(rowData));
            }
            console.log("Table Data is " + tableDataArray);
            g_form.clearValue("npo_input");
            g_form.setValue("npo_input", tableDataArray.toString());

            var subtotal = 0;
            for (var i = 0; i &lt; tableLength; i++) {
                if (document.getElementById("namount_" + i).value != "")
                    subtotal = subtotal + parseFloat(document.getElementById("namount_" + i).value);
            }
            g_form.setValue("subtotal", subtotal);
        }
    }

    function calculateTotal() {
        var g_form = $scope.page.g_form;
        if (g_form.getValue("invoice_header.po_details") == "") {
            g_form.clearValue("invoice_header.total");
            var total = 0;
            var igst = g_form.getDecimalValue("invoice_header.igst");
            var cgst = g_form.getDecimalValue("invoice_header.cgst");
            var sgst = g_form.getDecimalValue("invoice_header.sgst");
            var subTotal = g_form.getDecimalValue("invoice_header.subtotal")
            total = igst + cgst + sgst + subTotal;

            g_form.setValue("invoice_header.total", total);
        }
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;non_po_input_form&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Non PO input - FORM&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
    data.showInput = false;
	data.isVendor=gs.hasRole("x_478823_nhorizon.vendor_user");
    var rGR = new GlideRecord("x_478823_nhorizon_request");
    rGR.get($sp.getParameter("sys_id"));
	data.canWrite=rGR.canWrite();
	if(rGR.state=='101'){
		data.canWrite=false;
	}
	data.isCodingDone=rGR.is_coding_completed+'';
    var companyCode = rGR.invoice_header.company_code;

    var gcArr = [];
    var gcGR = new GlideRecord('x_478823_nhorizon_gl_account');
    gcGR.addQuery("active", true);
    //gcGR.addQuery("company_code",companyCode);
    gcGR.query();
    while (gcGR.next()) {
        gcArr.push(gcGR.gl_account + '');
    }
    data.gcList = gcArr;
    gs.log("GC List-" + data.gcList);
    var ccArr = [];
    var ccGR = new GlideRecord('x_478823_nhorizon_cost_center');
    ccGR.addQuery("active", true);
    //ccGR.addQuery("company_code",companyCode);
    ccGR.query();
    while (ccGR.next()) {
        ccArr.push(ccGR.cost_center_code + '');
    }
    data.ccList = ccArr;
    gs.log("CC List-" + data.ccList);
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-17 09:31:07&lt;/sys_created_on&gt;&lt;sys_id&gt;19a62424dbd4901011699fd2ca961971&lt;/sys_id&gt;&lt;sys_mod_count&gt;94&lt;/sys_mod_count&gt;&lt;sys_name&gt;Non PO input - FORM&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_19a62424dbd4901011699fd2ca961971&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-27 06:55:30&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="container col-sm-12"&gt;
  &lt;div &gt;
    &lt;table id="myTable1" class=" table order-list1" ng-show="c.data.showInput"&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;td&gt;Description&lt;/td&gt;
            &lt;td&gt;Quantity&lt;/td&gt;
          	&lt;td&gt;Unit Price&lt;/td&gt;
            &lt;td&gt;Amount&lt;/td&gt;
          	&lt;td id="gl_code_lbl"&gt;GL Code&lt;/td&gt;
          	&lt;td id="gl_cost_center_lbl"&gt;Cost Center&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="ndescription_0"  value="" class="form-control dynamicTable1"  onchange="saveData1()"/&gt;
            &lt;/td&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="nquantity_0"  value="" class="form-control dynamicTable1" onchange="saveData1()"/&gt;
            &lt;/td&gt;
           &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="nunit_price_0"  value="" class="form-control dynamicTable1" onchange="saveData1()"/&gt;
            &lt;/td&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="namount_0" value="" class="form-control dynamicTable1" onchange="saveData1()"/&gt;
            &lt;/td&gt;
          	&lt;td class="col-sm-2"&gt;
                &lt;select id="ngl_code_0"  value="" class="form-control dynamicTable1" onchange="saveData1()"&gt;
              		&lt;option value=""&gt;--Select Value--&lt;/option&gt;
     			&lt;/select&gt;
            &lt;/td&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;select id="ncost_center_0"  value="" class="form-control dynamicTable1" onchange="saveData1()"&gt;
                	&lt;option value=""&gt;--Select Value--&lt;/option&gt;
                &lt;/select&gt;
             &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
    &lt;tfoot&gt;
       &lt;!-- &lt;tr&gt;
            &lt;td colspan="5" style="text-align: left;"&gt;
                &lt;input type="button" class="btn btn-lg btn-block dynamicTable1 " id="addrow" value="Add Row" /&gt;
            &lt;/td&gt;
        &lt;/tr&gt;--&gt;

    &lt;/tfoot&gt;
&lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
  function saveData1(){
    console.log("Saving Data");
  angular.element(document.getElementById("myTable1")).scope().saveData1();
  }
&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-945864670</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>8ae619b7dbc2101011699fd2ca96191b</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172f48f49540000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Non PO input - FORM</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>02ebe55b742110101498ed7db154836a</update_guid>
<update_guid_history>02ebe55b742110101498ed7db154836a:-945864670,f28fbd63091990102caa01f849360c28:-1682019694,ab9479eb7fd590106576934bf8f6dd8b:433401474,df24b12f88d5901070a22dd6d6d94593:-82193996,c5e3b16fd2d59010d1e03988c683f822:161959912,4603b12f4fd59010abe55f36b9b2684a:1973817442,c432fdab62d59010323aa750bde74e8f:2058970262,9b3175abfcd5901050dd8796b6a069c6:-949263367,518071ebefd59010081d4300a93ec972:37438877,ec50f5ab5dd59010056b1ca3df30cee8:-949263367,cc207dabfcd59010adb1aef757580106:1980075076,7b8f652b62d5901074921e5a7989a941:-1818926320,582d252b92d590102d2166e27994bf25:-1014952006,aacc252b3bd59010aab6c30e1aa94a20:105213030,96eb69e73fd5901075d7268f0c72d957:-480960851,220cc56f09559010a3648ba7ca0d40ce:-1074543367,4237456b3e55901058b8e1b7084557f2:-1389123876,c2c6c5ab385590104ce66bf6906e5606:1440718461,21564d2bf8559010877fe9bfae832ba3:-2120976409,7e2541a79c5590108af1f441453fdc00:-1435609827,e3897463ee5590100b41838527d75bb7:-1640226736,6108f4ef50159010ab9ad021d81e2438:-2042025458,ecde389fe2d95010971a9308aad87b52:-1587838769,63c970dbdcd950100eb5d99b82816efb:-1291011399,4f9aac5352d95010b35cf8943fed6f7c:-1074543367,a97aac5368d950108fabdd2d34a64edf:-102526211,fed9e41356d950104132c67c0b654374:-1074543367,7e3310d3ac995010ed3c597c4db28f5f:-295467019,464258d327995010515ad203d6d4f6a2:1640814281,6ff41e90d81d1010759fb89272f8734d:-1716171325,01449a50ca1d10108787d31ec0cab1e5:1631968692,66cd29c0865110104f9a576969cc58c2:211334682,ec8d6508ad511010249e828ec50ddeca:-411054799,7a9c11cfb001101047c586a42ae0216d:561150807,5399918fa8011010c11a085fba7e081f:-343491303,aee8914f7c011010e5178917ff55d8a1:459371892,62e6910fe3011010162103f50de25153:2117289359,ab02e64ebf81101082cebf3340573e6b:1102869651,f9c2cd35ff451010621162cc464728f7:620932805,ba4e8a7416459010584b379015d11777:-38921069,5dbd42b4c945901051bba88c0159a7af:1769424249,b8ec4a74c0459010b427784fd1355c7b:1991659142,5bca8234704590103cd16f977e395a22:-1451039441,855a8ef07d459010d25fffb5a1da7a16:-1911340681,6be90ef06f4590101b904507b38857f4:-1348156391,fa69ca708d459010dcdcf60b84fb9702:1371011031,c85686787205901063dd812a5a834bbb:-1853750056,b1a3423c10059010ddfb9233df5d1b7f:-1433949935,aa63cafc44059010ac8075a00063fdf4:53407335,07610abcf205901030a6f3af328db7c5:797317924,aa55d9307dc190105af9b051b9383918:1378605406,f08015fce1819010a75023a3b1eb7f3c:2139121623,497069c571241010e8f6f6a946c3dfb0:-2005585754,4160610987241010292fb749353f453d:-682138230,aaff1dc5872410103d9af108d4a2f3d3:-1635069689,4abf5d8576241010cbced27c15b54328:-131075181,69d1554df7e010102308bc9d3b482073:66886190,b7801dc98de0101066c2eb9808d5089b:-906879302,d9f7408d0b2010100b970c1452903a6f:-498951143,f73b270e0c189410e917c67aebfc42ec:-37219509,3ada6bcadf18941092bc0d7d0b0cbd8c:1110119217,9988eb8a6d189410c51a16e0337ffd56:1845210399,0218a78af4189410a67e60844be8880d:1676192959,f427e74a98189410d05342f70011c122:-1607743564,89a62b4ad818941095d7668eb864d819:-525762249,0266674a3018941000f0a2308c893715:-1950255276,c1716b0659189410179478b87d6ef8f3:-1949331461,27d9ad6c9a5890109f7a9e4cb3f7f007:-1136538713,43b9e96ca35890108e613cfc1e3ca1b4:-1065323128,19a9e96c7858901090411b1fe72e714c:-1863117156,d069e56c5b589010cb62ba8b44d8a0f8:1694043745,b648ade89a58901066bd32c0d745ee78:-1195294905,5738ade8715890107875fc5b54fa9194:2136160430,4e08ade80d589010cbbbd6ccd2842f9d:-1789377032,15d7652c535890108c53a200597d2a75:1860539735,ba7769e8f058901003a4559c9c56f6c0:-1520275987,8927612c9d58901054cc413f85c19466:398020755,1f76eda82a589010dd23df4228070051:726574461,6406a1e8da58901096f8b06705b476ff:62443210,7cb5a1e872589010896408ebbe3a59c6:-1580692213,335529a80d58901099fcab94e6475d09:-245664660,8125e9a8c558901021e34cd18f5ec3af:522322324,c5e4e5a84a5890104e833edef609f223:1360447476,2524ad6820589010bd01a7c9f0cec5fd:-988442920,07046d688e589010acbde06bdb0e6347:-391405832,b6e32d68f158901079e0edb3f5a6b7df:-525709960,12c3696887589010982d9a0c2514795c:-1178474773,695fd9a4e75890100f38e43c9922db59:-1521918671,933f5d2450589010147fff429c2b85c3:-1377053129,b8bed9246e58901038c2d74d88e1390b:75791492,6a3e11a4d658901004c119227bc0fed1:502367170,a20d5564745890102e853ef1096c15a6:-1194731394,46bc916411589010a6c2aaa69b411aa3:-1642944685,a69c99248458901065583d7b10e18ea6:-137552151,989c5d2482589010894cb343b681eb85:-1916950954,712cd1244c589010060a21472456281c:-1423992598,67eb99247d58901055544a117bd3a99d:545269189,d9dbdd606c589010ce164ad5dd480bfe:879646734,f34b9d6027589010b59f19903d8ce797:115136240,9065d9ecd91890107bf9d6baa4c9cd0f:1941567515,bce31dacb6189010fd18f1dcd50b33a9:524902523,8ac39168e9d4901056aba2092dda4248:1185801161,ce92dd6c4f18901084a7f2f58b362414:347187373,11a624244cd49010af8a81bd3342a874:-500502997</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_d83995dedbc0101011699fd2ca961926</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope, spUtil, $rootScope, $window, $location) {
    /* widget controller */
    var c = this;
	var apprReq=c.data.approvalRequest;
	var urlparm = $location.search();
	if(urlparm.tab)
		document.getElementById(urlparm.tab).setAttribute("class", "active");
	else
		document.getElementById("my_work").setAttribute("class", "active");
    $scope.filterData = function(filter, ticketType, tab) {
		var table = "";
		if(ticketType == "request"){
			table= "x_478823_nhorizon_request";
		}
		else if(ticketType == "response"){
			table= "x_478823_nhorizon_response_task";
		}
		
		if(tab=="pending_approval"){
			filter="numberIN"+apprReq;
		}
		$location.search(encodeURI("&amp;table="+table+"&amp;filter="+filter+"&amp;tab="+tab+"&amp;view=vendor_user"));

			
    }

}
]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description&gt;Ticket Section Agent&lt;/description&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id/&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Ticket Section Agent&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */

    data.showdashboard = false;
	var approvalRequest=[];
    var aprGr = new GlideRecord("sysapproval_approver");
	aprGr.addQuery("state","requested");
	aprGr.addQuery("approver",gs.getUserID());
	aprGr.addQuery("source_table","x_478823_nhorizon_request");
	aprGr.query();
	while(aprGr.next()){
		var reqID=aprGr.sysapproval.number+'';
		approvalRequest.push(reqID);
	}
	data.approvalRequest=approvalRequest;
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Rahul&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-04-10 13:25:38&lt;/sys_created_on&gt;&lt;sys_id&gt;d83995dedbc0101011699fd2ca961926&lt;/sys_id&gt;&lt;sys_mod_count&gt;65&lt;/sys_mod_count&gt;&lt;sys_name&gt;Ticket Section Agent&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_d83995dedbc0101011699fd2ca961926&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-27 06:39:25&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div&gt;
&lt;div class="container"&gt;
    &lt;div class="row"&gt;
    	&lt;div class="col-md-12"&gt;
            &lt;div class="panel with-nav-tabs panel-default"&gt;
                &lt;div class="panel-heading"&gt;
                        &lt;ul class="nav nav-tabs"&gt;
                            &lt;li id="my_work"&gt;&lt;a href="#ticketContent" data-toggle="tab" ng-click="filterData('assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^stateIN151,201', 'request', 'my_work')"&gt;My Work&lt;/a&gt;&lt;/li&gt;
                          &lt;li id="my_group_work"&gt;&lt;a href="#ticketContent" data-toggle="tab" ng-click="filterData('assignment_groupDYNAMICd6435e965f510100a9ad2572f2b47744^stateIN101,151,201', 'request', 'my_group_work')"&gt;My Group Work&lt;/a&gt;&lt;/li&gt;
                          &lt;li id="pending_approval"&gt;&lt;a href="#ticketContent" data-toggle="tab" ng-click="filterData('assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^state=301', 'request', 'pending_approval')"&gt;Pending Approval&lt;/a&gt;&lt;/li&gt;
                          &lt;li id="pending_response"&gt;&lt;a href="#ticketContent" data-toggle="tab" ng-click="filterData('assigned_toDYNAMIC90d1921e5f510100a9ad2572f2b477fe^stateIN1,2', 'response', 'pending_response')"&gt;Pending Response&lt;/a&gt;&lt;/li&gt;
                           &lt;li id="need_attention"&gt;&lt;a href="#ticketContent" data-toggle="tab" ng-click="filterData('assignment_groupDYNAMICd6435e965f510100a9ad2572f2b47744^stateIN1,-11,-10', 'request', 'need_attention')"&gt;Need Attention&lt;/a&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                &lt;/div&gt;
                &lt;div class="panel-body"&gt;
                    &lt;div class="tab-content"&gt;                        
                      	&lt;div class="tab-pane fade in active" id="RequestTicket"&gt;&lt;widget  id="global_table_renderer"&gt;&lt;/widget&gt;&lt;/div&gt;
                      
                  &lt;/div&gt;
                &lt;/div&gt;
                              
                               
        &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
 ]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>1223217818</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>8ae619b7dbc2101011699fd2ca96191e</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172f4808def0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Ticket Section Agent</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>16386dd78f21101089b2fff23946fa34</update_guid>
<update_guid_history>16386dd78f21101089b2fff23946fa34:1223217818,ed59fe0fd3955010f1cd1256be04e4da:-1405659133,1c3e99a82cd15010ba8706292c4d1ef1:-1832370109,f01f25f0a305901005c3711fc8760cc8:1027433050,e1ee61f02a059010503c6df5b637628b:794364951,19a36034c9419010db53c529a8434ec9:-827588989,b563e434e94190108a6fb8c3e10e3b79:1743281337,2633acb079419010c013ae2af63f578f:-1014667659,e12320f00e4190105a7952e7dfc86249:-1630410866,d0a0e8b018419010a9d494a7aa8a481e:1739196273,d2306c70494190100df6125aad641fd2:495539804,ea8dd8309441901005d03d20e5add39c:-1037751939,9394d39c020550102d5ab2e402cd1e0a:6816106,a094939c0f055010ab30d945a93405f0:-630389485,7f44df5cc00550105d77a0dc4fe9f66b:-1616603331,24341b5cdd055010031a4b222208d400:338847507,41245f5ca1055010b23074d56ca31818:2017117151,6a04db5c51055010789dcac3016cc5ed:-620885848,4a83975c1105501071831ff2d3a2faaf:1359459604,49439bd8d3055010d3b223cf05c79b48:852462645,f4a25f1c8b0550106faeeba973f3988a:668526727,4252dbd88d055010a8236afb89ced295:941352879,4e029bd8eb05501080c2d788668db27c:-35869891,2a001b98c40550104889a676f31e92e1:-396225079,d6afc7984b0550109f4a4f79ac625c73:-1535678743,1b1f43988c055010c6520a6bac67c223:1376136866,366e0b584505501002a8fca9ef876532:771403251,6fad0f180e055010a8472fcf5acf346c:618854196,390d0b18b7055010ca042ab197d6bf06:612363716,fecc03189e0550108a5d9352844901bf:1874222865,3fdbcbd4eb055010db909e0b8d52a16e:6719812,81db8bd482055010a701a9023aeccff1:-563622924,44ab4b94d7055010fbb097dc379c2bd6:-6613580,b25a8794b60550103085a3c9759a5c25:-818732052,f01a0b542c055010360e81f23f897338:710237273,0a98c75451055010e6aeee26bc957f79:-1839133303,5729f70c5d0d1010a53ff8f32118b39e:-1023386689,7ed83fc8b50d10108f30abfde5ff0b4a:-71877732,3bd77b08df0d10101e2e17a1072d7768:1548985753,71e6ff88de0d1010a59adc375f189583:-991129151,ae96b708430d101011f05c177b13da6e:1060296335,9b94fb48450d10102cc855730ecb01eb:1980819019,14147b84aa0d1010bf3edc95f7d00c92:1516888389,dbffe384e00d1010dbfecd1d6da4878f:1365171636,b479d0c8bef49010d49eb4fef85f491a:953702356,5649d88822f4901083c6c72e352d21a0:-1497741155,d3a8d8885df49010c0087ba7a2694daa:-1274080255,8468dc08caf49010ea273cee99496b06:1927247036,ee02432374e85010d12c500876fd032d:-1640644560,00d1432355e85010b02a43d186c1f512:-672496513,2e29baab7ba85010dba674a4580ac078:-2118584100,693832ab91a85010b992720e217d7e31:1884502943,fe473a2b68a850103a2fc78ed63f95a7:-340878957,4b06762bafa850101897ae22a472deb0:1499760866,0e8c6fe9d66c501007b79d233c69b624:-2034622675,4e6b2fe9476c5010aecfacd4d4487924:-1779574799,b67370aeecc810101162c230e89f1f00:-446306677,3b23b422ce0c101002dfacfac1428b9f:1159122171,4925a25e3a84101011990ee076e6a038:-1843392234,9a73a21e6b841010e828e676744ebc3a:914831518,ed33eedab28410101308329f41be6d6b:857182288,5bb26ada37841010f62f59501eaafdb1:-490796565,ca512e9a90841010cf622b6e00166cf5:1521430697,8a4be99a4e041010477d3e34ae687bbc:1067407542,d54959dee3c01010e968f9a8b5b7ad92:1527494619,d03995de0ec010106eed5e49069ce12a:1732519803</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sp_widget_bafefe7cdb70101011699fd2ca961995</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sp_widget"&gt;&lt;sp_widget action="INSERT_OR_UPDATE"&gt;&lt;category&gt;custom&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function($scope) {
    var c = this;
    var gcList = c.data.gcList.sort();
    var ccList = c.data.ccList.sort();
	var canWrite=c.data.canWrite;
    $scope.$watch(function() {
        return $scope.page.g_form.getValue('exception_reason');
    }, function(value) {
		var g_form=$scope.page.g_form;
		var po=g_form.getValue("request.invoice_header.po_details");
		console.log("PO RT-"+po);
		var state=g_form.getValue("request.state");
        console.log("value" + value);
        if ((value == "GL Code/Cost center required") &amp;&amp; po=='') {
            c.data.showInputrt = true;
        } else {
            c.data.showInputrt = false;
        }
    });

    var g_form = $scope.page.g_form;
    var counter = 0;
    var varstring = g_form.getValue("rt_npo_input").toString();
    if (varstring != "") {
        counter = 1;
        var obj = JSON.parse("[" + varstring + "]");
       
        var gcSelect0 = document.getElementById("nr_gl_code_0");
        for (var t = 0; t &lt; gcList.length; t++) {
            var gcOption0 = document.createElement('option');
            gcOption0.text = gcList[t];
            gcOption0.value = gcList[t];
            gcSelect0.add(gcOption0);
        }
        var ccSelect0 = document.getElementById("nr_cost_center_0");
        for (var s = 0; s &lt; ccList.length; s++) {
            var ccOption0 = document.createElement('option');
            ccOption0.text = ccList[s];
            ccOption0.value = ccList[s];
            ccSelect0.add(ccOption0);
        }
        console.log(obj.length);
        for (var i = 1; i &lt; obj.length; i++) {
           addRowsRT();
        }
        for (var j = 0; j &lt; obj.length; j++) {
            console.log(obj[j] + "-" + j);
            var decodeJson = obj[j];
            document.getElementById("nritem_" + j).value = decodeJson.item;
            document.getElementById("nramount_" + j).value = decodeJson.amount;

            //GL Code
            var gcSelect = document.getElementById("nr_gl_code_" + j);
            var gcIndex = gcList.indexOf(decodeJson.gl_code);
            gcSelect.value = decodeJson.gl_code;
            gcSelect.selectedIndex = gcIndex + 1;

            //Cost Center
            var ccSelect = document.getElementById("nr_cost_center_" + j);
            var ccIndex = ccList.indexOf(decodeJson.cost_center);
            ccSelect.value = decodeJson.cost_center;
            ccSelect.selectedIndex = ccIndex + 1;

            document.getElementById("nr_inl_id_" + j).value = decodeJson.inlID;
        }
		if(!canWrite){
			makeReadonly1();
		}
    }

    function makeReadonly1() {
        var el = document.getElementsByClassName("dynamicTablert1");
        for (var i = 0; i &lt; el.length; i++) {
			if(el[i].id.indexOf("nr_gl_code")&gt;=0 || el[i].id.indexOf("nr_cost_center")&gt;=0){
				el[i].disabled = true;
			}
        }
    }

    function addRowsRT() {
		console.log("Add Row NPO RT");
        var newRow = $("&lt;tr&gt;");
        var cols = "";
        cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-4 dynamicTablert1" onchange="saveDatart1()" id="nritem_' + counter + '" readOnly="true"/&gt;&lt;/td&gt;';
        cols += '&lt;td&gt;&lt;input type="text" value="" class="form-control col-sm-4 dynamicTablert1" onchange="saveDatart1()" id="nramount_' + counter + '" readOnly="true"/&gt;&lt;/td&gt;';
        cols += '&lt;td&gt;&lt;select value="" class="form-control col-sm-4 dynamicTablert1" onchange="saveDatart1()" id="nr_gl_code_' + counter + '"&gt;';
        cols += '&lt;option value=""&gt;--Select Value--&lt;/option&gt;';
        for (var g = 0; g &lt; gcList.length; g++) {
            cols += '&lt;option value=' + gcList[g] + '&gt;' + gcList[g] + '&lt;/option&gt;';
        }
        cols += '&lt;/select&gt;&lt;/td&gt;';
        cols += '&lt;td&gt;&lt;select value="" class="form-control col-sm-2 dynamicTablert1" onchange="saveDatart1()" id="nr_cost_center_' + counter + '"&gt;';
        cols += '&lt;option value=""&gt;--Select Value--&lt;/option&gt;';
        for (var c = 0; c &lt; ccList.length; c++) {
            cols += '&lt;option value=' + ccList[c] + '&gt;' + ccList[c] + '&lt;/option&gt;';
        }
        cols += '&lt;/select&gt;&lt;/td&gt;';
        cols += '&lt;td&gt;&lt;input type="hidden" value="" class="form-control col-sm-2 dynamicTablert1" id="nr_inl_id_' + counter + '"/&gt;&lt;/td&gt;';
        //        cols += '&lt;td&gt;&lt;span class="glyphicon glyphicon-trash ibtnDel dynamicTable1" value="delete" style="color:red; font-size: 24px"&gt;&lt;/span&gt;&lt;/td&gt;';
        newRow.append(cols);
        $("table.order-list2").append(newRow);
        counter++;
    }
	
    $scope.saveDatart1 = function() {
        var table = document.getElementById("myTablert1");
        console.log("Rows-" + table);
        var tableLength = table.rows.length - 2;
        var tableDataArray = [];
        console.log("table length-" + tableLength);
        var rowData = {};
        for (var i = 0; i &lt; tableLength; i++) {
            rowData.item = document.getElementById("nritem_"+i).value.toString();
            rowData.amount = document.getElementById("nramount_"+i).value.toString();
            rowData.gl_code = document.getElementById("nr_gl_code_"+i).value.toString();
            rowData.cost_center = document.getElementById("nr_cost_center_"+i).value.toString();
            rowData.inlID = document.getElementById("nr_inl_id_"+i).value.toString();
            tableDataArray.push(JSON.stringify(rowData));
        }
        console.log("Table Data is " + tableDataArray);
        var g_form = $scope.page.g_form;
        g_form.clearValue("rt_npo_input");
        g_form.setValue("rt_npo_input", tableDataArray.toString());
    }
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css/&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;true&lt;/has_preview&gt;&lt;id&gt;non_po_input_form_rt&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {
  
}]]&gt;&lt;/link&gt;&lt;name&gt;Non PO input - FORM RT&lt;/name&gt;&lt;option_schema/&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles/&gt;&lt;script&gt;&lt;![CDATA[(function() {
    /* populate the 'data' object */
    /* e.g., data.table = $sp.getValue('table'); */
    data.showInputrt = false;

    var rtGR = new GlideRecord("x_478823_nhorizon_response_task");
    rtGR.get($sp.getParameter("sys_id"));

    var companyCode = rtGR.request.invoice_header.company_code;
	data.canWrite=rtGR.canWrite();
	
    var gcArr = [];
    var gcGR = new GlideRecord('x_478823_nhorizon_gl_account');
    gcGR.addQuery("active", true);
    //gcGR.addQuery("company_code",companyCode);
    gcGR.query();
    while (gcGR.next()) {
        gcArr.push(gcGR.gl_account + '');
    }
    data.gcList = gcArr;
    gs.log("GC List-" + data.gcList);
    var ccArr = [];
    var ccGR = new GlideRecord('x_478823_nhorizon_cost_center');
    ccGR.addQuery("active", true);
    //ccGR.addQuery("company_code",companyCode);
    ccGR.query();
    while (ccGR.next()) {
        ccArr.push(ccGR.cost_center_code + '');
    }
    data.ccList = ccArr;
    gs.log("CC List-" + data.ccList);
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;false&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;Sachin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2020-05-13 11:46:34&lt;/sys_created_on&gt;&lt;sys_id&gt;bafefe7cdb70101011699fd2ca961995&lt;/sys_id&gt;&lt;sys_mod_count&gt;106&lt;/sys_mod_count&gt;&lt;sys_name&gt;Non PO input - FORM RT&lt;/sys_name&gt;&lt;sys_package display_value="Global" source="global"&gt;global&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_bafefe7cdb70101011699fd2ca961995&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-15 11:18:55&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="container col-sm-12"&gt;
  &lt;div &gt;
    
    &lt;table id="myTablert1" class="table order-list2" ng-show="c.data.showInputrt"&gt;
    &lt;thead&gt;
      &lt;tr&gt;&lt;th&gt;&lt;h4&gt;Invoice Line Items&lt;/h4&gt;&lt;/th&gt;&lt;/tr&gt;
        &lt;tr&gt;
          	&lt;td&gt;Item&lt;/td&gt;
            &lt;td&gt;Amount&lt;/td&gt;
            &lt;td&gt;GL Code&lt;/td&gt;
          	&lt;td&gt;Cost Center&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
          	 &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="nritem_0"  value="" class="form-control dynamicTablert1"  onchange="saveDatart1()" readOnly="true"/&gt;
            &lt;/td&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;input type="text" id="nramount_0"  value="" class="form-control dynamicTablert1"  onchange="saveDatart1()" readOnly="true"/&gt;
            &lt;/td&gt;
            &lt;td class="col-sm-2"&gt;
                &lt;select id="nr_gl_code_0"  value="" class="form-control dynamicTablert1" onchange="saveDatart1()"&gt;
              		&lt;option value=""&gt;--Select Value--&lt;/option&gt;
     			&lt;/select&gt;
            &lt;/td&gt;
           &lt;td class="col-sm-2"&gt;
                &lt;select id="nr_cost_center_0"  value="" class="form-control dynamicTablert1" onchange="saveDatart1()"&gt;
                	&lt;option value=""&gt;--Select Value--&lt;/option&gt;
                &lt;/select&gt;
            &lt;/td&gt;
           &lt;td class="col-sm-2"&gt;
                &lt;input type="hidden" id="nr_inl_id_0"  value="" class="form-control dynamicTablert1"/&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
    
&lt;/table&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
  function saveDatart1(){
    console.log("Saving Data");
  angular.element(document.getElementById("myTablert1")).scope().saveDatart1();
  }
&lt;/script&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;&lt;/record_update&gt;</payload>
<payload_hash>-1573712097</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>8ee619b7dbc2101011699fd2ca96191d</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172b7b424800000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table/>
<target_name>Non PO input - FORM RT</target_name>
<type>Widget</type>
<update_domain>global</update_domain>
<update_guid>3315386f5fd19010d8b277e161cc9c9f</update_guid>
<update_guid_history>3315386f5fd19010d8b277e161cc9c9f:-1573712097,6ef4102f23d1901057feb94e15c08c76:-967330638,92235cab76d19010ff888852e3991dfe:1369534129,9d13546b5fd19010283bb8b5a7067a0c:2006862969,065c49d38b1d50109ee89ae78f9e72af:72531173,102ccd93521d5010cef56ac51c237519:803800085,36dbc1978f1d501093312c2f265f2c49:1381552098,197bc597671d5010cb3535585ccb3a22:-1647833660,e27609932a1d501020bb0ccfc4d90c4b:160610090,e27f305f36d950100b610dfecf8fda46:403235376,4a9e749f66d950104aee9946b6caf1c1:-2031808466,697e745fced950105837866ab4eef2c0:593006120,730e705f46d9501057ba4d2389d8ca3c:-800880568,8b6d301f91d95010720aa82e220637c0:-181055128,ac7cb41f35d9501099a1af1860694155:1642618862,90f974db07d95010f4458a3b89751884:-181055128,b9caa09329d95010ce81a28c1f64cc9f:218817853,42a7a4dfce995010ad1d10f8c25a0ae8:850688317,17e5a4df3d995010f3c859ada292f389:-745957191,594acedaedc91010e2968d99d5a8a72a:1116751689,cda802dac3c91010c79dc64123ff3c59:2068069022,5dda3d520bc91010fe19f6f8a95a08a2:490123789,2d9a755259c910101fbead160ef79686:-1397630558,024a3d52e3c91010e46029002d837c9b:-353928710,390af152e1c91010cba7617daff74bc3:215119505,6869bddeb589101057aeec6062e34ca5:1749445546,11f83112f4c91010cb6b58750d784772:-1869778485,7648b112cdc910102b1d9dc67914cc2f:-1129061554,26a4b55ea089101016dce8c3ce68482a:-984545963,022f191e864910109977a81ef5286229:-48275431,09e48efc6205901015049c6b8fec5560:-605405671,4b95d7f282b0501024d52d7946362c42:2111322911,6f1557b2fab05010ba820f702b5e0a58:360483449,b5d31732a6b05010a59e747f382ee6cc:23056367,19039b7274b05010538ae0b24b6c0567:1918311012,847ed23e36fc1010b9a2a828763419d2:-743220065,8c84316e9a341010d35823ffc3aee1f9:2113142706,5e3435aa66341010a6b511b0e476a75a:-1026270971,cc7f9deec0f010108c8ba0121217dfc0:-112980070,715f5dae5ef01010683f301d2864c64b:194010189,be1f11eee4f01010667edf2cf9f37bd2:-1295374419,c89eddaeb3f01010c4f270d78fb5fe81:368517509,c70e156eb2f01010334caa8ca44b3ae5:110295350,baad556e0ef010108d04338b428df907:-560407684,877c596e5df010101fcf652c65cca254:2088022004,af3b992e5ef01010cfaa7447f9d7bd5d:-1968527904,824a95e6baf010104e1373464716a2b3:1498989868,65410992ed789010a2061e0292461c5b:-1887347482,bbffbc16c778901061ee117e667f2c7d:2064576768,d77fbc161a789010180a73d93e61e067:837211511,d42f389243789010908fa33e9f7ccc3f:-1771597138,c7fdf092fc7890101220090cae04284c:-622198002,488d3492e97890102b9a8bb4498eab59:-551266129,185bf4928d789010e9e67e07967eb88d:-1400626151,60fab4de053890102f050042b92bd8d7:-2107962310,ce4a3c52707890102a32ffc03597da48:297926670,292a3c122278901065c9cb0d22e96b1c:-1882978258,6de97852a1789010017b16c4b358e176:1174523470,65f83c125e78901040c3e44fdb5e0405:948279916,23c69c1e9cf490105b0eb5eef81f3372:-181666093,c346141ed3f49010060d98849d0be5e4:-2063871381,1616d41e8ef49010f8f8c8243e59a199:1583598269,cb85d0da6ef4901048ceca1bcdfd615e:-641722312,fde3185a03f490105dd63201c129d9ef:-1563737855,ad32185a82f49010e43f202562ae74b0:-1006136060,061d23312f7c501034a2d927c20d2ae1:120728988,c47c633dc23c50102319f9aeb8f11171:1184754776,0a2be3fdbb3c50107396f10f095126ef:-9176961,969a2f7ddc3c501040796293edbe0bf0:-1760509098,9e3963bde53c5010e867b5b754bb6445:-588100100,a4c82f7d6b3c501029fb3cdc274d1be6:521569662,8948e77dd03c50107b294616bd6352f0:93046267,97e7eff9bd3c5010e76731a66cdfaa7f:1496583235,b9a7237dfa3c5010faf2edbb7e141692:-1194945109,fb27e73daa3c501092e8860a502156ce:377966149,9407ab3d593c50108bdb29a72586c1b0:-1213550651,56a6aff9413c5010706da8966c2963cc:-1101355760,5356273df33c5010a6f63a750fb6d992:-1001287088,4216aff9a23c5010ffd8eba7ef46a9a0:1661230460,40b56ff9843c5010044264ca77a58e55:1981470428,3d0d037939f85010cb5446e6b67526b8:1211569741,eb4b033dfcf850106ee6227d204953bd:-315852565,7b0a47f95ff85010c103d6315d92a646:1827653011,f2c887f599f85010e79ba00880669e58:2016979599,e138c3b977f85010ed8eb691786f8fe3:1994152902,fae703b978f85010a713fd48f9ee91f8:-1969673994,2e06a6ed243050108db0ba4e0613e76d:664592368,4515eeadf33050109013838ee0385cdf:1779299875,34946eadc53050105e447e37eacc8c10:-1495975573,7d14a22dd83050102afdf7464f82de2f:2030753405,4bcedaa9cd30501010ae5e641defc2b5:-621200981,995e52a9e23050103607e2b9a5a33bb1:1375209610,0ffd52a991305010099ac2a2c82b75a3:-142685577,226d92a9c1305010d3757aa2a2f0154d:852558379,3127cea904fc10105d1e1c6eab168d90:-404491176,d6c6c62d00fc1010189deaba0796e8d2:1853452822,1d758ee969fc1010cc8e70d4f2a01eba:585488553,7b354ae999fc10100c2e9af7cda8d977:1381209417,dae4ce29fafc101035792ad722127940:927713446,afd38ea964fc10100c07bdd4d81dc9be:1396810996,0bc2c2a92afc1010cf056b18c22baf94:1448492674,a6afb9a5affc101008f9cecfeff07a81:-1370589315,b83df1a533fc101057df468e3924e715:-1515333823,18fc796519fc10103ce2d3601de22fb4:182096643,456c31a5c1fc10103f096fa3279bc42b:-1823708637,7b2f7abce17010107054336f04b73c33:1597976493,c7fefe7cd8701010438512a02365b698:2010560964</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="Global">global</application>
<category>customer</category>
<comments/>
<name>sys_ui_action_42df02e20a0a0b340080e61b551f2909</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_ui_action"&gt;&lt;sys_ui_action action="INSERT_OR_UPDATE"&gt;&lt;action_name&gt;sysverb_update&lt;/action_name&gt;&lt;active&gt;true&lt;/active&gt;&lt;client&gt;false&lt;/client&gt;&lt;client_script_v2&gt;&lt;![CDATA[function onClick(g_form) {

}]]&gt;&lt;/client_script_v2&gt;&lt;comments&gt;Update button on existing records.&amp;#13;
Saved record and redirects to previous screen (usually a list)&lt;/comments&gt;&lt;condition&gt;current.isValidRecord() &amp;amp;&amp;amp; current.canWrite() &amp;amp;&amp;amp; gs.getProperty('glide.ui.update_is_submit') != 'true' &amp;amp;&amp;amp; (current.getTableName()!="x_478823_nhorizon_response_task" ||gs.hasRole("admin"))&lt;/condition&gt;&lt;form_action&gt;true&lt;/form_action&gt;&lt;form_button&gt;true&lt;/form_button&gt;&lt;form_button_v2&gt;false&lt;/form_button_v2&gt;&lt;form_context_menu&gt;false&lt;/form_context_menu&gt;&lt;form_link&gt;false&lt;/form_link&gt;&lt;form_menu_button_v2&gt;false&lt;/form_menu_button_v2&gt;&lt;form_style/&gt;&lt;hint/&gt;&lt;isolate_script&gt;false&lt;/isolate_script&gt;&lt;list_action&gt;false&lt;/list_action&gt;&lt;list_banner_button&gt;false&lt;/list_banner_button&gt;&lt;list_button&gt;false&lt;/list_button&gt;&lt;list_choice&gt;false&lt;/list_choice&gt;&lt;list_context_menu&gt;false&lt;/list_context_menu&gt;&lt;list_link&gt;false&lt;/list_link&gt;&lt;list_save_with_form_button&gt;false&lt;/list_save_with_form_button&gt;&lt;list_style/&gt;&lt;name&gt;Update&lt;/name&gt;&lt;onclick/&gt;&lt;order&gt;-100&lt;/order&gt;&lt;script&gt;&lt;![CDATA[current.update();]]&gt;&lt;/script&gt;&lt;show_insert&gt;false&lt;/show_insert&gt;&lt;show_multiple_update&gt;false&lt;/show_multiple_update&gt;&lt;show_query&gt;false&lt;/show_query&gt;&lt;show_update&gt;true&lt;/show_update&gt;&lt;sys_class_name&gt;sys_ui_action&lt;/sys_class_name&gt;&lt;sys_created_by&gt;glide.maint&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2008-02-22 20:40:52&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;42df02e20a0a0b340080e61b551f2909&lt;/sys_id&gt;&lt;sys_mod_count&gt;22&lt;/sys_mod_count&gt;&lt;sys_name&gt;Update&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="System (glidesoft)" source="glidesoft"&gt;8ae93f02db33001011699fd2ca961994&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_action_42df02e20a0a0b340080e61b551f2909&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Sachin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-06-01 14:56:28&lt;/sys_updated_on&gt;&lt;table&gt;global&lt;/table&gt;&lt;ui11_compatible&gt;false&lt;/ui11_compatible&gt;&lt;ui16_compatible&gt;false&lt;/ui16_compatible&gt;&lt;/sys_ui_action&gt;&lt;/record_update&gt;</payload>
<payload_hash>1409240073</payload_hash>
<remote_update_set display_value=" New Horizon 02_07_2020_Default">c2e619b7dbc2101011699fd2ca96191b</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>Rahul</sys_created_by>
<sys_created_on>2020-07-23 15:12:06</sys_created_on>
<sys_id>8ee619b7dbc2101011699fd2ca961920</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_recorded_at>172706246ab0000001</sys_recorded_at>
<sys_updated_by>Rahul</sys_updated_by>
<sys_updated_on>2020-07-23 15:12:06</sys_updated_on>
<table>global</table>
<target_name>Update</target_name>
<type>UI Action</type>
<update_domain>global</update_domain>
<update_guid>c2a0ad8332411010c888808f77510095</update_guid>
<update_guid_history>c2a0ad8332411010c888808f77510095:1409240073,d62f51e7a3301010a481548202299b79:1099872228,e8addd67f03010105346db3b7a202c9f:-14215339,ca8d9d67b0301010924c60497b7bbc1c:1099872228,f53d9967c1301010fc49f8ffd3cec99f:-14215339,b53d9967cf3010106bd55bc33901949d:752516154</update_guid_history>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
